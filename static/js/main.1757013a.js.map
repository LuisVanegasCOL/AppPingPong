{"version":3,"file":"static/js/main.1757013a.js","mappings":"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","sources":["src/theme/index.ts","src/api/authService.ts","src/api/api.ts","src/context/AppContext.tsx","src/screens/LoginScreen.tsx","src/api/playerService.ts","src/screens/HomeScreen.tsx","src/screens/PlayersScreen.tsx","src/api/tournamentService.ts","src/screens/TournamentScreen.tsx","src/api/rankingService.ts","src/screens/RankingScreen.tsx","src/screens/SettingsScreen.tsx","src/screens/AddMatchScreen.tsx","src/screens/MatchesScreen.tsx","src/navigation/AppNavigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { MD3DarkTheme, MD3LightTheme } from 'react-native-paper';\nimport { DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from '@react-navigation/native';\n\nconst CombinedDefaultTheme = {\n  ...MD3LightTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...NavigationDefaultTheme.colors,\n  },\n};\n\nconst CombinedDarkTheme = {\n  ...MD3DarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n  },\n};\n\nexport { CombinedDefaultTheme, CombinedDarkTheme };\n\nexport const lightTheme = {\n  ...MD3LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    primary: '#2196F3',\n    onPrimary: '#FFFFFF',\n    primaryContainer: '#E3F2FD',\n    onPrimaryContainer: '#004B87',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#CCFFF9',\n    onSecondaryContainer: '#002D2A',\n    tertiary: '#4CAF50',\n    onTertiary: '#FFFFFF',\n    tertiaryContainer: '#E8F5E9',\n    onTertiaryContainer: '#002204',\n    error: '#B00020',\n    onError: '#FFFFFF',\n    errorContainer: '#FDECEA',\n    onErrorContainer: '#410002',\n    background: '#FFFFFF',\n    onBackground: '#000000',\n    surface: '#FFFFFF',\n    onSurface: '#000000',\n    surfaceVariant: '#F5F5F5',\n    onSurfaceVariant: '#757575',\n    outline: '#757575',\n    outlineVariant: '#BDBDBD',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#000000',\n    inverseOnSurface: '#FFFFFF',\n    inversePrimary: '#90CAF9',\n    elevation: {\n      level0: 'transparent',\n      level1: '#F5F5F5',\n      level2: '#EEEEEE',\n      level3: '#E0E0E0',\n      level4: '#BDBDBD',\n      level5: '#9E9E9E',\n    },\n  },\n};\n\nexport const darkTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: '#90CAF9',\n    onPrimary: '#003B6F',\n    primaryContainer: '#004B87',\n    onPrimaryContainer: '#D1E4FF',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#004D40',\n    onSecondaryContainer: '#70F7EE',\n    tertiary: '#81C784',\n    onTertiary: '#003314',\n    tertiaryContainer: '#004B1C',\n    onTertiaryContainer: '#95F5A0',\n    error: '#CF6679',\n    onError: '#000000',\n    errorContainer: '#93000A',\n    onErrorContainer: '#FFB4AB',\n    background: '#121212',\n    onBackground: '#FFFFFF',\n    surface: '#121212',\n    onSurface: '#FFFFFF',\n    surfaceVariant: '#2C2C2C',\n    onSurfaceVariant: '#BDBDBD',\n    outline: '#757575',\n    outlineVariant: '#424242',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#FFFFFF',\n    inverseOnSurface: '#000000',\n    inversePrimary: '#1976D2',\n    elevation: {\n      level0: 'transparent',\n      level1: '#1E1E1E',\n      level2: '#222222',\n      level3: '#242424',\n      level4: '#272727',\n      level5: '#2C2C2C',\n    },\n  },\n};\n\nexport type AppTheme = typeof lightTheme; ","import { API_URL } from './api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport interface User {\n  id: number;\n  username: string;\n  role: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nclass AuthService {\n  private token: string | null = null;\n  private user: User | null = null;\n\n  constructor() {\n    console.log('🔄 Inicializando AuthService');\n    this.loadAuthData();\n  }\n\n  private async loadAuthData() {\n    try {\n      console.log('🔄 Cargando datos de autenticación...');\n      const [token, userStr] = await Promise.all([\n        AsyncStorage.getItem('token'),\n        AsyncStorage.getItem('user')\n      ]);\n      \n      console.log('🔑 Token cargado:', token ? 'Sí' : 'No');\n      \n      // Verificar si el token existe y no ha expirado\n      if (token) {\n        try {\n          const tokenData = JSON.parse(atob(token.split('.')[1]));\n          const expirationTime = tokenData.exp * 1000; // Convertir a milisegundos\n          \n          if (Date.now() >= expirationTime) {\n            console.log('⚠️ Token expirado, limpiando datos...');\n            await this.logout();\n            return;\n          }\n        } catch (error) {\n          console.error('❌ Error al verificar token:', error);\n          await this.logout();\n          return;\n        }\n      }\n      \n      this.token = token;\n      if (userStr) {\n        this.user = JSON.parse(userStr);\n        console.log('👤 Usuario cargado:', this.user?.username || 'No disponible');\n      }\n    } catch (error) {\n      console.error('❌ Error al cargar datos de autenticación:', error);\n      await this.logout();\n    }\n  }\n\n  async register(username: string, password: string): Promise<void> {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Error al registrar usuario');\n    }\n  }\n\n  async login(username: string, password: string): Promise<AuthResponse> {\n    console.log('🔄 Iniciando login para:', username);\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      console.error('❌ Error en login:', error);\n      throw new Error(error.error || 'Error al iniciar sesión');\n    }\n\n    const data = await response.json();\n    console.log('✅ Login exitoso, guardando datos...');\n    await this.setAuthData(data);\n    return data;\n  }\n\n  async logout(): Promise<void> {\n    this.token = null;\n    this.user = null;\n    await AsyncStorage.multiRemove(['token', 'user']);\n  }\n\n  private async setAuthData(data: AuthResponse): Promise<void> {\n    console.log('🔄 Guardando datos de autenticación...');\n    this.token = data.token;\n    this.user = data.user;\n    try {\n      await AsyncStorage.multiSet([\n        ['token', data.token],\n        ['user', JSON.stringify(data.user)]\n      ]);\n      console.log('✅ Datos guardados correctamente');\n      console.log('🔑 Token guardado:', this.token ? 'Sí' : 'No');\n      console.log('👤 Usuario guardado:', this.user?.username);\n    } catch (error) {\n      console.error('❌ Error al guardar datos:', error);\n      throw error;\n    }\n  }\n\n  getToken(): string | null {\n    return this.token;\n  }\n\n  getUser(): User | null {\n    return this.user;\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.token;\n  }\n\n  isAdmin(): boolean {\n    return this.user?.role === 'admin';\n  }\n}\n\nexport const authService = new AuthService(); ","import axios from 'axios';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authService } from './authService';\n\n// Configuración de la URL base según la plataforma\nexport const API_URL = Platform.select({\n  android: 'http://10.0.2.2:8080', // Para el emulador de Android\n  ios: 'http://localhost:8080',    // Para el simulador de iOS\n  default: 'http://localhost:8080' // Para desarrollo web\n});\n\n// Crear instancia de axios con la configuración base\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para agregar el token de autenticación\napi.interceptors.request.use(\n  async (config) => {\n    try {\n      const token = await AsyncStorage.getItem('token');\n      console.log('🔍 Interceptor - Token recuperado:', token ? 'Sí' : 'No');\n      \n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n        console.log('🔑 Interceptor - Token agregado a los headers');\n        console.log('🔧 Interceptor - Headers completos:', JSON.stringify(config.headers, null, 2));\n      } else {\n        console.warn('⚠️ Interceptor - No se encontró token de autenticación');\n      }\n\n      console.log('📤 Interceptor - Configuración de la solicitud:', {\n        url: config.url,\n        method: config.method,\n        baseURL: config.baseURL\n      });\n    } catch (error) {\n      console.error('❌ Interceptor - Error al obtener el token:', error);\n    }\n    return config;\n  },\n  (error) => {\n    console.error('❌ Interceptor - Error en la configuración:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para manejar respuestas\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response?.status === 403) {\n      console.log('⚠️ Error 403 detectado, limpiando datos de autenticación...');\n      await authService.logout();\n      // Redirigir al login\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Definir los tipos de las respuestas esperadas\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n}\n\nexport interface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name?: string;\n  player2_name?: string;\n  winner_name?: string;\n}\n\nexport interface Tournament {\n  id_torneo: number;\n  nombre: string;\n  fecha_inicio: string;\n  fecha_fin: string;\n  estado: string;\n}\n\nexport interface Ranking {\n  id_rankings: number;\n  id_torneo: number;\n  id_jugador: number;\n  posicion: number;\n  partidas_ganadas: number;\n  partidas_perdidas: number;\n  nombre_jugador?: string;\n  nombre_torneo?: string;\n}\n\n// Funciones para interactuar con la API\nexport const getPlayers = async (): Promise<Player[]> => {\n  try {\n    const response = await api.get('/players');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener jugadores:', error);\n    throw error;\n  }\n};\n\nexport const addPlayer = async (name: string): Promise<Player> => {\n  try {\n    const response = await api.post('/players', { name });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar jugador:', error);\n    throw error;\n  }\n};\n\nexport const addMatch = async (\n  player1Id: number,\n  player2Id: number,\n  player1Result: string,\n  player2Result: string\n): Promise<Match> => {\n  try {\n    const requestBody = {\n      player1_id: player1Id,\n      player2_id: player2Id,\n      player1_result: player1Result,\n      player2_result: player2Result\n    };\n\n    console.log('🚀 Iniciando solicitud POST a /matches');\n    console.log('📦 Datos a enviar:', requestBody);\n    console.log('🔧 Configuración de la solicitud:', {\n      url: api.defaults.baseURL + '/matches',\n      headers: api.defaults.headers\n    });\n\n    const response = await api.post('/matches', requestBody);\n    console.log('✅ Respuesta del servidor:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error al agregar partida:', error);\n    if (axios.isAxiosError(error)) {\n      console.error('Detalles del error:', {\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data,\n        config: {\n          url: error.config?.url,\n          method: error.config?.method,\n          headers: error.config?.headers,\n          baseURL: error.config?.baseURL\n        }\n      });\n    }\n    throw error;\n  }\n};\n\nexport const getMatches = async (): Promise<Match[]> => {\n  try {\n    const response = await api.get('/matches');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener partidas:', error);\n    throw error;\n  }\n};\n\nexport const deletePlayer = async (id: number): Promise<void> => {\n  try {\n    console.log('🚀 Iniciando solicitud DELETE a:', `/players/${id}`);\n    await api.delete(`/players/${id}`);\n    console.log('✅ Jugador eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar jugador:', error);\n    throw error;\n  }\n};\n\nexport const deleteMatch = async (id: number): Promise<void> => {\n  try {\n    await api.post(`/matches/${id}/delete`);\n    console.log('✅ Partida eliminada correctamente');\n  } catch (error) {\n    console.error('Error al eliminar partida:', error);\n    throw error;\n  }\n};\n\n// Funciones para torneos\nexport const getTournaments = async (): Promise<Tournament[]> => {\n  try {\n    const response = await api.get('/torneos');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneos:', error);\n    throw error;\n  }\n};\n\nexport const getTournament = async (id: number): Promise<Tournament> => {\n  try {\n    const response = await api.get(`/torneos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneo:', error);\n    throw error;\n  }\n};\n\nexport const addTournament = async (tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> => {\n  try {\n    const response = await api.post('/torneos', tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear torneo:', error);\n    throw error;\n  }\n};\n\nexport const updateTournament = async (id: number, tournament: Partial<Tournament>): Promise<Tournament> => {\n  try {\n    const response = await api.put(`/torneos/${id}`, tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar torneo:', error);\n    throw error;\n  }\n};\n\nexport const deleteTournament = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/torneos/${id}`);\n    console.log('✅ Torneo eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar torneo:', error);\n    throw error;\n  }\n};\n\n// Funciones para rankings\nexport const getTournamentRankings = async (tournamentId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/torneo/${tournamentId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del torneo:', error);\n    throw error;\n  }\n};\n\nexport const getPlayerRankings = async (playerId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/jugador/${playerId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del jugador:', error);\n    throw error;\n  }\n};\n\nexport const addRanking = async (ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> => {\n  try {\n    const response = await api.post('/rankings', ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear ranking:', error);\n    throw error;\n  }\n};\n\nexport const updateRanking = async (id: number, ranking: Partial<Ranking>): Promise<Ranking> => {\n  try {\n    const response = await api.put(`/rankings/${id}`, ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar ranking:', error);\n    throw error;\n  }\n};\n\nexport const deleteRanking = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/rankings/${id}`);\n    console.log('✅ Ranking eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar ranking:', error);\n    throw error;\n  }\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MD3Theme } from 'react-native-paper';\nimport { CombinedDefaultTheme } from '../theme';\nimport { API_URL } from '../api/api';\nimport { authService } from '../api/authService';\n\ninterface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\ninterface Match {\n  id: number;\n  player1: Player;\n  player2: Player;\n  winner?: Player;\n  date: Date;\n  comments: Comment[];\n}\n\ninterface Tournament {\n  id: number;\n  name: string;\n  description: string;\n  startDate: Date;\n  maxPlayers: number;\n  location: string;\n  players: Player[];\n  matches: Match[];\n  status: 'pending' | 'in_progress' | 'completed';\n}\n\ninterface Comment {\n  id: number;\n  matchId: number;\n  userId: number;\n  text: string;\n  timestamp: Date;\n}\n\nexport interface AppContextType {\n  theme: MD3Theme;\n  isOfflineMode: boolean;\n  soundEnabled: boolean;\n  toggleOfflineMode: () => void;\n  toggleSound: () => void;\n  players: Player[];\n  matches: Match[];\n  tournaments: Tournament[];\n  comments: Comment[];\n  addPlayer: (player: Omit<Player, 'id' | 'stats'>) => Promise<void>;\n  updatePlayer: (player: Player) => Promise<void>;\n  addLocalMatch: (match: Omit<Match, 'id' | 'comments'>) => Promise<Match>;\n  addComment: (matchId: number, text: string) => Promise<void>;\n  createTournament: (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => Promise<void>;\n  updateTournament: (tournament: Tournament) => Promise<void>;\n  isAuthenticated: boolean;\n  setIsAuthenticated: (value: boolean) => void;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      const storedPlayers = await AsyncStorage.getItem('players');\n      const storedMatches = await AsyncStorage.getItem('matches');\n      const storedTournaments = await AsyncStorage.getItem('tournaments');\n      const storedComments = await AsyncStorage.getItem('comments');\n      const storedSoundEnabled = await AsyncStorage.getItem('soundEnabled');\n\n      if (storedPlayers) setPlayers(JSON.parse(storedPlayers));\n      if (storedMatches) setMatches(JSON.parse(storedMatches));\n      if (storedTournaments) setTournaments(JSON.parse(storedTournaments));\n      if (storedComments) setComments(JSON.parse(storedComments));\n      if (storedSoundEnabled !== null) setSoundEnabled(JSON.parse(storedSoundEnabled));\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n\n  const saveData = async () => {\n    try {\n      await AsyncStorage.setItem('players', JSON.stringify(players));\n      await AsyncStorage.setItem('matches', JSON.stringify(matches));\n      await AsyncStorage.setItem('tournaments', JSON.stringify(tournaments));\n      await AsyncStorage.setItem('comments', JSON.stringify(comments));\n      await AsyncStorage.setItem('soundEnabled', JSON.stringify(soundEnabled));\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n\n  const toggleOfflineMode = () => setIsOfflineMode(!isOfflineMode);\n  const toggleSound = async () => {\n    const newSoundEnabled = !soundEnabled;\n    setSoundEnabled(newSoundEnabled);\n    await AsyncStorage.setItem('soundEnabled', JSON.stringify(newSoundEnabled));\n  };\n\n  const addPlayer = async (player: Omit<Player, 'id' | 'stats'>) => {\n    const newPlayer: Player = {\n      ...player,\n      id: players.length + 1,\n      stats_wins: 0,\n      stats_losses: 0,\n      stats_draws: 0,\n    };\n    setPlayers([...players, newPlayer]);\n    await saveData();\n  };\n\n  const updatePlayer = async (player: Player) => {\n    setPlayers(players.map(p => p.id === player.id ? player : p));\n    await saveData();\n  };\n\n  const addLocalMatch = async (match: Omit<Match, 'id' | 'comments'>) => {\n    try {\n      // Crear la nueva partida\n      const newMatch: Match = {\n        ...match,\n        id: matches.length + 1,\n        comments: [],\n      };\n\n      // Actualizar las estadísticas de los jugadores\n      const updatedPlayers = players.map(player => {\n        if (player.id === match.player1.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        if (player.id === match.player2.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        return player;\n      });\n\n      // Actualizar el estado\n      setMatches(prevMatches => [...prevMatches, newMatch]);\n      setPlayers(updatedPlayers);\n\n      // Guardar los cambios\n      await Promise.all([\n        AsyncStorage.setItem('matches', JSON.stringify([...matches, newMatch])),\n        AsyncStorage.setItem('players', JSON.stringify(updatedPlayers))\n      ]);\n\n      // Recargar los datos del backend\n      try {\n        const [updatedMatches, updatedPlayers] = await Promise.all([\n          fetch(`${API_URL}/matches`).then(res => res.json()),\n          fetch(`${API_URL}/players`).then(res => res.json())\n        ]);\n\n        setMatches(updatedMatches);\n        setPlayers(updatedPlayers);\n      } catch (error) {\n        console.error('Error al recargar datos del backend:', error);\n      }\n\n      return newMatch;\n    } catch (error) {\n      console.error('Error al agregar partida:', error);\n      throw error;\n    }\n  };\n\n  const addComment = async (matchId: number, text: string) => {\n    const newComment: Comment = {\n      id: comments.length + 1,\n      matchId,\n      userId: 1, // TODO: Implementar sistema de usuarios\n      text,\n      timestamp: new Date(),\n    };\n    setComments([...comments, newComment]);\n    await saveData();\n  };\n\n  const createTournament = async (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => {\n    const newTournament: Tournament = {\n      ...tournament,\n      id: tournaments.length + 1,\n      players: [],\n      matches: [],\n      status: 'pending',\n    };\n    setTournaments([...tournaments, newTournament]);\n    await saveData();\n  };\n\n  const updateTournament = async (tournament: Tournament) => {\n    setTournaments(tournaments.map(t => t.id === tournament.id ? tournament : t));\n    await saveData();\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        theme: CombinedDefaultTheme,\n        isOfflineMode,\n        soundEnabled,\n        toggleOfflineMode,\n        toggleSound,\n        players,\n        matches,\n        tournaments,\n        comments,\n        addPlayer,\n        updatePlayer,\n        addLocalMatch,\n        addComment,\n        createTournament,\n        updateTournament,\n        isAuthenticated,\n        setIsAuthenticated,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import React, { useState } from 'react';\nimport { View, StyleSheet, Alert } from 'react-native';\nimport { Text, TextInput, Button, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { authService } from '../api/authService';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\n\ntype LoginScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst LoginScreen = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const theme = useTheme();\n  const navigation = useNavigation<LoginScreenNavigationProp>();\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      Alert.alert('Error', 'Por favor ingresa usuario y contraseña');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await authService.login(username, password);\n      if (response.token) {\n        // Usamos reset para navegar a MainTabs\n        navigation.reset({\n          index: 0,\n          routes: [{ name: 'MainTabs' }],\n        });\n      }\n    } catch (error: any) {\n      Alert.alert('Error', error?.message || 'Error en el inicio de sesión');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <View style={styles.header}>\n        <MaterialCommunityIcons name=\"table-tennis\" size={80} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Ping Pong App\n        </Text>\n        <Text variant=\"bodyLarge\" style={styles.subtitle}>\n          Inicia sesión para continuar\n        </Text>\n      </View>\n\n      <View style={styles.form}>\n        <TextInput\n          label=\"Usuario\"\n          value={username}\n          onChangeText={setUsername}\n          mode=\"outlined\"\n          left={<TextInput.Icon icon=\"account\" />}\n          style={styles.input}\n          autoCapitalize=\"none\"\n        />\n\n        <TextInput\n          label=\"Contraseña\"\n          value={password}\n          onChangeText={setPassword}\n          mode=\"outlined\"\n          secureTextEntry\n          left={<TextInput.Icon icon=\"lock\" />}\n          style={styles.input}\n        />\n\n        <Button\n          mode=\"contained\"\n          onPress={handleLogin}\n          loading={loading}\n          style={styles.button}\n        >\n          Iniciar Sesión\n        </Button>\n\n        <Text style={styles.credentials}>\n          Usuario: admin{'\\n'}Contraseña: admin\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  header: {\n    alignItems: 'center',\n    marginTop: 60,\n    marginBottom: 40,\n  },\n  title: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  subtitle: {\n    marginTop: 10,\n    textAlign: 'center',\n    opacity: 0.7,\n  },\n  form: {\n    width: '100%',\n  },\n  input: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 24,\n  },\n  credentials: {\n    marginTop: 20,\n    textAlign: 'center',\n    opacity: 0.5,\n  },\n});\n\nexport default LoginScreen; ","import { api } from './api';\nimport { authService } from './authService';\nimport axios from 'axios';\n\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\nexport const playerService = {\n  getPlayers: async (): Promise<Player[]> => {\n    try {\n      console.log('🚀 Iniciando solicitud GET a /players');\n      console.log('📡 URL base:', api.defaults.baseURL);\n      const response = await api.get('/players');\n      console.log('✅ Respuesta del servidor:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('❌ Error al obtener jugadores:', error);\n      if (axios.isAxiosError(error)) {\n        console.error('Detalles del error:', {\n          status: error.response?.status,\n          statusText: error.response?.statusText,\n          data: error.response?.data,\n          config: {\n            url: error.config?.url,\n            method: error.config?.method,\n            headers: error.config?.headers\n          }\n        });\n      }\n      throw error;\n    }\n  },\n\n  createPlayer: async (player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.post('/players', player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear jugador:', error);\n      throw error;\n    }\n  },\n\n  updatePlayer: async (id: number, player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.put(`/players/${id}`, player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al actualizar jugador:', error);\n      throw error;\n    }\n  },\n\n  deletePlayer: async (id: number): Promise<void> => {\n    try {\n      await api.delete(`/players/${id}`);\n    } catch (error) {\n      console.error('Error al eliminar jugador:', error);\n      throw error;\n    }\n  },\n\n  addVictory: async (id: number): Promise<void> => {\n    try {\n      await api.post(`/players/${id}/victory`);\n    } catch (error) {\n      console.error('Error al registrar victoria:', error);\n      throw error;\n    }\n  }\n}; ","import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, ScrollView, Image, ViewStyle, TextStyle, Alert } from 'react-native';\nimport { Button, Text, Surface, useTheme, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { useApp } from '../context/AppContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { RootStackParamList } from '../navigation/types';\n\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'MainTabs'>;\n\nconst HomeScreen = () => {\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n  const theme = useTheme();\n  const [topPlayers, setTopPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const dynamicStyles = StyleSheet.create({\n    goldPlayerName: {\n      fontSize: 16,\n      color: theme.colors.primary,\n    },\n    victoriesContainer: {\n      flexDirection: 'row' as const,\n      alignItems: 'center' as const,\n      gap: 4,\n      backgroundColor: theme.colors.surface,\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n      borderRadius: 12,\n    },\n  });\n\n    const fetchTopPlayers = async () => {\n      try {\n      const players = await playerService.getPlayers();\n      // Ordenar por victorias y tomar los primeros 3\n      const sortedPlayers = [...players].sort((a, b) => b.victories - a.victories).slice(0, 3);\n        setTopPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('Error al obtener top jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    } finally {\n      setLoading(false);\n      }\n    };\n\n  useEffect(() => {\n    fetchTopPlayers();\n  }, []);\n\n  const handleAddMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n      <View style={styles.container}>\n        <Surface style={styles.header} elevation={2}>\n          <View style={styles.headerContent}>\n            <MaterialCommunityIcons \n              name=\"table-tennis\" \n              size={60}\n              color={theme.colors.primary}\n            />\n            <Text variant=\"titleLarge\" style={styles.title}>\n              Bienvenido a Ping Pong App\n            </Text>\n          </View>\n        </Surface>\n\n        <Surface style={styles.podiumContainer} elevation={2}>\n          <View style={styles.podiumHeader}>\n            <MaterialCommunityIcons name=\"trophy\" size={32} color={theme.colors.primary} />\n            <Text variant=\"titleLarge\" style={styles.podiumTitle}>\n              Top Jugadores\n            </Text>\n          </View>\n          <View style={styles.podium}>\n            {topPlayers.length >= 2 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.silverPosition,\n                  {\n                    height: 120,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#E8E8E8' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={32} color=\"#C0C0C0\" />\n                  <Text style={styles.medalText}>2°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[1].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[1].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 1 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.goldPosition,\n                  {\n                    height: 150,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFF7E6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={40} color=\"#FFD700\" />\n                  <Text style={[styles.medalText, { color: '#B8860B' }]}>1°</Text>\n                </View>\n                <Text style={[styles.playerName, dynamicStyles.goldPlayerName]}>{topPlayers[0].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[0].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 3 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.bronzePosition,\n                  {\n                    height: 100,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFE5D6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={28} color=\"#CD7F32\" />\n                  <Text style={[styles.medalText, { color: '#8B4513' }]}>3°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[2].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[2].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n          </View>\n        </Surface>\n\n        <View style={styles.buttonsContainer}>\n          <Button\n            mode=\"contained\"\n            onPress={handleAddMatch}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n            )}\n          >\n            Nuevo Partido\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'MatchesTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"clock-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Partidos\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'PlayersTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"account-group-outline\" size={size} color={color} />\n            )}\n          >\n            Gestionar Jugadores\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'RankingTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"trophy-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Ranking\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('Tournament')}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"tournament\" size={size} color={color} />\n            )}\n          >\n            Torneo Rápido\n          </Button>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#fff',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  headerContent: {\n    alignItems: 'center',\n  },\n  title: {\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  podiumContainer: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  podiumHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 24,\n    gap: 8,\n  },\n  podiumTitle: {\n    fontWeight: 'bold',\n  },\n  podium: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    height: 170,\n    gap: 8,\n  },\n  podiumPosition: {\n    width: 100,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 12,\n    padding: 12,\n    paddingTop: 8,\n  },\n  goldPosition: {\n    zIndex: 3,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  silverPosition: {\n    zIndex: 2,\n    marginRight: -4,\n  },\n  bronzePosition: {\n    zIndex: 1,\n    marginLeft: -4,\n  },\n  medalContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  medalText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: -4,\n  },\n  playerName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  victories: {\n    fontSize: 12,\n    opacity: 0.8,\n  },\n  buttonsContainer: {\n    padding: 16,\n    gap: 12,\n  },\n  button: {\n    marginVertical: 8,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginBottom: 10,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default HomeScreen; ","// src/screens/PlayersScreen.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, FlatList, Alert, ViewStyle, TextStyle, Animated } from 'react-native';\nimport { Text, Button, Surface, TextInput, useTheme, Portal, Modal, ActivityIndicator, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype PlayersScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\ninterface Styles {\n  container: ViewStyle;\n  header: ViewStyle;\n  title: TextStyle;\n  playerCard: ViewStyle;\n  playerInfo: ViewStyle;\n  playerDetails: ViewStyle;\n  actions: ViewStyle;\n  loadingContainer: ViewStyle;\n  modalContainer: ViewStyle;\n  modalContent: ViewStyle;\n  modalTitle: TextStyle;\n  modalText: TextStyle;\n  modalButtons: ViewStyle;\n  modalButton: ViewStyle;\n  input: ViewStyle;\n  content: ViewStyle;\n  addPlayerSection: ViewStyle;\n  addButton: ViewStyle;\n  topPlayerCard: ViewStyle;\n  avatar: ViewStyle;\n  nameContainer: ViewStyle;\n  crownIcon: ViewStyle;\n  victoriesContainer: ViewStyle;\n  victoriesText: TextStyle;\n  emptyContainer: ViewStyle;\n  emptyText: TextStyle;\n}\n\nconst styles = StyleSheet.create<Styles>({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    marginTop: 8,\n  },\n  content: {\n    flex: 1,\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  playerCard: {\n    margin: 8,\n    padding: 16,\n    borderRadius: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  playerDetails: {\n    marginLeft: 16,\n  },\n  addPlayerSection: {\n    marginTop: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  input: {\n    marginBottom: 20,\n  },\n  addButton: {\n    marginTop: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8,\n    width: '80%',\n  },\n  modalTitle: {\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 5,\n  },\n  topPlayerCard: {\n    borderColor: '#FFD700',\n    borderWidth: 2,\n  },\n  avatar: {\n    marginRight: 12,\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  crownIcon: {\n    marginLeft: 8,\n  },\n  victoriesContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  victoriesText: {\n    marginLeft: 4,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    padding: 32,\n  },\n  emptyText: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n});\n\nconst PlayersScreen = () => {\n  const navigation = useNavigation<PlayersScreenNavigationProp>();\n  const theme = useTheme();\n  const [modalScale] = useState(new Animated.Value(0));\n\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [newName, setNewName] = useState('');\n  const [editingPlayer, setEditingPlayer] = useState<Player | null>(null);\n  const [editName, setEditName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudo cargar la lista de jugadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addPlayer = async () => {\n    if (!newName.trim()) {\n      Alert.alert('Campo vacío', 'Por favor ingresa un nombre');\n      return;\n    }\n\n    try {\n      await playerService.createPlayer({ name: newName });\n      setNewName('');\n      fetchPlayers();\n    } catch (error) {\n      console.error('Error al agregar jugador:', error);\n      Alert.alert('Error', 'No se pudo agregar el jugador');\n    }\n  };\n\n  const handleUpdatePlayer = async () => {\n    if (!editingPlayer || !editName.trim()) return;\n\n    try {\n      await playerService.updatePlayer(editingPlayer.id, { name: editName });\n      Alert.alert('Éxito', 'Jugador actualizado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo actualizar el jugador');\n    } finally {\n      setEditingPlayer(null);\n      setEditName('');\n    }\n  };\n\n  const handleDelete = async (player: Player) => {\n    setSelectedPlayer(player);\n    setDeleteModalVisible(true);\n  };\n\n  const confirmDelete = async () => {\n    if (!selectedPlayer) return;\n    \n    try {\n      await playerService.deletePlayer(selectedPlayer.id);\n      Alert.alert('Éxito', 'Jugador eliminado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar el jugador');\n    } finally {\n      setDeleteModalVisible(false);\n      setSelectedPlayer(null);\n    }\n  };\n\n  const openModal = () => {\n    Animated.spring(modalScale, {\n      toValue: 1,\n      useNativeDriver: true,\n      tension: 50,\n      friction: 7,\n    }).start();\n  };\n\n  const closeModal = () => {\n    Animated.timing(modalScale, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start(() => setEditingPlayer(null));\n  };\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (editingPlayer) {\n      openModal();\n    }\n  }, [editingPlayer]);\n\n  const getTopPlayer = () => {\n    if (players.length === 0) return null;\n    return players.reduce((prev, current) => \n      (prev.victories > current.victories) ? prev : current\n    );\n  };\n\n  const renderPlayerCard = ({ item }: { item: Player }) => {\n    const isTopPlayer = getTopPlayer()?.id === item.id;\n    \n    return (\n      <Surface \n        style={[\n          styles.playerCard,\n          isTopPlayer && styles.topPlayerCard\n        ]} \n        elevation={isTopPlayer ? 4 : 1}\n      >\n        <View style={styles.playerInfo}>\n          <Avatar.Text \n            size={40} \n            label={item.name.substring(0, 2).toUpperCase()}\n            style={[\n              styles.avatar,\n              isTopPlayer && { backgroundColor: theme.colors.primary }\n            ]}\n          />\n          <View style={styles.playerDetails}>\n            <View style={styles.nameContainer}>\n              <Text variant=\"titleMedium\">{item.name}</Text>\n              {isTopPlayer && (\n                <MaterialCommunityIcons \n                  name=\"crown\" \n                  size={20} \n                  color={theme.colors.primary} \n                  style={styles.crownIcon}\n                />\n              )}\n            </View>\n            <View style={styles.victoriesContainer}>\n              <MaterialCommunityIcons \n                name=\"trophy\" \n                size={16} \n                color={theme.colors.primary} \n              />\n              <Text variant=\"bodySmall\" style={styles.victoriesText}>\n                {item.victories} victorias\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.actions}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => {\n              setEditingPlayer(item);\n              setEditName(item.name);\n            }}\n            icon={() => <MaterialCommunityIcons name=\"pencil\" size={24} color={theme.colors.primary} />}\n            loading={editingPlayer?.id === item.id}\n          >\n            Editar\n          </Button>\n          <Button\n            mode=\"outlined\"\n            onPress={() => handleDelete(item)}\n            icon={() => <MaterialCommunityIcons name=\"delete\" size={24} color={theme.colors.error} />}\n            textColor={theme.colors.error}\n            loading={selectedPlayer?.id === item.id && deleteModalVisible}\n          >\n            Eliminar\n          </Button>\n        </View>\n      </Surface>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"account-group\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Jugadores\n        </Text>\n      </Surface>\n\n      <Surface style={styles.content} elevation={1}>\n        <FlatList\n          data={players}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderPlayerCard}\n          ListEmptyComponent={\n            <View style={styles.emptyContainer}>\n              <MaterialCommunityIcons name=\"account-off\" size={48} color={theme.colors.outline} />\n              <Text variant=\"titleMedium\" style={styles.emptyText}>\n                No hay jugadores registrados\n              </Text>\n            </View>\n          }\n        />\n\n        <Surface style={styles.addPlayerSection} elevation={2}>\n          <TextInput\n            mode=\"outlined\"\n            label=\"Nombre del jugador\"\n            value={newName}\n            onChangeText={setNewName}\n            style={styles.input}\n            right={newName ? (\n              <TextInput.Icon \n                icon={({ size, color }) => (\n                  <MaterialCommunityIcons \n                    name=\"close\" \n                    size={size} \n                    color={color} \n                  />\n                )} \n                onPress={() => setNewName('')} \n              />\n            ) : undefined}\n          />\n          <Button\n            mode=\"contained\"\n            onPress={addPlayer}\n            style={styles.addButton}\n            icon={() => <MaterialCommunityIcons name=\"account-plus\" size={24} color={theme.colors.onPrimary} />}\n          >\n            Agregar Jugador\n          </Button>\n        </Surface>\n      </Surface>\n\n      <Portal>\n        <Modal\n          visible={editingPlayer !== null}\n          onDismiss={closeModal}\n          style={styles.modalContainer}\n        >\n          <Animated.View \n            style={[\n              styles.modalContent,\n              { transform: [{ scale: modalScale }] }\n            ]}\n          >\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              Editar Jugador\n            </Text>\n            <TextInput\n              mode=\"outlined\"\n              label=\"Nombre\"\n              value={editName}\n              onChangeText={setEditName}\n              style={styles.input}\n              left={(\n                <TextInput.Icon \n                  icon={({ size, color }) => (\n                    <MaterialCommunityIcons \n                      name=\"account\" \n                      size={size} \n                      color={color} \n                    />\n                  )} \n                />\n              )}\n            />\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={closeModal}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={handleUpdatePlayer}\n                style={styles.modalButton}\n                loading={loading}\n              >\n                Guardar\n              </Button>\n            </View>\n          </Animated.View>\n        </Modal>\n      </Portal>\n\n      <Portal>\n        <Modal\n          visible={deleteModalVisible}\n          onDismiss={() => setDeleteModalVisible(false)}\n          style={styles.modalContainer}\n        >\n          <View style={styles.modalContent}>\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              ¿Eliminar jugador?\n            </Text>\n            <Text variant=\"bodyMedium\" style={styles.modalText}>\n              ¿Estás seguro de que deseas eliminar a {selectedPlayer?.name}?\n            </Text>\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => setDeleteModalVisible(false)}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={confirmDelete}\n                buttonColor={theme.colors.error}\n                style={styles.modalButton}\n              >\n                Eliminar\n              </Button>\n            </View>\n          </View>\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\nexport default PlayersScreen;\n","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Tournament {\r\n  id_torneo: number;\r\n  nombre: string;\r\n  fecha_inicio: string;\r\n  fecha_fin: string;\r\n  estado: string;\r\n}\r\n\r\nclass TournamentService {\r\n  async getAllTournaments(): Promise<Tournament[]> {\r\n    try {\r\n      console.log('🚀 Iniciando solicitud GET a /torneos');\r\n      console.log('📡 URL base:', api.defaults.baseURL);\r\n      const response = await api.get('/torneos');\r\n      console.log('✅ Respuesta del servidor:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener torneos:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getTournament(id: number): Promise<Tournament> {\r\n    try {\r\n      const response = await api.get(`/torneos/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createTournament(tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.post('/torneos', tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTournament(id: number, tournament: Partial<Tournament>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.put(`/torneos/${id}`, tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteTournament(id: number): Promise<void> {\r\n    try {\r\n      await api.delete(`/torneos/${id}`);\r\n    } catch (error) {\r\n      console.error('Error al eliminar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const tournamentService = new TournamentService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert } from 'react-native';\nimport { tournamentService } from '../api/tournamentService';\nimport { Tournament } from '../api/tournamentService';\n\nexport default function TournamentScreen() {\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [newTournament, setNewTournament] = useState({\n    nombre: '',\n    fecha_inicio: '',\n    fecha_fin: '',\n    estado: 'activo'\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n  }, []);\n\n  const fetchTournaments = async () => {\n    try {\n      setLoading(true);\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateTournament = async () => {\n    try {\n      if (!newTournament.nombre || !newTournament.fecha_inicio || !newTournament.fecha_fin) {\n        Alert.alert('Error', 'Por favor completa todos los campos');\n        return;\n      }\n\n      await tournamentService.createTournament(newTournament);\n      setModalVisible(false);\n      setNewTournament({\n        nombre: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: 'activo'\n      });\n      fetchTournaments();\n      Alert.alert('Éxito', 'Torneo creado correctamente');\n    } catch (error) {\n      console.error('Error al crear torneo:', error);\n      Alert.alert('Error', 'No se pudo crear el torneo');\n    }\n  };\n\n  const renderTournamentCard = ({ item }: { item: Tournament }) => (\n    <View style={styles.card}>\n      <Text style={styles.tournamentName}>{item.nombre}</Text>\n      <View style={styles.datesContainer}>\n        <Text style={styles.date}>Inicio: {new Date(item.fecha_inicio).toLocaleDateString()}</Text>\n        <Text style={styles.date}>Fin: {new Date(item.fecha_fin).toLocaleDateString()}</Text>\n      </View>\n      <View style={[styles.statusBadge, { backgroundColor: item.estado === 'activo' ? '#4CAF50' : '#9E9E9E' }]}>\n        <Text style={styles.statusText}>{item.estado}</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Torneos</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Crear Torneo</Text>\n        </TouchableOpacity>\n      </View>\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando torneos...</Text>\n      ) : tournaments.length === 0 ? (\n        <Text style={styles.emptyText}>No hay torneos disponibles</Text>\n      ) : (\n        <FlatList\n          data={tournaments}\n          renderItem={renderTournamentCard}\n          keyExtractor={(item) => item.id_torneo.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Crear Nuevo Torneo</Text>\n            \n            <TextInput\n              style={styles.input}\n              placeholder=\"Nombre del torneo\"\n              value={newTournament.nombre}\n              onChangeText={(text) => setNewTournament({...newTournament, nombre: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de inicio (YYYY-MM-DD)\"\n              value={newTournament.fecha_inicio}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_inicio: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de fin (YYYY-MM-DD)\"\n              value={newTournament.fecha_fin}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_fin: text})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateTournament}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  tournamentName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  datesContainer: {\n    marginBottom: 8,\n  },\n  date: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  statusText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Ranking {\r\n  id_rankings: number;\r\n  id_torneo: number;\r\n  id_jugador: number;\r\n  posicion: number;\r\n  partidas_ganadas: number;\r\n  partidas_perdidas: number;\r\n  nombre_jugador?: string; // Para cuando necesitemos mostrar el nombre del jugador\r\n  nombre_torneo?: string; // Para cuando necesitemos mostrar el nombre del torneo\r\n  total_partidas?: number;\r\n  porcentaje_victorias?: number;\r\n}\r\n\r\nclass RankingService {\r\n  async getTournamentRankings(tournamentId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para torneo:', tournamentId);\r\n      const response = await api.get(`/rankings/torneo/${tournamentId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del torneo:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPlayerRankings(playerId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para jugador:', playerId);\r\n      const response = await api.get(`/rankings/jugador/${playerId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del jugador:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createRanking(ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Creando nuevo ranking:', ranking);\r\n      const response = await api.post('/rankings', ranking);\r\n      console.log('✅ Ranking creado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al crear ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateRanking(id: number, ranking: Partial<Ranking>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Actualizando ranking:', { id, ranking });\r\n      const response = await api.put(`/rankings/${id}`, ranking);\r\n      console.log('✅ Ranking actualizado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al actualizar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteRanking(id: number): Promise<void> {\r\n    try {\r\n      console.log('🚀 Eliminando ranking:', id);\r\n      await api.delete(`/rankings/${id}`);\r\n      console.log('✅ Ranking eliminado correctamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al eliminar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const rankingService = new RankingService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert, ScrollView } from 'react-native';\nimport { rankingService, Ranking } from '../api/rankingService';\nimport { tournamentService, Tournament } from '../api/tournamentService';\nimport { playerService } from '../api/playerService';\n\nexport default function RankingScreen() {\n  const [rankings, setRankings] = useState<Ranking[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [players, setPlayers] = useState<Array<{ id: number; name: string }>>([]);\n  const [selectedTournament, setSelectedTournament] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [showTournamentSelector, setShowTournamentSelector] = useState(false);\n  const [showPlayerSelector, setShowPlayerSelector] = useState(false);\n  const [newRanking, setNewRanking] = useState({\n    id_torneo: 0,\n    id_jugador: 0,\n    partidas_ganadas: 0,\n    partidas_perdidas: 0\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedTournament) {\n      fetchRankings(selectedTournament);\n    }\n  }, [selectedTournament]);\n\n  const fetchTournaments = async () => {\n    try {\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n      if (data.length > 0) {\n        setSelectedTournament(data[0].id_torneo);\n      }\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    }\n  };\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    }\n  };\n\n  const fetchRankings = async (tournamentId: number) => {\n    try {\n      setLoading(true);\n      const data = await rankingService.getTournamentRankings(tournamentId);\n      setRankings(data);\n    } catch (error) {\n      console.error('Error al obtener rankings:', error);\n      Alert.alert('Error', 'No se pudieron cargar los rankings');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateRanking = async () => {\n    try {\n      if (!newRanking.id_torneo || !newRanking.id_jugador) {\n        Alert.alert('Error', 'Por favor selecciona un torneo y un jugador');\n        return;\n      }\n\n      const rankingData = {\n        ...newRanking,\n        posicion: 0 // La posición se calculará automáticamente en el backend\n      };\n\n      await rankingService.createRanking(rankingData);\n      setModalVisible(false);\n      setNewRanking({\n        id_torneo: 0,\n        id_jugador: 0,\n        partidas_ganadas: 0,\n        partidas_perdidas: 0\n      });\n      fetchRankings(newRanking.id_torneo);\n      Alert.alert('Éxito', 'Ranking creado correctamente');\n    } catch (error) {\n      console.error('Error al crear ranking:', error);\n      Alert.alert('Error', 'No se pudo crear el ranking');\n    }\n  };\n\n  const renderRankingCard = ({ item }: { item: Ranking }) => (\n    <View style={styles.card}>\n      <View style={styles.positionContainer}>\n        <Text style={styles.position}>{item.posicion}°</Text>\n      </View>\n      <View style={styles.detailsContainer}>\n        <Text style={styles.playerName}>{item.nombre_jugador}</Text>\n        <View style={styles.statsContainer}>\n          <Text style={styles.stats}>G: {item.partidas_ganadas} | P: {item.partidas_perdidas}</Text>\n          <Text style={styles.percentage}>{item.porcentaje_victorias}% victorias</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderTournamentSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showTournamentSelector}\n      onRequestClose={() => setShowTournamentSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Torneo</Text>\n          <ScrollView style={styles.selectorList}>\n            {tournaments.map((tournament) => (\n              <TouchableOpacity\n                key={tournament.id_torneo}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setSelectedTournament(tournament.id_torneo);\n                  setShowTournamentSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{tournament.nombre}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowTournamentSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  const renderPlayerSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showPlayerSelector}\n      onRequestClose={() => setShowPlayerSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Jugador</Text>\n          <ScrollView style={styles.selectorList}>\n            {players.map((player) => (\n              <TouchableOpacity\n                key={player.id}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setNewRanking({...newRanking, id_jugador: player.id});\n                  setShowPlayerSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{player.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowPlayerSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Rankings</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Agregar Ranking</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.tournamentSelector}>\n        <Text style={styles.selectorLabel}>Seleccionar Torneo:</Text>\n        <TouchableOpacity\n          style={styles.selectorButton}\n          onPress={() => setShowTournamentSelector(true)}\n        >\n          <Text style={styles.selectorButtonText}>\n            {selectedTournament ? tournaments.find(t => t.id_torneo === selectedTournament)?.nombre : 'Seleccionar torneo'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {renderTournamentSelector()}\n      {renderPlayerSelector()}\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando rankings...</Text>\n      ) : rankings.length === 0 ? (\n        <Text style={styles.emptyText}>No hay rankings disponibles</Text>\n      ) : (\n        <FlatList\n          data={rankings}\n          renderItem={renderRankingCard}\n          keyExtractor={(item) => item.id_rankings.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Agregar Nuevo Ranking</Text>\n            \n            <Text style={styles.selectorLabel}>Torneo:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowTournamentSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_torneo ? tournaments.find(t => t.id_torneo === newRanking.id_torneo)?.nombre : 'Seleccionar torneo'}\n              </Text>\n            </TouchableOpacity>\n\n            <Text style={styles.selectorLabel}>Jugador:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowPlayerSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_jugador ? players.find(p => p.id === newRanking.id_jugador)?.name : 'Seleccionar jugador'}\n              </Text>\n            </TouchableOpacity>\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas ganadas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_ganadas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_ganadas: parseInt(text) || 0})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas perdidas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_perdidas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_perdidas: parseInt(text) || 0})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateRanking}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  tournamentSelector: {\n    backgroundColor: '#fff',\n    padding: 16,\n    marginBottom: 8,\n  },\n  selectorLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 8,\n  },\n  selectorButton: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  selectorButtonText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  selectorList: {\n    maxHeight: 300,\n  },\n  selectorItem: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  selectorItemText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  positionContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#2196F3',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  position: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  detailsContainer: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  stats: {\n    fontSize: 14,\n    color: '#666',\n  },\n  percentage: {\n    fontSize: 14,\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Surface, Switch, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\n\nconst SettingsScreen = () => {\n  const { theme, isOfflineMode, soundEnabled, toggleOfflineMode, toggleSound } = useApp();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"cog\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Ajustes\n        </Text>\n      </Surface>\n\n      <Surface style={styles.section} elevation={1}>\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"wifi-off\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Modo sin conexión</Text>\n            <Text variant=\"bodySmall\">Usar datos locales sin conexión a internet</Text>\n          </View>\n          <Switch value={isOfflineMode} onValueChange={toggleOfflineMode} />\n        </View>\n\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"volume-high\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Sonido</Text>\n            <Text variant=\"bodySmall\">Activar/desactivar efectos de sonido</Text>\n          </View>\n          <Switch value={soundEnabled} onValueChange={toggleSound} />\n        </View>\n      </Surface>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 24,\n    alignItems: 'center',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  title: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  section: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n  },\n  settingText: {\n    flex: 1,\n    marginLeft: 16,\n  }\n}); \n\nexport default SettingsScreen; ","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { Text, Button, TextInput, Surface, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getPlayers, addMatch } from '../api/api';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\n\ntype AddMatchScreenNavigationProp = StackNavigationProp<RootStackParamList, 'AddMatch'>;\n\ninterface Player {\n  id: number;\n  name: string;\n}\n\nconst AddMatchScreen = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer1, setSelectedPlayer1] = useState<number | null>(null);\n  const [selectedPlayer2, setSelectedPlayer2] = useState<number | null>(null);\n  const [player1Result, setPlayer1Result] = useState<'win' | 'lose'>('win');\n  const [player2Result, setPlayer2Result] = useState<'win' | 'lose'>('lose');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const navigation = useNavigation<AddMatchScreenNavigationProp>();\n  const theme = useTheme();\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await getPlayers();\n      setPlayers(data);\n      setLoading(false);\n    } catch (error) {\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedPlayer1 || !selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    if (selectedPlayer1 === selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus('idle');\n\n    try {\n      await addMatch(\n        selectedPlayer1,\n        selectedPlayer2,\n        player1Result,\n        player2Result\n      );\n\n      setSubmitStatus('success');\n      setTimeout(() => {\n        navigation.goBack();\n      }, 1500);\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Surface style={styles.surface}>\n        <View style={styles.header}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => navigation.goBack()}\n            style={styles.backButton}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"arrow-left\" size={size} color={color} />\n            )}\n          >\n            Volver\n          </Button>\n        <Text style={styles.title}>Registrar Nueva Partida</Text>\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 1\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer1 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer1(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 2\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer2 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer2(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.resultSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"trophy\" size={20} color={theme.colors.primary} /> Resultado\n          </Text>\n          <View style={styles.resultButtons}>\n            <Button\n              mode={player1Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('win');\n                setPlayer2Result('lose');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 1 Gana\n            </Button>\n            <Button\n              mode={player2Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('lose');\n                setPlayer2Result('win');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 2 Gana\n            </Button>\n          </View>\n        </View>\n\n        <Button\n          mode=\"contained\"\n          onPress={handleSubmit}\n          style={[\n            styles.submitButton,\n            submitStatus === 'success' && styles.successButton,\n            submitStatus === 'error' && styles.errorButton\n          ]}\n          loading={isSubmitting}\n          disabled={isSubmitting}\n          icon={({ size, color }) => {\n            if (submitStatus === 'success') {\n              return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n            } else if (submitStatus === 'error') {\n              return <MaterialCommunityIcons name=\"alert-circle\" size={size} color={color} />;\n            }\n            return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n          }}\n        >\n          {isSubmitting ? 'Registrando...' : \n           submitStatus === 'success' ? '¡Partida Registrada!' :\n           submitStatus === 'error' ? 'Error al Registrar' :\n           'Registrar Partida'}\n        </Button>\n      </Surface>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  surface: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 4,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    flex: 1,\n    textAlign: 'center',\n  },\n  playerSection: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  playerButton: {\n    marginBottom: 8,\n  },\n  resultSection: {\n    marginBottom: 24,\n  },\n  resultButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  resultButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  submitButton: {\n    marginTop: 16,\n  },\n  successButton: {\n    backgroundColor: '#4CAF50',\n  },\n  errorButton: {\n    backgroundColor: '#f44336',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AddMatchScreen;\n","// src/screens/MatchesScreen.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, FlatList, Alert } from 'react-native';\nimport { Text, Card, Button, ActivityIndicator, Surface, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getMatches, deleteMatch } from '../api/api';\nimport { authService } from '../api/authService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype MatchesScreenNavigationProp = StackNavigationProp<RootStackParamList, 'MainTabs'>;\n\ninterface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name: string;\n  player2_name: string;\n  winner_name: string;\n}\n\nconst MatchesScreen = () => {\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigation = useNavigation<MatchesScreenNavigationProp>();\n  const theme = useTheme();\n\n  const fetchMatches = async () => {\n    try {\n      setLoading(true);\n      const data = await getMatches();\n      setMatches(data);\n      setError(null);\n    } catch (err) {\n      setError('Error al cargar las partidas');\n      console.error('Error al cargar partidas:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMatches();\n  }, []);\n\n  const handleDeleteMatch = async (matchId: number) => {\n    try {\n      await deleteMatch(matchId);\n      setMatches(matches.filter(match => match.id !== matchId));\n      Alert.alert('Éxito', 'Partida eliminada correctamente');\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar la partida');\n    }\n  };\n\n  const handleNewMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  const renderMatch = ({ item }: { item: Match }) => (\n    <Card style={styles.matchCard}>\n      <Card.Content>\n        <Text style={styles.matchTitle}>\n          {item.player1_name} vs {item.player2_name}\n        </Text>\n        <Text style={styles.matchDate}>\n          Fecha: {new Date(item.match_date).toLocaleDateString()}\n        </Text>\n        <Text style={styles.matchResult}>\n          Ganador: {item.winner_name}\n        </Text>\n        <Text style={styles.matchScore}>\n          Resultado: {item.player1_result === 'win' ? 'Ganó' : 'Perdió'} {item.player1_name} - \n          {item.player2_result === 'win' ? 'Ganó' : 'Perdió'} {item.player2_name}\n        </Text>\n      </Card.Content>\n      <Card.Actions>\n        <Button onPress={() => handleDeleteMatch(item.id)}>Eliminar</Button>\n      </Card.Actions>\n    </Card>\n  );\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <Button onPress={fetchMatches}>Reintentar</Button>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Surface style={styles.header}>\n        <View style={styles.titleContainer}>\n          <MaterialCommunityIcons name=\"history\" size={32} color={theme.colors.primary} />\n          <Text style={styles.title}>Historial de Partidas</Text>\n        </View>\n        <Button \n          mode=\"contained\" \n          onPress={handleNewMatch}\n          style={styles.newMatchButton}\n          icon={({ size, color }) => (\n            <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n          )}\n        >\n          Nueva Partida\n        </Button>\n      </Surface>\n      <FlatList\n        data={matches}\n        renderItem={renderMatch}\n        keyExtractor={item => item.id.toString()}\n        contentContainerStyle={styles.listContainer}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    padding: 16,\n    elevation: 4,\n    backgroundColor: '#fff',\n    marginBottom: 8,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  newMatchButton: {\n    marginTop: 8,\n    borderRadius: 8,\n  },\n  listContainer: {\n    padding: 16,\n  },\n  matchCard: {\n    marginBottom: 16,\n    elevation: 2,\n    borderRadius: 8,\n  },\n  matchTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  matchDate: {\n    color: '#666',\n    marginBottom: 4,\n  },\n  matchResult: {\n    color: '#2196F3',\n    marginBottom: 4,\n  },\n  matchScore: {\n    color: '#4CAF50',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n});\n\nexport default MatchesScreen;\n","// src/navigation/AppNavigator.tsx\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\nimport { authService } from '../api/authService';\nimport { RootStackParamList, MainTabParamList } from './types';\n\n// Screens\nimport LoginScreen from '../screens/LoginScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport PlayersScreen from '../screens/PlayersScreen';\nimport TournamentScreen from '../screens/TournamentScreen';\nimport RankingScreen from '../screens/RankingScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport AddMatchScreen from '../screens/AddMatchScreen';\nimport MatchesScreen from '../screens/MatchesScreen';\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction HomeStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"HomeScreen\" \n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction PlayerStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"PlayerScreen\" \n        component={PlayersScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction MatchesStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MatchesScreen\" \n        component={MatchesScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TournamentStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"TournamentScreen\" \n        component={TournamentScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction RankingStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"RankingScreen\" \n        component={RankingScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nconst MainTabs = () => {\n  const theme = useTheme();\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.outline,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopWidth: 1,\n          borderTopColor: '#ddd',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"HomeTab\"\n        component={HomeStack}\n        options={{\n          tabBarLabel: 'Inicio',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"PlayersTab\"\n        component={PlayerStack}\n        options={{\n          tabBarLabel: 'Jugadores',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"account-group\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"MatchesTab\"\n        component={MatchesStack}\n        options={{\n          tabBarLabel: 'Partidos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"table-tennis\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"TournamentsTab\"\n        component={TournamentStack}\n        options={{\n          tabBarLabel: 'Torneos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"trophy\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"RankingsTab\"\n        component={RankingStack}\n        options={{\n          tabBarLabel: 'Rankings',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"podium\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  const isAuthenticated = authService.isAuthenticated();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        {!isAuthenticated ? (\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n        ) : (\n          <Stack.Screen name=\"MainTabs\" component={MainTabs} />\n        )}\n        <Stack.Screen name=\"AddMatch\" component={AddMatchScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n","import React from 'react';\nimport { PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { AppProvider } from './src/context/AppContext';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { CombinedDefaultTheme } from './src/theme';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <PaperProvider theme={CombinedDefaultTheme}>\n      <AppProvider>\n          <AppNavigator />\n      </AppProvider>\n      </PaperProvider>\n    </SafeAreaProvider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/AppPingPong/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [159], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["CombinedDefaultTheme","_objectSpread","MD3LightTheme","NavigationDefaultTheme","colors","MD3DarkTheme","NavigationDarkTheme","primary","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","error","onError","errorContainer","onErrorContainer","background","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","authService","_createClass","AuthService","_classCallCheck","token","user","console","log","this","loadAuthData","key","value","_loadAuthData","_asyncToGenerator","_this$user","_yield$Promise$all","Promise","all","AsyncStorage","getItem","_yield$Promise$all2","_slicedToArray","userStr","expirationTime","JSON","parse","atob","split","exp","Date","now","logout","username","apply","arguments","_register","password","response","fetch","API_URL","method","headers","body","stringify","ok","json","Error","_x","_x2","_login","data","setAuthData","_x3","_x4","_logout","multiRemove","_setAuthData","_this$user2","multiSet","_x5","_this$user3","role","api","axios","create","baseURL","interceptors","request","use","_ref","config","warn","url","reject","_ref2","_error$response","status","window","location","href","getPlayers","_ref3","get","addMatch","_ref4","name","post","_ref5","player1Id","player2Id","player1Result","player2Result","requestBody","player1_id","player2_id","player1_result","player2_result","defaults","_error$response2","_error$response3","_error$response4","_error$config","_error$config2","_error$config3","_error$config4","isAxiosError","statusText","_x6","_x7","getMatches","_ref6","deleteMatch","_ref7","id","delete","_ref8","_x9","_ref9","_ref10","_ref11","tournament","_ref12","put","_ref13","_ref14","tournamentId","_ref15","playerId","_ref16","ranking","_ref17","_ref18","AppContext","createContext","undefined","AppProvider","children","_useState","useState","_useState2","isOfflineMode","setIsOfflineMode","_useState3","_useState4","soundEnabled","setSoundEnabled","_useState5","_useState6","players","setPlayers","_useState7","_useState8","matches","setMatches","_useState9","_useState10","tournaments","setTournaments","_useState11","_useState12","comments","setComments","_useState13","isAuthenticated","_useState14","setIsAuthenticated","useEffect","loadData","storedPlayers","storedMatches","storedTournaments","storedComments","storedSoundEnabled","saveData","setItem","toggleSound","newSoundEnabled","addPlayer","player","newPlayer","length","stats_wins","stats_losses","stats_draws","concat","_toConsumableArray","updatePlayer","map","p","addLocalMatch","match","newMatch","updatedPlayers","_match$winner","_match$winner2","_match$winner3","_match$winner4","_match$winner5","_match$winner6","player1","victories","winner","player2","prevMatches","then","res","updatedMatches","addComment","matchId","text","newComment","userId","timestamp","createTournament","newTournament","updateTournament","t","_jsx","Provider","theme","toggleOfflineMode","styles","StyleSheet","container","flex","padding","header","alignItems","marginTop","marginBottom","title","textAlign","subtitle","opacity","form","width","input","button","credentials","setUsername","setPassword","loading","setLoading","useTheme","navigation","useNavigation","handleLogin","login","reset","index","routes","Alert","alert","message","_jsxs","View","style","backgroundColor","MaterialCommunityIcons","size","color","Text","variant","TextInput","label","onChangeText","mode","left","Icon","icon","autoCapitalize","secureTextEntry","Button","onPress","playerService","_getPlayers","createPlayer","_createPlayer","_updatePlayer","deletePlayer","_deletePlayer","addVictory","_addVictory","scrollView","scrollContent","flexGrow","paddingBottom","marginHorizontal","borderRadius","headerContent","podiumContainer","margin","podiumHeader","flexDirection","justifyContent","gap","podiumTitle","fontWeight","podium","height","podiumPosition","paddingTop","goldPosition","zIndex","borderWidth","borderColor","silverPosition","marginRight","bronzePosition","marginLeft","medalContainer","medalText","fontSize","position","bottom","playerName","buttonsContainer","marginVertical","logo","loadingContainer","topPlayers","setTopPlayers","dynamicStyles","goldPlayerName","victoriesContainer","paddingHorizontal","paddingVertical","fetchTopPlayers","sortedPlayers","sort","a","b","slice","ActivityIndicator","ScrollView","contentContainerStyle","Surface","navigate","screen","content","playerCard","playerInfo","playerDetails","addPlayerSection","addButton","actions","modalContainer","modalContent","modalTitle","modalText","modalButtons","modalButton","topPlayerCard","avatar","nameContainer","crownIcon","victoriesText","emptyContainer","emptyText","Animated","Value","modalScale","newName","setNewName","editingPlayer","setEditingPlayer","editName","setEditName","selectedPlayer","setSelectedPlayer","_useState15","_useState16","deleteModalVisible","setDeleteModalVisible","fetchPlayers","trim","handleUpdatePlayer","handleDelete","confirmDelete","closeModal","timing","toValue","duration","useNativeDriver","start","spring","tension","friction","FlatList","keyExtractor","item","toString","renderItem","_getTopPlayer","isTopPlayer","reduce","prev","current","Avatar","substring","toUpperCase","textColor","ListEmptyComponent","right","Portal","Modal","visible","onDismiss","transform","scale","buttonColor","tournamentService","TournamentService","_getAllTournaments","_getTournament","_createTournament","_updateTournament","_deleteTournament","TournamentScreen","modalVisible","setModalVisible","nombre","fecha_inicio","fecha_fin","estado","setNewTournament","fetchTournaments","getAllTournaments","handleCreateTournament","TouchableOpacity","addButtonText","loadingText","card","tournamentName","datesContainer","date","toLocaleDateString","statusBadge","id_torneo","list","animationType","transparent","onRequestClose","placeholder","cancelButton","buttonText","createButton","alignSelf","maxWidth","rankingService","RankingService","_getTournamentRankings","_getPlayerRankings","_error$response5","_error$response6","_error$config5","_error$config6","_createRanking","_error$response7","_error$response8","_error$response9","_error$config7","_error$config8","_error$config9","_updateRanking","_error$response10","_error$response11","_error$response12","_error$config10","_error$config11","_error$config12","_deleteRanking","_error$response13","_error$response14","_error$response15","_error$config13","_error$config14","_error$config15","RankingScreen","_tournaments$find","_tournaments$find2","_players$find","rankings","setRankings","selectedTournament","setSelectedTournament","showTournamentSelector","setShowTournamentSelector","showPlayerSelector","setShowPlayerSelector","_useState17","id_jugador","partidas_ganadas","partidas_perdidas","_useState18","newRanking","setNewRanking","fetchRankings","getTournamentRankings","handleCreateRanking","rankingData","posicion","createRanking","tournamentSelector","selectorLabel","selectorButton","selectorButtonText","find","selectorList","selectorItem","selectorItemText","positionContainer","detailsContainer","nombre_jugador","statsContainer","stats","percentage","porcentaje_victorias","id_rankings","keyboardType","parseInt","maxHeight","borderBottomWidth","borderBottomColor","section","settingItem","settingText","_useApp","context","useContext","useApp","Switch","onValueChange","backButton","playerSection","sectionTitle","playerButton","resultSection","resultButtons","resultButton","submitButton","successButton","errorButton","selectedPlayer1","setSelectedPlayer1","selectedPlayer2","setSelectedPlayer2","setPlayer1Result","setPlayer2Result","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleSubmit","setTimeout","goBack","disabled","titleContainer","newMatchButton","listContainer","matchCard","matchTitle","matchDate","matchResult","matchScore","errorText","setError","fetchMatches","err","handleDeleteMatch","filter","Card","Content","player1_name","player2_name","match_date","winner_name","Actions","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","HomeStack","Navigator","Screen","component","HomeScreen","options","headerShown","PlayerStack","PlayersScreen","MatchesStack","MatchesScreen","TournamentStack","RankingStack","MainTabs","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","borderTopWidth","borderTopColor","tabBarLabel","tabBarIcon","SettingsScreen","NavigationContainer","LoginScreen","AddMatchScreen","App","SafeAreaProvider","PaperProvider","AppNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}