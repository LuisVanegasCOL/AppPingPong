{"version":3,"file":"static/js/main.13f35715.js","mappings":"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","sources":["src/theme/index.ts","src/api/api.ts","src/context/AppContext.tsx","src/api/playerService.ts","src/screens/HomeScreen.tsx","src/screens/PlayersScreen.tsx","src/api/tournamentService.ts","src/screens/TournamentScreen.tsx","src/api/rankingService.ts","src/screens/RankingScreen.tsx","src/screens/SettingsScreen.tsx","src/screens/AddMatchScreen.tsx","src/screens/MatchesScreen.tsx","src/navigation/AppNavigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { MD3DarkTheme, MD3LightTheme } from 'react-native-paper';\nimport { DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from '@react-navigation/native';\n\nconst CombinedDefaultTheme = {\n  ...MD3LightTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...NavigationDefaultTheme.colors,\n  },\n};\n\nconst CombinedDarkTheme = {\n  ...MD3DarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n  },\n};\n\nexport { CombinedDefaultTheme, CombinedDarkTheme };\n\nexport const lightTheme = {\n  ...MD3LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    primary: '#2196F3',\n    onPrimary: '#FFFFFF',\n    primaryContainer: '#E3F2FD',\n    onPrimaryContainer: '#004B87',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#CCFFF9',\n    onSecondaryContainer: '#002D2A',\n    tertiary: '#4CAF50',\n    onTertiary: '#FFFFFF',\n    tertiaryContainer: '#E8F5E9',\n    onTertiaryContainer: '#002204',\n    error: '#B00020',\n    onError: '#FFFFFF',\n    errorContainer: '#FDECEA',\n    onErrorContainer: '#410002',\n    background: '#FFFFFF',\n    onBackground: '#000000',\n    surface: '#FFFFFF',\n    onSurface: '#000000',\n    surfaceVariant: '#F5F5F5',\n    onSurfaceVariant: '#757575',\n    outline: '#757575',\n    outlineVariant: '#BDBDBD',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#000000',\n    inverseOnSurface: '#FFFFFF',\n    inversePrimary: '#90CAF9',\n    elevation: {\n      level0: 'transparent',\n      level1: '#F5F5F5',\n      level2: '#EEEEEE',\n      level3: '#E0E0E0',\n      level4: '#BDBDBD',\n      level5: '#9E9E9E',\n    },\n  },\n};\n\nexport const darkTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: '#90CAF9',\n    onPrimary: '#003B6F',\n    primaryContainer: '#004B87',\n    onPrimaryContainer: '#D1E4FF',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#004D40',\n    onSecondaryContainer: '#70F7EE',\n    tertiary: '#81C784',\n    onTertiary: '#003314',\n    tertiaryContainer: '#004B1C',\n    onTertiaryContainer: '#95F5A0',\n    error: '#CF6679',\n    onError: '#000000',\n    errorContainer: '#93000A',\n    onErrorContainer: '#FFB4AB',\n    background: '#121212',\n    onBackground: '#FFFFFF',\n    surface: '#121212',\n    onSurface: '#FFFFFF',\n    surfaceVariant: '#2C2C2C',\n    onSurfaceVariant: '#BDBDBD',\n    outline: '#757575',\n    outlineVariant: '#424242',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#FFFFFF',\n    inverseOnSurface: '#000000',\n    inversePrimary: '#1976D2',\n    elevation: {\n      level0: 'transparent',\n      level1: '#1E1E1E',\n      level2: '#222222',\n      level3: '#242424',\n      level4: '#272727',\n      level5: '#2C2C2C',\n    },\n  },\n};\n\nexport type AppTheme = typeof lightTheme; ","import axios from 'axios';\nimport { Platform } from 'react-native';\n\n// Configuración de la URL base según la plataforma\nexport const API_URL = Platform.select({\n  android: 'http://10.0.2.2:3000', // Para el emulador de Android\n  ios: 'http://localhost:3000',    // Para el simulador de iOS\n  default: 'https://pingpong-backend-production.up.railway.app' // Para producción en Railway\n});\n\n// Crear instancia de axios con la configuración base\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 segundos\n});\n\n// Definir los tipos de las respuestas esperadas\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n}\n\nexport interface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name?: string;\n  player2_name?: string;\n  winner_name?: string;\n}\n\nexport interface Tournament {\n  id_torneo: number;\n  nombre: string;\n  fecha_inicio: string;\n  fecha_fin: string;\n  estado: string;\n}\n\nexport interface Ranking {\n  id_rankings: number;\n  id_torneo: number;\n  id_jugador: number;\n  posicion: number;\n  partidas_ganadas: number;\n  partidas_perdidas: number;\n  nombre_jugador?: string;\n  nombre_torneo?: string;\n}\n\n// Funciones para interactuar con la API\nexport const getPlayers = async (): Promise<Player[]> => {\n  try {\n    const response = await api.get('/players');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener jugadores:', error);\n    throw error;\n  }\n};\n\nexport const addPlayer = async (name: string): Promise<Player> => {\n  try {\n    const response = await api.post('/players', { name });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar jugador:', error);\n    throw error;\n  }\n};\n\nexport const addMatch = async (\n  player1Id: number,\n  player2Id: number,\n  player1Result: string,\n  player2Result: string\n): Promise<Match> => {\n  try {\n    const requestBody = {\n      player1_id: player1Id,\n      player2_id: player2Id,\n      player1_result: player1Result,\n      player2_result: player2Result\n    };\n\n    console.log('🚀 Iniciando solicitud POST a /matches');\n    console.log('📦 Datos a enviar:', requestBody);\n    console.log('🔧 Configuración de la solicitud:', {\n      url: api.defaults.baseURL + '/matches',\n      headers: api.defaults.headers\n    });\n\n    const response = await api.post('/matches', requestBody);\n    console.log('✅ Respuesta del servidor:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error al agregar partida:', error);\n    if (axios.isAxiosError(error)) {\n      console.error('Detalles del error:', {\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data,\n        config: {\n          url: error.config?.url,\n          method: error.config?.method,\n          headers: error.config?.headers,\n          baseURL: error.config?.baseURL\n        }\n      });\n    }\n    throw error;\n  }\n};\n\nexport const getMatches = async (): Promise<Match[]> => {\n  try {\n    const response = await api.get('/matches');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener partidas:', error);\n    throw error;\n  }\n};\n\nexport const deletePlayer = async (id: number): Promise<void> => {\n  try {\n    console.log('🚀 Iniciando solicitud DELETE a:', `/players/${id}`);\n    await api.delete(`/players/${id}`);\n    console.log('✅ Jugador eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar jugador:', error);\n    throw error;\n  }\n};\n\nexport const deleteMatch = async (id: number): Promise<void> => {\n  try {\n    await api.post(`/matches/${id}/delete`);\n    console.log('✅ Partida eliminada correctamente');\n  } catch (error) {\n    console.error('Error al eliminar partida:', error);\n    throw error;\n  }\n};\n\n// Funciones para torneos\nexport const getTournaments = async (): Promise<Tournament[]> => {\n  try {\n    const response = await api.get('/torneos');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneos:', error);\n    throw error;\n  }\n};\n\nexport const getTournament = async (id: number): Promise<Tournament> => {\n  try {\n    const response = await api.get(`/torneos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneo:', error);\n    throw error;\n  }\n};\n\nexport const addTournament = async (tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> => {\n  try {\n    const response = await api.post('/torneos', tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear torneo:', error);\n    throw error;\n  }\n};\n\nexport const updateTournament = async (id: number, tournament: Partial<Tournament>): Promise<Tournament> => {\n  try {\n    const response = await api.put(`/torneos/${id}`, tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar torneo:', error);\n    throw error;\n  }\n};\n\nexport const deleteTournament = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/torneos/${id}`);\n    console.log('✅ Torneo eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar torneo:', error);\n    throw error;\n  }\n};\n\n// Funciones para rankings\nexport const getTournamentRankings = async (tournamentId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/torneo/${tournamentId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del torneo:', error);\n    throw error;\n  }\n};\n\nexport const getPlayerRankings = async (playerId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/jugador/${playerId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del jugador:', error);\n    throw error;\n  }\n};\n\nexport const addRanking = async (ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> => {\n  try {\n    const response = await api.post('/rankings', ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear ranking:', error);\n    throw error;\n  }\n};\n\nexport const updateRanking = async (id: number, ranking: Partial<Ranking>): Promise<Ranking> => {\n  try {\n    const response = await api.put(`/rankings/${id}`, ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar ranking:', error);\n    throw error;\n  }\n};\n\nexport const deleteRanking = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/rankings/${id}`);\n    console.log('✅ Ranking eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar ranking:', error);\n    throw error;\n  }\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MD3Theme } from 'react-native-paper';\nimport { CombinedDefaultTheme } from '../theme';\nimport { API_URL } from '../api/api';\n\ninterface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\ninterface Match {\n  id: number;\n  player1: Player;\n  player2: Player;\n  winner?: Player;\n  date: Date;\n  comments: Comment[];\n}\n\ninterface Tournament {\n  id: number;\n  name: string;\n  description: string;\n  startDate: Date;\n  maxPlayers: number;\n  location: string;\n  players: Player[];\n  matches: Match[];\n  status: 'pending' | 'in_progress' | 'completed';\n}\n\ninterface Comment {\n  id: number;\n  matchId: number;\n  userId: number;\n  text: string;\n  timestamp: Date;\n}\n\nexport interface AppContextType {\n  theme: MD3Theme;\n  isOfflineMode: boolean;\n  soundEnabled: boolean;\n  toggleOfflineMode: () => void;\n  toggleSound: () => void;\n  players: Player[];\n  matches: Match[];\n  tournaments: Tournament[];\n  comments: Comment[];\n  addPlayer: (player: Omit<Player, 'id' | 'stats'>) => Promise<void>;\n  updatePlayer: (player: Player) => Promise<void>;\n  addLocalMatch: (match: Omit<Match, 'id' | 'comments'>) => Promise<Match>;\n  addComment: (matchId: number, text: string) => Promise<void>;\n  createTournament: (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => Promise<void>;\n  updateTournament: (tournament: Tournament) => Promise<void>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      const storedPlayers = await AsyncStorage.getItem('players');\n      const storedMatches = await AsyncStorage.getItem('matches');\n      const storedTournaments = await AsyncStorage.getItem('tournaments');\n      const storedComments = await AsyncStorage.getItem('comments');\n      const storedSoundEnabled = await AsyncStorage.getItem('soundEnabled');\n\n      if (storedPlayers) setPlayers(JSON.parse(storedPlayers));\n      if (storedMatches) setMatches(JSON.parse(storedMatches));\n      if (storedTournaments) setTournaments(JSON.parse(storedTournaments));\n      if (storedComments) setComments(JSON.parse(storedComments));\n      if (storedSoundEnabled !== null) setSoundEnabled(JSON.parse(storedSoundEnabled));\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n\n  const saveData = async () => {\n    try {\n      await AsyncStorage.setItem('players', JSON.stringify(players));\n      await AsyncStorage.setItem('matches', JSON.stringify(matches));\n      await AsyncStorage.setItem('tournaments', JSON.stringify(tournaments));\n      await AsyncStorage.setItem('comments', JSON.stringify(comments));\n      await AsyncStorage.setItem('soundEnabled', JSON.stringify(soundEnabled));\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n\n  const toggleOfflineMode = () => setIsOfflineMode(!isOfflineMode);\n  const toggleSound = async () => {\n    const newSoundEnabled = !soundEnabled;\n    setSoundEnabled(newSoundEnabled);\n    await AsyncStorage.setItem('soundEnabled', JSON.stringify(newSoundEnabled));\n  };\n\n  const addPlayer = async (player: Omit<Player, 'id' | 'stats'>) => {\n    const newPlayer: Player = {\n      ...player,\n      id: players.length + 1,\n      stats_wins: 0,\n      stats_losses: 0,\n      stats_draws: 0,\n    };\n    setPlayers([...players, newPlayer]);\n    await saveData();\n  };\n\n  const updatePlayer = async (player: Player) => {\n    setPlayers(players.map(p => p.id === player.id ? player : p));\n    await saveData();\n  };\n\n  const addLocalMatch = async (match: Omit<Match, 'id' | 'comments'>) => {\n    try {\n      // Crear la nueva partida\n      const newMatch: Match = {\n        ...match,\n        id: matches.length + 1,\n        comments: [],\n      };\n\n      // Actualizar las estadísticas de los jugadores\n      const updatedPlayers = players.map(player => {\n        if (player.id === match.player1.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        if (player.id === match.player2.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        return player;\n      });\n\n      // Actualizar el estado\n      setMatches(prevMatches => [...prevMatches, newMatch]);\n      setPlayers(updatedPlayers);\n\n      // Guardar los cambios\n      await Promise.all([\n        AsyncStorage.setItem('matches', JSON.stringify([...matches, newMatch])),\n        AsyncStorage.setItem('players', JSON.stringify(updatedPlayers))\n      ]);\n\n      // Recargar los datos del backend\n      try {\n        const [updatedMatches, updatedPlayers] = await Promise.all([\n          fetch(`${API_URL}/matches`).then(res => res.json()),\n          fetch(`${API_URL}/players`).then(res => res.json())\n        ]);\n\n        setMatches(updatedMatches);\n        setPlayers(updatedPlayers);\n      } catch (error) {\n        console.error('Error al recargar datos del backend:', error);\n      }\n\n      return newMatch;\n    } catch (error) {\n      console.error('Error al agregar partida:', error);\n      throw error;\n    }\n  };\n\n  const addComment = async (matchId: number, text: string) => {\n    const newComment: Comment = {\n      id: comments.length + 1,\n      matchId,\n      userId: 1, // TODO: Implementar sistema de usuarios\n      text,\n      timestamp: new Date(),\n    };\n    setComments([...comments, newComment]);\n    await saveData();\n  };\n\n  const createTournament = async (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => {\n    const newTournament: Tournament = {\n      ...tournament,\n      id: tournaments.length + 1,\n      players: [],\n      matches: [],\n      status: 'pending',\n    };\n    setTournaments([...tournaments, newTournament]);\n    await saveData();\n  };\n\n  const updateTournament = async (tournament: Tournament) => {\n    setTournaments(tournaments.map(t => t.id === tournament.id ? tournament : t));\n    await saveData();\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        theme: CombinedDefaultTheme,\n        isOfflineMode,\n        soundEnabled,\n        toggleOfflineMode,\n        toggleSound,\n        players,\n        matches,\n        tournaments,\n        comments,\n        addPlayer,\n        updatePlayer,\n        addLocalMatch,\n        addComment,\n        createTournament,\n        updateTournament,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { api } from './api';\nimport { authService } from './authService';\nimport axios from 'axios';\n\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\nexport const playerService = {\n  getPlayers: async (): Promise<Player[]> => {\n    try {\n      console.log('🚀 Iniciando solicitud GET a /players');\n      console.log('📡 URL base:', api.defaults.baseURL);\n      const response = await api.get('/players');\n      console.log('✅ Respuesta del servidor:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('❌ Error al obtener jugadores:', error);\n      if (axios.isAxiosError(error)) {\n        console.error('Detalles del error:', {\n          status: error.response?.status,\n          statusText: error.response?.statusText,\n          data: error.response?.data,\n          config: {\n            url: error.config?.url,\n            method: error.config?.method,\n            headers: error.config?.headers\n          }\n        });\n      }\n      throw error;\n    }\n  },\n\n  createPlayer: async (player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.post('/players', player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear jugador:', error);\n      throw error;\n    }\n  },\n\n  updatePlayer: async (id: number, player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.put(`/players/${id}`, player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al actualizar jugador:', error);\n      throw error;\n    }\n  },\n\n  deletePlayer: async (id: number): Promise<void> => {\n    try {\n      await api.delete(`/players/${id}`);\n    } catch (error) {\n      console.error('Error al eliminar jugador:', error);\n      throw error;\n    }\n  },\n\n  addVictory: async (id: number): Promise<void> => {\n    try {\n      await api.post(`/players/${id}/victory`);\n    } catch (error) {\n      console.error('Error al registrar victoria:', error);\n      throw error;\n    }\n  }\n}; ","import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, ScrollView, Image, ViewStyle, TextStyle, Alert } from 'react-native';\nimport { Button, Text, Surface, useTheme, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { useApp } from '../context/AppContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { RootStackParamList } from '../navigation/types';\n\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'MainTabs'>;\n\nconst HomeScreen = () => {\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n  const theme = useTheme();\n  const [topPlayers, setTopPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const dynamicStyles = StyleSheet.create({\n    goldPlayerName: {\n      fontSize: 16,\n      color: theme.colors.primary,\n    },\n    victoriesContainer: {\n      flexDirection: 'row' as const,\n      alignItems: 'center' as const,\n      gap: 4,\n      backgroundColor: theme.colors.surface,\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n      borderRadius: 12,\n    },\n  });\n\n    const fetchTopPlayers = async () => {\n      try {\n      const players = await playerService.getPlayers();\n      // Ordenar por victorias y tomar los primeros 3\n      const sortedPlayers = [...players].sort((a, b) => b.victories - a.victories).slice(0, 3);\n        setTopPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('Error al obtener top jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    } finally {\n      setLoading(false);\n      }\n    };\n\n  useEffect(() => {\n    fetchTopPlayers();\n  }, []);\n\n  const handleAddMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n      <View style={styles.container}>\n        <Surface style={styles.header} elevation={2}>\n          <View style={styles.headerContent}>\n            <MaterialCommunityIcons \n              name=\"table-tennis\" \n              size={60}\n              color={theme.colors.primary}\n            />\n            <Text variant=\"titleLarge\" style={styles.title}>\n              Bienvenido a Ping Pong App\n            </Text>\n          </View>\n        </Surface>\n\n        <Surface style={styles.podiumContainer} elevation={2}>\n          <View style={styles.podiumHeader}>\n            <MaterialCommunityIcons name=\"trophy\" size={32} color={theme.colors.primary} />\n            <Text variant=\"titleLarge\" style={styles.podiumTitle}>\n              Top Jugadores\n            </Text>\n          </View>\n          <View style={styles.podium}>\n            {topPlayers.length >= 2 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.silverPosition,\n                  {\n                    height: 120,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#E8E8E8' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={32} color=\"#C0C0C0\" />\n                  <Text style={styles.medalText}>2°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[1].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[1].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 1 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.goldPosition,\n                  {\n                    height: 150,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFF7E6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={40} color=\"#FFD700\" />\n                  <Text style={[styles.medalText, { color: '#B8860B' }]}>1°</Text>\n                </View>\n                <Text style={[styles.playerName, dynamicStyles.goldPlayerName]}>{topPlayers[0].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[0].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 3 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.bronzePosition,\n                  {\n                    height: 100,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFE5D6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={28} color=\"#CD7F32\" />\n                  <Text style={[styles.medalText, { color: '#8B4513' }]}>3°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[2].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[2].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n          </View>\n        </Surface>\n\n        <View style={styles.buttonsContainer}>\n          <Button\n            mode=\"contained\"\n            onPress={handleAddMatch}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n            )}\n          >\n            Nuevo Partido\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'MatchesTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"clock-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Partidos\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'PlayersTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"account-group-outline\" size={size} color={color} />\n            )}\n          >\n            Gestionar Jugadores\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'RankingTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"trophy-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Ranking\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('Tournament')}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"tournament\" size={size} color={color} />\n            )}\n          >\n            Torneo Rápido\n          </Button>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#fff',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  headerContent: {\n    alignItems: 'center',\n  },\n  title: {\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  podiumContainer: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  podiumHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 24,\n    gap: 8,\n  },\n  podiumTitle: {\n    fontWeight: 'bold',\n  },\n  podium: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    height: 170,\n    gap: 8,\n  },\n  podiumPosition: {\n    width: 100,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 12,\n    padding: 12,\n    paddingTop: 8,\n  },\n  goldPosition: {\n    zIndex: 3,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  silverPosition: {\n    zIndex: 2,\n    marginRight: -4,\n  },\n  bronzePosition: {\n    zIndex: 1,\n    marginLeft: -4,\n  },\n  medalContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  medalText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: -4,\n  },\n  playerName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  victories: {\n    fontSize: 12,\n    opacity: 0.8,\n  },\n  buttonsContainer: {\n    padding: 16,\n    gap: 12,\n  },\n  button: {\n    marginVertical: 8,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginBottom: 10,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default HomeScreen; ","// src/screens/PlayersScreen.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, FlatList, Alert, ViewStyle, TextStyle, Animated } from 'react-native';\nimport { Text, Button, Surface, TextInput, useTheme, Portal, Modal, ActivityIndicator, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype PlayersScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\ninterface Styles {\n  container: ViewStyle;\n  header: ViewStyle;\n  title: TextStyle;\n  playerCard: ViewStyle;\n  playerInfo: ViewStyle;\n  playerDetails: ViewStyle;\n  actions: ViewStyle;\n  loadingContainer: ViewStyle;\n  modalContainer: ViewStyle;\n  modalContent: ViewStyle;\n  modalTitle: TextStyle;\n  modalText: TextStyle;\n  modalButtons: ViewStyle;\n  modalButton: ViewStyle;\n  input: ViewStyle;\n  content: ViewStyle;\n  addPlayerSection: ViewStyle;\n  addButton: ViewStyle;\n  topPlayerCard: ViewStyle;\n  avatar: ViewStyle;\n  nameContainer: ViewStyle;\n  crownIcon: ViewStyle;\n  victoriesContainer: ViewStyle;\n  victoriesText: TextStyle;\n  emptyContainer: ViewStyle;\n  emptyText: TextStyle;\n}\n\nconst styles = StyleSheet.create<Styles>({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    marginTop: 8,\n  },\n  content: {\n    flex: 1,\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  playerCard: {\n    margin: 8,\n    padding: 16,\n    borderRadius: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  playerDetails: {\n    marginLeft: 16,\n  },\n  addPlayerSection: {\n    marginTop: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  input: {\n    marginBottom: 20,\n  },\n  addButton: {\n    marginTop: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8,\n    width: '80%',\n  },\n  modalTitle: {\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 5,\n  },\n  topPlayerCard: {\n    borderColor: '#FFD700',\n    borderWidth: 2,\n  },\n  avatar: {\n    marginRight: 12,\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  crownIcon: {\n    marginLeft: 8,\n  },\n  victoriesContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  victoriesText: {\n    marginLeft: 4,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    padding: 32,\n  },\n  emptyText: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n});\n\nconst PlayersScreen = () => {\n  const navigation = useNavigation<PlayersScreenNavigationProp>();\n  const theme = useTheme();\n  const [modalScale] = useState(new Animated.Value(0));\n\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [newName, setNewName] = useState('');\n  const [editingPlayer, setEditingPlayer] = useState<Player | null>(null);\n  const [editName, setEditName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudo cargar la lista de jugadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addPlayer = async () => {\n    if (!newName.trim()) {\n      Alert.alert('Campo vacío', 'Por favor ingresa un nombre');\n      return;\n    }\n\n    try {\n      await playerService.createPlayer({ name: newName });\n      setNewName('');\n      fetchPlayers();\n    } catch (error) {\n      console.error('Error al agregar jugador:', error);\n      Alert.alert('Error', 'No se pudo agregar el jugador');\n    }\n  };\n\n  const handleUpdatePlayer = async () => {\n    if (!editingPlayer || !editName.trim()) return;\n\n    try {\n      await playerService.updatePlayer(editingPlayer.id, { name: editName });\n      Alert.alert('Éxito', 'Jugador actualizado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo actualizar el jugador');\n    } finally {\n      setEditingPlayer(null);\n      setEditName('');\n    }\n  };\n\n  const handleDelete = async (player: Player) => {\n    setSelectedPlayer(player);\n    setDeleteModalVisible(true);\n  };\n\n  const confirmDelete = async () => {\n    if (!selectedPlayer) return;\n    \n    try {\n      await playerService.deletePlayer(selectedPlayer.id);\n      Alert.alert('Éxito', 'Jugador eliminado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar el jugador');\n    } finally {\n      setDeleteModalVisible(false);\n      setSelectedPlayer(null);\n    }\n  };\n\n  const openModal = () => {\n    Animated.spring(modalScale, {\n      toValue: 1,\n      useNativeDriver: true,\n      tension: 50,\n      friction: 7,\n    }).start();\n  };\n\n  const closeModal = () => {\n    Animated.timing(modalScale, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start(() => setEditingPlayer(null));\n  };\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (editingPlayer) {\n      openModal();\n    }\n  }, [editingPlayer]);\n\n  const getTopPlayer = () => {\n    if (players.length === 0) return null;\n    return players.reduce((prev, current) => \n      (prev.victories > current.victories) ? prev : current\n    );\n  };\n\n  const renderPlayerCard = ({ item }: { item: Player }) => {\n    const isTopPlayer = getTopPlayer()?.id === item.id;\n    \n    return (\n      <Surface \n        style={[\n          styles.playerCard,\n          isTopPlayer && styles.topPlayerCard\n        ]} \n        elevation={isTopPlayer ? 4 : 1}\n      >\n        <View style={styles.playerInfo}>\n          <Avatar.Text \n            size={40} \n            label={item.name.substring(0, 2).toUpperCase()}\n            style={[\n              styles.avatar,\n              isTopPlayer && { backgroundColor: theme.colors.primary }\n            ]}\n          />\n          <View style={styles.playerDetails}>\n            <View style={styles.nameContainer}>\n              <Text variant=\"titleMedium\">{item.name}</Text>\n              {isTopPlayer && (\n                <MaterialCommunityIcons \n                  name=\"crown\" \n                  size={20} \n                  color={theme.colors.primary} \n                  style={styles.crownIcon}\n                />\n              )}\n            </View>\n            <View style={styles.victoriesContainer}>\n              <MaterialCommunityIcons \n                name=\"trophy\" \n                size={16} \n                color={theme.colors.primary} \n              />\n              <Text variant=\"bodySmall\" style={styles.victoriesText}>\n                {item.victories} victorias\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.actions}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => {\n              setEditingPlayer(item);\n              setEditName(item.name);\n            }}\n            icon={() => <MaterialCommunityIcons name=\"pencil\" size={24} color={theme.colors.primary} />}\n            loading={editingPlayer?.id === item.id}\n          >\n            Editar\n          </Button>\n          <Button\n            mode=\"outlined\"\n            onPress={() => handleDelete(item)}\n            icon={() => <MaterialCommunityIcons name=\"delete\" size={24} color={theme.colors.error} />}\n            textColor={theme.colors.error}\n            loading={selectedPlayer?.id === item.id && deleteModalVisible}\n          >\n            Eliminar\n          </Button>\n        </View>\n      </Surface>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"account-group\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Jugadores\n        </Text>\n      </Surface>\n\n      <Surface style={styles.content} elevation={1}>\n        <FlatList\n          data={players}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderPlayerCard}\n          ListEmptyComponent={\n            <View style={styles.emptyContainer}>\n              <MaterialCommunityIcons name=\"account-off\" size={48} color={theme.colors.outline} />\n              <Text variant=\"titleMedium\" style={styles.emptyText}>\n                No hay jugadores registrados\n              </Text>\n            </View>\n          }\n        />\n\n        <Surface style={styles.addPlayerSection} elevation={2}>\n          <TextInput\n            mode=\"outlined\"\n            label=\"Nombre del jugador\"\n            value={newName}\n            onChangeText={setNewName}\n            style={styles.input}\n            right={newName ? (\n              <TextInput.Icon \n                icon={({ size, color }) => (\n                  <MaterialCommunityIcons \n                    name=\"close\" \n                    size={size} \n                    color={color} \n                  />\n                )} \n                onPress={() => setNewName('')} \n              />\n            ) : undefined}\n          />\n          <Button\n            mode=\"contained\"\n            onPress={addPlayer}\n            style={styles.addButton}\n            icon={() => <MaterialCommunityIcons name=\"account-plus\" size={24} color={theme.colors.onPrimary} />}\n          >\n            Agregar Jugador\n          </Button>\n        </Surface>\n      </Surface>\n\n      <Portal>\n        <Modal\n          visible={editingPlayer !== null}\n          onDismiss={closeModal}\n          style={styles.modalContainer}\n        >\n          <Animated.View \n            style={[\n              styles.modalContent,\n              { transform: [{ scale: modalScale }] }\n            ]}\n          >\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              Editar Jugador\n            </Text>\n            <TextInput\n              mode=\"outlined\"\n              label=\"Nombre\"\n              value={editName}\n              onChangeText={setEditName}\n              style={styles.input}\n              left={(\n                <TextInput.Icon \n                  icon={({ size, color }) => (\n                    <MaterialCommunityIcons \n                      name=\"account\" \n                      size={size} \n                      color={color} \n                    />\n                  )} \n                />\n              )}\n            />\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={closeModal}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={handleUpdatePlayer}\n                style={styles.modalButton}\n                loading={loading}\n              >\n                Guardar\n              </Button>\n            </View>\n          </Animated.View>\n        </Modal>\n      </Portal>\n\n      <Portal>\n        <Modal\n          visible={deleteModalVisible}\n          onDismiss={() => setDeleteModalVisible(false)}\n          style={styles.modalContainer}\n        >\n          <View style={styles.modalContent}>\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              ¿Eliminar jugador?\n            </Text>\n            <Text variant=\"bodyMedium\" style={styles.modalText}>\n              ¿Estás seguro de que deseas eliminar a {selectedPlayer?.name}?\n            </Text>\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => setDeleteModalVisible(false)}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={confirmDelete}\n                buttonColor={theme.colors.error}\n                style={styles.modalButton}\n              >\n                Eliminar\n              </Button>\n            </View>\n          </View>\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\nexport default PlayersScreen;\n","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Tournament {\r\n  id_torneo: number;\r\n  nombre: string;\r\n  fecha_inicio: string;\r\n  fecha_fin: string;\r\n  estado: string;\r\n}\r\n\r\nclass TournamentService {\r\n  async getAllTournaments(): Promise<Tournament[]> {\r\n    try {\r\n      console.log('🚀 Iniciando solicitud GET a /torneos');\r\n      console.log('📡 URL base:', api.defaults.baseURL);\r\n      const response = await api.get('/torneos');\r\n      console.log('✅ Respuesta del servidor:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener torneos:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getTournament(id: number): Promise<Tournament> {\r\n    try {\r\n      const response = await api.get(`/torneos/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createTournament(tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.post('/torneos', tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTournament(id: number, tournament: Partial<Tournament>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.put(`/torneos/${id}`, tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteTournament(id: number): Promise<void> {\r\n    try {\r\n      await api.delete(`/torneos/${id}`);\r\n    } catch (error) {\r\n      console.error('Error al eliminar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const tournamentService = new TournamentService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert } from 'react-native';\nimport { tournamentService } from '../api/tournamentService';\nimport { Tournament } from '../api/tournamentService';\n\nexport default function TournamentScreen() {\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [newTournament, setNewTournament] = useState({\n    nombre: '',\n    fecha_inicio: '',\n    fecha_fin: '',\n    estado: 'activo'\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n  }, []);\n\n  const fetchTournaments = async () => {\n    try {\n      setLoading(true);\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateTournament = async () => {\n    try {\n      if (!newTournament.nombre || !newTournament.fecha_inicio || !newTournament.fecha_fin) {\n        Alert.alert('Error', 'Por favor completa todos los campos');\n        return;\n      }\n\n      await tournamentService.createTournament(newTournament);\n      setModalVisible(false);\n      setNewTournament({\n        nombre: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: 'activo'\n      });\n      fetchTournaments();\n      Alert.alert('Éxito', 'Torneo creado correctamente');\n    } catch (error) {\n      console.error('Error al crear torneo:', error);\n      Alert.alert('Error', 'No se pudo crear el torneo');\n    }\n  };\n\n  const renderTournamentCard = ({ item }: { item: Tournament }) => (\n    <View style={styles.card}>\n      <Text style={styles.tournamentName}>{item.nombre}</Text>\n      <View style={styles.datesContainer}>\n        <Text style={styles.date}>Inicio: {new Date(item.fecha_inicio).toLocaleDateString()}</Text>\n        <Text style={styles.date}>Fin: {new Date(item.fecha_fin).toLocaleDateString()}</Text>\n      </View>\n      <View style={[styles.statusBadge, { backgroundColor: item.estado === 'activo' ? '#4CAF50' : '#9E9E9E' }]}>\n        <Text style={styles.statusText}>{item.estado}</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Torneos</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Crear Torneo</Text>\n        </TouchableOpacity>\n      </View>\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando torneos...</Text>\n      ) : tournaments.length === 0 ? (\n        <Text style={styles.emptyText}>No hay torneos disponibles</Text>\n      ) : (\n        <FlatList\n          data={tournaments}\n          renderItem={renderTournamentCard}\n          keyExtractor={(item) => item.id_torneo.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Crear Nuevo Torneo</Text>\n            \n            <TextInput\n              style={styles.input}\n              placeholder=\"Nombre del torneo\"\n              value={newTournament.nombre}\n              onChangeText={(text) => setNewTournament({...newTournament, nombre: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de inicio (YYYY-MM-DD)\"\n              value={newTournament.fecha_inicio}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_inicio: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de fin (YYYY-MM-DD)\"\n              value={newTournament.fecha_fin}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_fin: text})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateTournament}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  tournamentName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  datesContainer: {\n    marginBottom: 8,\n  },\n  date: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  statusText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Ranking {\r\n  id_rankings: number;\r\n  id_torneo: number;\r\n  id_jugador: number;\r\n  posicion: number;\r\n  partidas_ganadas: number;\r\n  partidas_perdidas: number;\r\n  nombre_jugador?: string; // Para cuando necesitemos mostrar el nombre del jugador\r\n  nombre_torneo?: string; // Para cuando necesitemos mostrar el nombre del torneo\r\n  total_partidas?: number;\r\n  porcentaje_victorias?: number;\r\n}\r\n\r\nclass RankingService {\r\n  async getTournamentRankings(tournamentId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para torneo:', tournamentId);\r\n      const response = await api.get(`/rankings/torneo/${tournamentId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del torneo:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPlayerRankings(playerId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para jugador:', playerId);\r\n      const response = await api.get(`/rankings/jugador/${playerId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del jugador:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createRanking(ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Creando nuevo ranking:', ranking);\r\n      const response = await api.post('/rankings', ranking);\r\n      console.log('✅ Ranking creado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al crear ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateRanking(id: number, ranking: Partial<Ranking>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Actualizando ranking:', { id, ranking });\r\n      const response = await api.put(`/rankings/${id}`, ranking);\r\n      console.log('✅ Ranking actualizado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al actualizar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteRanking(id: number): Promise<void> {\r\n    try {\r\n      console.log('🚀 Eliminando ranking:', id);\r\n      await api.delete(`/rankings/${id}`);\r\n      console.log('✅ Ranking eliminado correctamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al eliminar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const rankingService = new RankingService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert, ScrollView } from 'react-native';\nimport { rankingService, Ranking } from '../api/rankingService';\nimport { tournamentService, Tournament } from '../api/tournamentService';\nimport { playerService } from '../api/playerService';\n\nexport default function RankingScreen() {\n  const [rankings, setRankings] = useState<Ranking[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [players, setPlayers] = useState<Array<{ id: number; name: string }>>([]);\n  const [selectedTournament, setSelectedTournament] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [showTournamentSelector, setShowTournamentSelector] = useState(false);\n  const [showPlayerSelector, setShowPlayerSelector] = useState(false);\n  const [newRanking, setNewRanking] = useState({\n    id_torneo: 0,\n    id_jugador: 0,\n    partidas_ganadas: 0,\n    partidas_perdidas: 0\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedTournament) {\n      fetchRankings(selectedTournament);\n    }\n  }, [selectedTournament]);\n\n  const fetchTournaments = async () => {\n    try {\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n      if (data.length > 0) {\n        setSelectedTournament(data[0].id_torneo);\n      }\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    }\n  };\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    }\n  };\n\n  const fetchRankings = async (tournamentId: number) => {\n    try {\n      setLoading(true);\n      const data = await rankingService.getTournamentRankings(tournamentId);\n      setRankings(data);\n    } catch (error) {\n      console.error('Error al obtener rankings:', error);\n      Alert.alert('Error', 'No se pudieron cargar los rankings');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateRanking = async () => {\n    try {\n      if (!newRanking.id_torneo || !newRanking.id_jugador) {\n        Alert.alert('Error', 'Por favor selecciona un torneo y un jugador');\n        return;\n      }\n\n      const rankingData = {\n        ...newRanking,\n        posicion: 0 // La posición se calculará automáticamente en el backend\n      };\n\n      await rankingService.createRanking(rankingData);\n      setModalVisible(false);\n      setNewRanking({\n        id_torneo: 0,\n        id_jugador: 0,\n        partidas_ganadas: 0,\n        partidas_perdidas: 0\n      });\n      fetchRankings(newRanking.id_torneo);\n      Alert.alert('Éxito', 'Ranking creado correctamente');\n    } catch (error) {\n      console.error('Error al crear ranking:', error);\n      Alert.alert('Error', 'No se pudo crear el ranking');\n    }\n  };\n\n  const renderRankingCard = ({ item }: { item: Ranking }) => (\n    <View style={styles.card}>\n      <View style={styles.positionContainer}>\n        <Text style={styles.position}>{item.posicion}°</Text>\n      </View>\n      <View style={styles.detailsContainer}>\n        <Text style={styles.playerName}>{item.nombre_jugador}</Text>\n        <View style={styles.statsContainer}>\n          <Text style={styles.stats}>G: {item.partidas_ganadas} | P: {item.partidas_perdidas}</Text>\n          <Text style={styles.percentage}>{item.porcentaje_victorias}% victorias</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderTournamentSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showTournamentSelector}\n      onRequestClose={() => setShowTournamentSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Torneo</Text>\n          <ScrollView style={styles.selectorList}>\n            {tournaments.map((tournament) => (\n              <TouchableOpacity\n                key={tournament.id_torneo}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setSelectedTournament(tournament.id_torneo);\n                  setShowTournamentSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{tournament.nombre}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowTournamentSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  const renderPlayerSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showPlayerSelector}\n      onRequestClose={() => setShowPlayerSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Jugador</Text>\n          <ScrollView style={styles.selectorList}>\n            {players.map((player) => (\n              <TouchableOpacity\n                key={player.id}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setNewRanking({...newRanking, id_jugador: player.id});\n                  setShowPlayerSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{player.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowPlayerSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Rankings</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Agregar Ranking</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.tournamentSelector}>\n        <Text style={styles.selectorLabel}>Seleccionar Torneo:</Text>\n        <TouchableOpacity\n          style={styles.selectorButton}\n          onPress={() => setShowTournamentSelector(true)}\n        >\n          <Text style={styles.selectorButtonText}>\n            {selectedTournament ? tournaments.find(t => t.id_torneo === selectedTournament)?.nombre : 'Seleccionar torneo'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {renderTournamentSelector()}\n      {renderPlayerSelector()}\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando rankings...</Text>\n      ) : rankings.length === 0 ? (\n        <Text style={styles.emptyText}>No hay rankings disponibles</Text>\n      ) : (\n        <FlatList\n          data={rankings}\n          renderItem={renderRankingCard}\n          keyExtractor={(item) => item.id_rankings.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Agregar Nuevo Ranking</Text>\n            \n            <Text style={styles.selectorLabel}>Torneo:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowTournamentSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_torneo ? tournaments.find(t => t.id_torneo === newRanking.id_torneo)?.nombre : 'Seleccionar torneo'}\n              </Text>\n            </TouchableOpacity>\n\n            <Text style={styles.selectorLabel}>Jugador:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowPlayerSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_jugador ? players.find(p => p.id === newRanking.id_jugador)?.name : 'Seleccionar jugador'}\n              </Text>\n            </TouchableOpacity>\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas ganadas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_ganadas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_ganadas: parseInt(text) || 0})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas perdidas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_perdidas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_perdidas: parseInt(text) || 0})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateRanking}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  tournamentSelector: {\n    backgroundColor: '#fff',\n    padding: 16,\n    marginBottom: 8,\n  },\n  selectorLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 8,\n  },\n  selectorButton: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  selectorButtonText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  selectorList: {\n    maxHeight: 300,\n  },\n  selectorItem: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  selectorItemText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  positionContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#2196F3',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  position: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  detailsContainer: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  stats: {\n    fontSize: 14,\n    color: '#666',\n  },\n  percentage: {\n    fontSize: 14,\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Surface, Switch, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\n\nconst SettingsScreen = () => {\n  const { theme, isOfflineMode, soundEnabled, toggleOfflineMode, toggleSound } = useApp();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"cog\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Ajustes\n        </Text>\n      </Surface>\n\n      <Surface style={styles.section} elevation={1}>\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"wifi-off\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Modo sin conexión</Text>\n            <Text variant=\"bodySmall\">Usar datos locales sin conexión a internet</Text>\n          </View>\n          <Switch value={isOfflineMode} onValueChange={toggleOfflineMode} />\n        </View>\n\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"volume-high\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Sonido</Text>\n            <Text variant=\"bodySmall\">Activar/desactivar efectos de sonido</Text>\n          </View>\n          <Switch value={soundEnabled} onValueChange={toggleSound} />\n        </View>\n      </Surface>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 24,\n    alignItems: 'center',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  title: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  section: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n  },\n  settingText: {\n    flex: 1,\n    marginLeft: 16,\n  }\n}); \n\nexport default SettingsScreen; ","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { Text, Button, TextInput, Surface, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getPlayers, addMatch } from '../api/api';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\n\ntype AddMatchScreenNavigationProp = StackNavigationProp<RootStackParamList, 'AddMatch'>;\n\ninterface Player {\n  id: number;\n  name: string;\n}\n\nconst AddMatchScreen = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer1, setSelectedPlayer1] = useState<number | null>(null);\n  const [selectedPlayer2, setSelectedPlayer2] = useState<number | null>(null);\n  const [player1Result, setPlayer1Result] = useState<'win' | 'lose'>('win');\n  const [player2Result, setPlayer2Result] = useState<'win' | 'lose'>('lose');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const navigation = useNavigation<AddMatchScreenNavigationProp>();\n  const theme = useTheme();\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await getPlayers();\n      setPlayers(data);\n      setLoading(false);\n    } catch (error) {\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedPlayer1 || !selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    if (selectedPlayer1 === selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus('idle');\n\n    try {\n      await addMatch(\n        selectedPlayer1,\n        selectedPlayer2,\n        player1Result,\n        player2Result\n      );\n\n      setSubmitStatus('success');\n      setTimeout(() => {\n        navigation.goBack();\n      }, 1500);\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Surface style={styles.surface}>\n        <View style={styles.header}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => navigation.goBack()}\n            style={styles.backButton}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"arrow-left\" size={size} color={color} />\n            )}\n          >\n            Volver\n          </Button>\n        <Text style={styles.title}>Registrar Nueva Partida</Text>\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 1\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer1 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer1(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 2\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer2 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer2(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.resultSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"trophy\" size={20} color={theme.colors.primary} /> Resultado\n          </Text>\n          <View style={styles.resultButtons}>\n            <Button\n              mode={player1Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('win');\n                setPlayer2Result('lose');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 1 Gana\n            </Button>\n            <Button\n              mode={player2Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('lose');\n                setPlayer2Result('win');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 2 Gana\n            </Button>\n          </View>\n        </View>\n\n        <Button\n          mode=\"contained\"\n          onPress={handleSubmit}\n          style={[\n            styles.submitButton,\n            submitStatus === 'success' && styles.successButton,\n            submitStatus === 'error' && styles.errorButton\n          ]}\n          loading={isSubmitting}\n          disabled={isSubmitting}\n          icon={({ size, color }) => {\n            if (submitStatus === 'success') {\n              return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n            } else if (submitStatus === 'error') {\n              return <MaterialCommunityIcons name=\"alert-circle\" size={size} color={color} />;\n            }\n            return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n          }}\n        >\n          {isSubmitting ? 'Registrando...' : \n           submitStatus === 'success' ? '¡Partida Registrada!' :\n           submitStatus === 'error' ? 'Error al Registrar' :\n           'Registrar Partida'}\n        </Button>\n      </Surface>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  surface: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 4,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    flex: 1,\n    textAlign: 'center',\n  },\n  playerSection: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  playerButton: {\n    marginBottom: 8,\n  },\n  resultSection: {\n    marginBottom: 24,\n  },\n  resultButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  resultButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  submitButton: {\n    marginTop: 16,\n  },\n  successButton: {\n    backgroundColor: '#4CAF50',\n  },\n  errorButton: {\n    backgroundColor: '#f44336',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AddMatchScreen;\n","// src/screens/MatchesScreen.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, FlatList, Alert } from 'react-native';\nimport { Text, Card, Button, ActivityIndicator, Surface, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getMatches, deleteMatch } from '../api/api';\nimport { authService } from '../api/authService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype MatchesScreenNavigationProp = StackNavigationProp<RootStackParamList, 'MainTabs'>;\n\ninterface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name: string;\n  player2_name: string;\n  winner_name: string;\n}\n\nconst MatchesScreen = () => {\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigation = useNavigation<MatchesScreenNavigationProp>();\n  const theme = useTheme();\n\n  const fetchMatches = async () => {\n    try {\n      setLoading(true);\n      const data = await getMatches();\n      setMatches(data);\n      setError(null);\n    } catch (err) {\n      setError('Error al cargar las partidas');\n      console.error('Error al cargar partidas:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMatches();\n  }, []);\n\n  const handleDeleteMatch = async (matchId: number) => {\n    try {\n      await deleteMatch(matchId);\n      setMatches(matches.filter(match => match.id !== matchId));\n      Alert.alert('Éxito', 'Partida eliminada correctamente');\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar la partida');\n    }\n  };\n\n  const handleNewMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  const renderMatch = ({ item }: { item: Match }) => (\n    <Card style={styles.matchCard}>\n      <Card.Content>\n        <Text style={styles.matchTitle}>\n          {item.player1_name} vs {item.player2_name}\n        </Text>\n        <Text style={styles.matchDate}>\n          Fecha: {new Date(item.match_date).toLocaleDateString()}\n        </Text>\n        <Text style={styles.matchResult}>\n          Ganador: {item.winner_name}\n        </Text>\n        <Text style={styles.matchScore}>\n          Resultado: {item.player1_result === 'win' ? 'Ganó' : 'Perdió'} {item.player1_name} - \n          {item.player2_result === 'win' ? 'Ganó' : 'Perdió'} {item.player2_name}\n        </Text>\n      </Card.Content>\n      <Card.Actions>\n        <Button onPress={() => handleDeleteMatch(item.id)}>Eliminar</Button>\n      </Card.Actions>\n    </Card>\n  );\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <Button onPress={fetchMatches}>Reintentar</Button>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Surface style={styles.header}>\n        <View style={styles.titleContainer}>\n          <MaterialCommunityIcons name=\"history\" size={32} color={theme.colors.primary} />\n          <Text style={styles.title}>Historial de Partidas</Text>\n        </View>\n        <Button \n          mode=\"contained\" \n          onPress={handleNewMatch}\n          style={styles.newMatchButton}\n          icon={({ size, color }) => (\n            <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n          )}\n        >\n          Nueva Partida\n        </Button>\n      </Surface>\n      <FlatList\n        data={matches}\n        renderItem={renderMatch}\n        keyExtractor={item => item.id.toString()}\n        contentContainerStyle={styles.listContainer}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    padding: 16,\n    elevation: 4,\n    backgroundColor: '#fff',\n    marginBottom: 8,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  newMatchButton: {\n    marginTop: 8,\n    borderRadius: 8,\n  },\n  listContainer: {\n    padding: 16,\n  },\n  matchCard: {\n    marginBottom: 16,\n    elevation: 2,\n    borderRadius: 8,\n  },\n  matchTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  matchDate: {\n    color: '#666',\n    marginBottom: 4,\n  },\n  matchResult: {\n    color: '#2196F3',\n    marginBottom: 4,\n  },\n  matchScore: {\n    color: '#4CAF50',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n});\n\nexport default MatchesScreen;\n","// src/navigation/AppNavigator.tsx\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\nimport { RootStackParamList, MainTabParamList } from './types';\n\n// Screens\nimport HomeScreen from '../screens/HomeScreen';\nimport PlayersScreen from '../screens/PlayersScreen';\nimport TournamentScreen from '../screens/TournamentScreen';\nimport RankingScreen from '../screens/RankingScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport AddMatchScreen from '../screens/AddMatchScreen';\nimport MatchesScreen from '../screens/MatchesScreen';\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction HomeStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"HomeScreen\" \n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction PlayerStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"PlayerScreen\" \n        component={PlayersScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction MatchesStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MatchesScreen\" \n        component={MatchesScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TournamentStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"TournamentScreen\" \n        component={TournamentScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction RankingStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"RankingScreen\" \n        component={RankingScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nconst MainTabs = () => {\n  const theme = useTheme();\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.outline,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopWidth: 1,\n          borderTopColor: '#ddd',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"HomeTab\"\n        component={HomeStack}\n        options={{\n          tabBarLabel: 'Inicio',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"PlayersTab\"\n        component={PlayerStack}\n        options={{\n          tabBarLabel: 'Jugadores',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"account-group\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"MatchesTab\"\n        component={MatchesStack}\n        options={{\n          tabBarLabel: 'Partidos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"table-tennis\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"TournamentsTab\"\n        component={TournamentStack}\n        options={{\n          tabBarLabel: 'Torneos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"trophy\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"RankingsTab\"\n        component={RankingStack}\n        options={{\n          tabBarLabel: 'Rankings',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"podium\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"MainTabs\" component={MainTabs} />\n        <Stack.Screen name=\"AddMatch\" component={AddMatchScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n","import React from 'react';\nimport { PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { AppProvider } from './src/context/AppContext';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { CombinedDefaultTheme } from './src/theme';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <PaperProvider theme={CombinedDefaultTheme}>\n      <AppProvider>\n          <AppNavigator />\n      </AppProvider>\n      </PaperProvider>\n    </SafeAreaProvider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/AppPingPong/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [159], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["CombinedDefaultTheme","_objectSpread","MD3LightTheme","NavigationDefaultTheme","colors","MD3DarkTheme","NavigationDarkTheme","primary","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","error","onError","errorContainer","onErrorContainer","background","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","API_URL","api","axios","create","baseURL","headers","timeout","getPlayers","_ref","_asyncToGenerator","get","data","console","apply","arguments","addMatch","_ref2","name","post","_ref3","player1Id","player2Id","player1Result","player2Result","requestBody","player1_id","player2_id","player1_result","player2_result","log","url","defaults","response","_error$response","_error$response2","_error$response3","_error$config","_error$config2","_error$config3","_error$config4","isAxiosError","status","statusText","config","method","_x2","_x3","_x4","_x5","getMatches","_ref4","deleteMatch","_ref5","id","delete","_ref6","_x7","_ref7","_ref8","_ref9","tournament","_ref10","put","_ref11","_ref12","tournamentId","_ref13","playerId","_ref14","ranking","_ref15","_ref16","AppContext","createContext","undefined","AppProvider","children","_useState","useState","_useState2","_slicedToArray","isOfflineMode","setIsOfflineMode","_useState3","_useState4","soundEnabled","setSoundEnabled","_useState5","_useState6","players","setPlayers","_useState7","_useState8","matches","setMatches","_useState9","_useState10","tournaments","setTournaments","_useState11","_useState12","comments","setComments","useEffect","loadData","storedPlayers","AsyncStorage","getItem","storedMatches","storedTournaments","storedComments","storedSoundEnabled","JSON","parse","saveData","setItem","stringify","toggleSound","newSoundEnabled","addPlayer","player","newPlayer","length","stats_wins","stats_losses","stats_draws","concat","_toConsumableArray","_x","updatePlayer","map","p","addLocalMatch","match","newMatch","updatedPlayers","_match$winner","_match$winner2","_match$winner3","_match$winner4","_match$winner5","_match$winner6","player1","victories","winner","player2","prevMatches","Promise","all","_yield$Promise$all","fetch","then","res","json","_yield$Promise$all2","updatedMatches","addComment","matchId","text","newComment","userId","timestamp","Date","createTournament","newTournament","_x6","updateTournament","t","_jsx","Provider","value","theme","toggleOfflineMode","playerService","_getPlayers","createPlayer","_createPlayer","_updatePlayer","deletePlayer","_deletePlayer","addVictory","_addVictory","styles","StyleSheet","scrollView","flex","scrollContent","flexGrow","container","backgroundColor","paddingBottom","header","padding","marginHorizontal","marginTop","borderRadius","headerContent","alignItems","title","textAlign","podiumContainer","margin","podiumHeader","flexDirection","justifyContent","marginBottom","gap","podiumTitle","fontWeight","podium","height","podiumPosition","width","paddingTop","goldPosition","zIndex","borderWidth","borderColor","silverPosition","marginRight","bronzePosition","marginLeft","medalContainer","medalText","fontSize","position","bottom","playerName","opacity","buttonsContainer","button","marginVertical","logo","loadingContainer","navigation","useNavigation","useTheme","topPlayers","setTopPlayers","loading","setLoading","dynamicStyles","goldPlayerName","color","victoriesContainer","paddingHorizontal","paddingVertical","fetchTopPlayers","sortedPlayers","sort","a","b","slice","Alert","alert","View","style","ActivityIndicator","size","ScrollView","contentContainerStyle","_jsxs","Surface","MaterialCommunityIcons","Text","variant","Button","mode","onPress","navigate","icon","screen","content","playerCard","playerInfo","playerDetails","addPlayerSection","input","addButton","actions","modalContainer","modalContent","modalTitle","modalText","modalButtons","modalButton","topPlayerCard","avatar","nameContainer","crownIcon","victoriesText","emptyContainer","emptyText","Animated","Value","modalScale","newName","setNewName","editingPlayer","setEditingPlayer","editName","setEditName","_useState13","_useState14","selectedPlayer","setSelectedPlayer","_useState15","_useState16","deleteModalVisible","setDeleteModalVisible","fetchPlayers","trim","handleUpdatePlayer","handleDelete","confirmDelete","closeModal","timing","toValue","duration","useNativeDriver","start","spring","tension","friction","FlatList","keyExtractor","item","toString","renderItem","_getTopPlayer","isTopPlayer","reduce","prev","current","Avatar","label","substring","toUpperCase","textColor","ListEmptyComponent","TextInput","onChangeText","right","Icon","Portal","Modal","visible","onDismiss","transform","scale","left","buttonColor","tournamentService","_createClass","TournamentService","_classCallCheck","key","_getAllTournaments","_getTournament","_createTournament","_updateTournament","_deleteTournament","TournamentScreen","modalVisible","setModalVisible","nombre","fecha_inicio","fecha_fin","estado","setNewTournament","fetchTournaments","getAllTournaments","handleCreateTournament","TouchableOpacity","addButtonText","loadingText","card","tournamentName","datesContainer","date","toLocaleDateString","statusBadge","id_torneo","list","animationType","transparent","onRequestClose","placeholder","cancelButton","buttonText","createButton","alignSelf","maxWidth","rankingService","RankingService","_getTournamentRankings","_getPlayerRankings","_error$response4","_error$response5","_error$response6","_error$config5","_error$config6","_createRanking","_error$response7","_error$response8","_error$response9","_error$config7","_error$config8","_error$config9","_updateRanking","_error$response10","_error$response11","_error$response12","_error$config10","_error$config11","_error$config12","_deleteRanking","_error$response13","_error$response14","_error$response15","_error$config13","_error$config14","_error$config15","RankingScreen","_tournaments$find","_tournaments$find2","_players$find","rankings","setRankings","selectedTournament","setSelectedTournament","showTournamentSelector","setShowTournamentSelector","showPlayerSelector","setShowPlayerSelector","_useState17","id_jugador","partidas_ganadas","partidas_perdidas","_useState18","newRanking","setNewRanking","fetchRankings","getTournamentRankings","handleCreateRanking","rankingData","posicion","createRanking","tournamentSelector","selectorLabel","selectorButton","selectorButtonText","find","selectorList","selectorItem","selectorItemText","positionContainer","detailsContainer","nombre_jugador","statsContainer","stats","percentage","porcentaje_victorias","id_rankings","keyboardType","parseInt","maxHeight","borderBottomWidth","borderBottomColor","section","settingItem","settingText","_useApp","context","useContext","Error","useApp","Switch","onValueChange","backButton","playerSection","sectionTitle","playerButton","resultSection","resultButtons","resultButton","submitButton","successButton","errorButton","selectedPlayer1","setSelectedPlayer1","selectedPlayer2","setSelectedPlayer2","setPlayer1Result","setPlayer2Result","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleSubmit","setTimeout","goBack","disabled","titleContainer","newMatchButton","listContainer","matchCard","matchTitle","matchDate","matchResult","matchScore","errorText","setError","fetchMatches","err","handleDeleteMatch","filter","Card","Content","player1_name","player2_name","match_date","winner_name","Actions","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","HomeStack","Navigator","Screen","component","HomeScreen","options","headerShown","PlayerStack","PlayersScreen","MatchesStack","MatchesScreen","TournamentStack","RankingStack","MainTabs","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","borderTopWidth","borderTopColor","tabBarLabel","tabBarIcon","SettingsScreen","NavigationContainer","AddMatchScreen","App","SafeAreaProvider","PaperProvider","AppNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}