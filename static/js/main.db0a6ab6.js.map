{"version":3,"file":"static/js/main.db0a6ab6.js","mappings":"4wBAGA,IAAMA,EAAoBC,EAAAA,EAAAA,EAAA,GACrBC,EAAAA,eACAC,EAAAA,SAAsB,IACzBC,OAAMH,EAAAA,EAAA,GACDC,EAAAA,cAAcE,QACdD,EAAAA,QAAuBC,U,GAIPH,EAAAA,EAAAA,EAAA,GAClBI,EAAAA,cACAC,EAAAA,SAAmB,IACtBF,OAAMH,EAAAA,EAAA,GACDI,EAAAA,aAAaD,QACbE,EAAAA,QAAoBF,UAMJH,EAAAA,EAAA,GAClBC,EAAAA,eAAa,IAChBE,OAAMH,EAAAA,EAAA,GACDC,EAAAA,cAAcE,QAAM,IACvBG,QAAS,UACTC,UAAW,UACXC,iBAAkB,UAClBC,mBAAoB,UACpBC,UAAW,UACXC,YAAa,UACbC,mBAAoB,UACpBC,qBAAsB,UACtBC,SAAU,UACVC,WAAY,UACZC,kBAAmB,UACnBC,oBAAqB,UACrBC,MAAO,UACPC,QAAS,UACTC,eAAgB,UAChBC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,QAAS,UACTC,UAAW,UACXC,eAAgB,UAChBC,iBAAkB,UAClBC,QAAS,UACTC,eAAgB,UAChBC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,iBAAkB,UAClBC,eAAgB,UAChBC,UAAW,CACTC,OAAQ,cACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,eAKQzC,EAAAA,EAAA,GACjBI,EAAAA,cAAY,IACfD,OAAMH,EAAAA,EAAA,GACDI,EAAAA,aAAaD,QAAM,IACtBG,QAAS,UACTC,UAAW,UACXC,iBAAkB,UAClBC,mBAAoB,UACpBC,UAAW,UACXC,YAAa,UACbC,mBAAoB,UACpBC,qBAAsB,UACtBC,SAAU,UACVC,WAAY,UACZC,kBAAmB,UACnBC,oBAAqB,UACrBC,MAAO,UACPC,QAAS,UACTC,eAAgB,UAChBC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,QAAS,UACTC,UAAW,UACXC,eAAgB,UAChBC,iBAAkB,UAClBC,QAAS,UACTC,eAAgB,UAChBC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,iBAAkB,UAClBC,eAAgB,UAChBC,UAAW,CACTC,OAAQ,cACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,e,6BCrCDC,EAAc,KA7CxBC,EAAAA,EAAAA,UAFD,SAAAC,KAAcC,EAAAA,EAAAA,SAAA,KAAAD,GAAA,KAPNE,MAAgB,cAAc,KAC9BC,KAAa,CACnBC,GAAI,EACJC,SAAU,QACVC,KAAM,SAINC,QAAQC,IAAI,yCACd,GAAC,EAAAC,IAAA,WAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,UAED,UAAeP,EAAkBQ,GAC/B,IAAMC,QAAiBC,MAAM,GAAGC,kBAAyB,CACvDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhB,SAAAA,EAAUQ,SAAAA,MAGnC,IAAKC,EAASQ,GAAI,CAChB,IAAMhD,QAAcwC,EAASS,OAC7B,MAAM,IAAIC,MAAMlD,EAAMA,OAAS,6BACjC,CACF,IAbc,OAab,SAbamD,EAAAC,GAAA,OAAAf,EAAAgB,MAAC,KAADC,UAAA,EAFb,IAEa,CAAAnB,IAAA,QAAAC,MAAA,eAAAmB,GAAAjB,EAAAA,EAAAA,UAed,UAAYP,EAAkBQ,GAC5B,MAAO,CACLX,MAAO4B,KAAK5B,MACZC,KAAM2B,KAAK3B,KAEf,IALW,OAKV,SALU4B,EAAAC,GAAA,OAAAH,EAAAF,MAAC,KAADC,UAAA,EAfG,IAeH,CAAAnB,IAAA,SAAAC,MAAA,eAAAuB,GAAArB,EAAAA,EAAAA,UAOX,YAEA,IAFY,OAEX,WAFW,OAAAqB,EAAAN,MAAC,KAADC,UAAA,EAPD,IAOC,CAAAnB,IAAA,WAAAC,MAIZ,WACE,OAAOoB,KAAK5B,KACd,GAAC,CAAAO,IAAA,UAAAC,MAED,WACE,OAAOoB,KAAK3B,IACd,GAAC,CAAAM,IAAA,kBAAAC,MAED,WACE,OAAO,CACT,GAAC,CAAAD,IAAA,UAAAC,MAED,WACE,OAAO,CACT,MC5DWM,EAGF,qDAIEkB,EAAMC,EAAAA,QAAMC,OAAO,CAC9BC,QAASrB,EACTE,QAAS,CACP,eAAgB,sBAKpBgB,EAAII,aAAaC,QAAQC,IAAI,WAAD,IAAAC,GAAA7B,EAAAA,EAAAA,UAC1B,UAAO8B,GACL,IACE,IAAMxC,QAAcyC,EAAAA,QAAaC,QAAQ,SACzCrC,QAAQC,IAAI,+CAAsCN,EAAQ,QAAO,MAE7DA,GACFwC,EAAOxB,QAAuB,cAAI,UAAUhB,IAC5CK,QAAQC,IAAI,2DACZD,QAAQC,IAAI,gDAAuCY,KAAKC,UAAUqB,EAAOxB,QAAS,KAAM,KAExFX,QAAQsC,KAAK,0EAGftC,QAAQC,IAAI,+DAAmD,CAC7DsC,IAAKJ,EAAOI,IACZ7B,OAAQyB,EAAOzB,OACfoB,QAASK,EAAOL,SAEpB,CAAE,MAAO/D,GACPiC,QAAQjC,MAAM,kDAA8CA,EAC9D,CACA,OAAOoE,CACT,IAAC,gBAAAjB,GAAA,OAAAgB,EAAAd,MAAA,KAAAC,UAAA,EAvB0B,IAwB3B,SAACtD,GAEC,OADAiC,QAAQjC,MAAM,qDAA8CA,GACrDyE,QAAQC,OAAO1E,EACxB,IAIF4D,EAAII,aAAaxB,SAAS0B,KACxB,SAAC1B,GAAQ,OAAKA,CAAQ,kBAAAmC,GAAArC,EAAAA,EAAAA,UACtB,UAAOtC,GAAW,IAAD4E,EAOf,OAN+B,OAAb,OAAdA,EAAA5E,EAAMwC,eAAQ,EAAdoC,EAAgBC,UAClB5C,QAAQC,IAAI,kFACNV,EAAYsD,SAElBC,OAAOC,SAASC,KAAO,UAElBR,QAAQC,OAAO1E,EACxB,IAAC,gBAAAoD,GAAA,OAAAuB,EAAAtB,MAAA,KAAAC,UAAA,EATqB,IAoDjB,IAAM4B,EAAU,eAAAC,GAAA7C,EAAAA,EAAAA,UAAG,YACxB,IAEE,aADuBsB,EAAIwB,IAAI,aACfC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,8BAA+BA,GACvCA,CACR,CACF,IAAC,kBARsB,OAAAmF,EAAA9B,MAAA,KAAAC,UAAA,KAoBVgC,GAVS,eAAAC,GAAAjD,EAAAA,EAAAA,UAAG,UAAOkD,GAC9B,IAEE,aADuB5B,EAAI6B,KAAK,WAAY,CAAED,KAAAA,KAC9BH,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,4BAA6BA,GACrCA,CACR,CACF,GARsB,IAUD,eAAA0F,GAAApD,EAAAA,EAAAA,UAAG,UACtBqD,EACAC,EACAC,EACAC,GAEA,IACE,IAAMC,EAAc,CAClBC,WAAYL,EACZM,WAAYL,EACZM,eAAgBL,EAChBM,eAAgBL,GAGlB7D,QAAQC,IAAI,oDACZD,QAAQC,IAAI,+BAAsB6D,GAClC9D,QAAQC,IAAI,iDAAqC,CAC/CsC,IAAKZ,EAAIwC,SAASrC,QAAU,WAC5BnB,QAASgB,EAAIwC,SAASxD,UAGxB,IAAMJ,QAAiBoB,EAAI6B,KAAK,WAAYM,GAE5C,OADA9D,QAAQC,IAAI,iCAA6BM,EAAS6C,MAC3C7C,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAADqG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA/B,GADA1E,QAAQjC,MAAM,mCAA+BA,GACzC6D,EAAAA,QAAM+C,aAAa5G,GACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhBwB,EAAErG,EAAMwC,eAAQ,EAAd6D,EAAgBxB,OACxBgC,WAA0B,OAAhBP,EAAEtG,EAAMwC,eAAQ,EAAd8D,EAAgBO,WAC5BxB,KAAoB,OAAhBkB,EAAEvG,EAAMwC,eAAQ,EAAd+D,EAAgBlB,KACtBjB,OAAQ,CACNI,IAAiB,OAAdgC,EAAExG,EAAMoE,aAAM,EAAZoC,EAAchC,IACnB7B,OAAoB,OAAd8D,EAAEzG,EAAMoE,aAAM,EAAZqC,EAAc9D,OACtBC,QAAqB,OAAd8D,EAAE1G,EAAMoE,aAAM,EAAZsC,EAAc9D,QACvBmB,QAAqB,OAAd4C,EAAE3G,EAAMoE,aAAM,EAAZuC,EAAc5C,WAI7B,MAAM/D,CACR,CACF,IAAC,gBAzCoB0D,EAAAoD,EAAAC,EAAAC,GAAA,OAAAtB,EAAArC,MAAA,KAAAC,UAAA,MA2CR2D,EAAU,eAAAC,GAAA5E,EAAAA,EAAAA,UAAG,YACxB,IAEE,aADuBsB,EAAIwB,IAAI,aACfC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,6BAA8BA,GACtCA,CACR,CACF,IAAC,kBARsB,OAAAkH,EAAA7D,MAAA,KAAAC,UAAA,KAqBV6D,GAXY,eAAAC,GAAA9E,EAAAA,EAAAA,UAAG,UAAOR,GACjC,IACEG,QAAQC,IAAI,6CAAoC,YAAYJ,WACtD8B,EAAIyD,OAAO,YAAYvF,KAC7BG,QAAQC,IAAI,yCACd,CAAE,MAAOlC,GAEP,MADAiC,QAAQjC,MAAM,6BAA8BA,GACtCA,CACR,CACF,GATyB,IAWD,eAAAsH,GAAAhF,EAAAA,EAAAA,UAAG,UAAOR,GAChC,UACQ8B,EAAI6B,KAAK,YAAY3D,YAC3BG,QAAQC,IAAI,yCACd,CAAE,MAAOlC,GAEP,MADAiC,QAAQjC,MAAM,6BAA8BA,GACtCA,CACR,CACF,IAAC,gBARuBuH,GAAA,OAAAD,EAAAjE,MAAA,KAAAC,UAAA,M,GAWG,eAAAkE,GAAAlF,EAAAA,EAAAA,UAAG,YAC5B,IAEE,aADuBsB,EAAIwB,IAAI,aACfC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,4BAA6BA,GACrCA,CACR,CACF,GAR2B,IAUD,eAAAyH,GAAAnF,EAAAA,EAAAA,UAAG,UAAOR,GAClC,IAEE,aADuB8B,EAAIwB,IAAI,YAAYtD,MAC3BuD,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,2BAA4BA,GACpCA,CACR,CACF,GAR0B,IAUA,eAAA0H,GAAApF,EAAAA,EAAAA,UAAG,UAAOqF,GAClC,IAEE,aADuB/D,EAAI6B,KAAK,WAAYkC,IAC5BtC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,yBAA0BA,GAClCA,CACR,CACF,GAR0B,IAUG,eAAA4H,GAAAtF,EAAAA,EAAAA,UAAG,UAAOR,EAAY6F,GACjD,IAEE,aADuB/D,EAAIiE,IAAI,YAAY/F,IAAM6F,IACjCtC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,8BAA+BA,GACvCA,CACR,CACF,GAR6B,IAUA,eAAA8H,GAAAxF,EAAAA,EAAAA,UAAG,UAAOR,GACrC,UACQ8B,EAAIyD,OAAO,YAAYvF,KAC7BG,QAAQC,IAAI,wCACd,CAAE,MAAOlC,GAEP,MADAiC,QAAQjC,MAAM,4BAA6BA,GACrCA,CACR,CACF,GAR6B,IAWK,eAAA+H,GAAAzF,EAAAA,EAAAA,UAAG,UAAO0F,GAC1C,IAEE,aADuBpE,EAAIwB,IAAI,oBAAoB4C,MACnC3C,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,wCAAyCA,GACjDA,CACR,CACF,GARkC,IAUJ,eAAAiI,GAAA3F,EAAAA,EAAAA,UAAG,UAAO4F,GACtC,IAEE,aADuBtE,EAAIwB,IAAI,qBAAqB8C,MACpC7C,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,yCAA0CA,GAClDA,CACR,CACF,GAR8B,IAUP,eAAAmI,GAAA7F,EAAAA,EAAAA,UAAG,UAAO8F,GAC/B,IAEE,aADuBxE,EAAI6B,KAAK,YAAa2C,IAC7B/C,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,0BAA2BA,GACnCA,CACR,CACF,GARuB,IAUG,eAAAqI,GAAA/F,EAAAA,EAAAA,UAAG,UAAOR,EAAYsG,GAC9C,IAEE,aADuBxE,EAAIiE,IAAI,aAAa/F,IAAMsG,IAClC/C,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,+BAAgCA,GACxCA,CACR,CACF,GAR0B,IAUA,eAAAsI,GAAAhG,EAAAA,EAAAA,UAAG,UAAOR,GAClC,UACQ8B,EAAIyD,OAAO,aAAavF,KAC9BG,QAAQC,IAAI,yCACd,CAAE,MAAOlC,GAEP,MADAiC,QAAQjC,MAAM,6BAA8BA,GACtCA,CACR,CACF,GAR0B,I,mlBClO1B,IAAMuI,GAAaC,EAAAA,EAAAA,oBAA0CC,GAEhDC,EAAuD,SAAHvE,GAAsB,IAAhBwE,EAAQxE,EAARwE,SACrEC,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAlDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAwCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA8BT,EAAAA,EAAAA,UAAmB,IAAGU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAA7CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8Bb,EAAAA,EAAAA,UAAkB,IAAGc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAA5CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAsCjB,EAAAA,EAAAA,UAAuB,IAAGkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAAzDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgCrB,EAAAA,EAAAA,UAAoB,IAAGsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAAhDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8CzB,EAAAA,EAAAA,UAASrH,EAAY+I,mBAAkBC,GAAAzB,EAAAA,EAAAA,SAAAuB,EAAA,GAA9EC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,IAE1CE,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAQ,eAAAhG,GAAArC,EAAAA,EAAAA,UAAG,YACf,IACE,IAAMsI,QAAsBvG,EAAAA,QAAaC,QAAQ,WAC3CuG,QAAsBxG,EAAAA,QAAaC,QAAQ,WAC3CwG,QAA0BzG,EAAAA,QAAaC,QAAQ,eAC/CyG,QAAuB1G,EAAAA,QAAaC,QAAQ,YAC5C0G,QAA2B3G,EAAAA,QAAaC,QAAQ,gBAElDsG,GAAenB,EAAW3G,KAAKmI,MAAML,IACrCC,GAAehB,EAAW/G,KAAKmI,MAAMJ,IACrCC,GAAmBb,EAAenH,KAAKmI,MAAMH,IAC7CC,GAAgBV,EAAYvH,KAAKmI,MAAMF,IAChB,OAAvBC,GAA6B3B,EAAgBvG,KAAKmI,MAAMD,GAC9D,CAAE,MAAOhL,GACPiC,QAAQjC,MAAM,sBAAuBA,EACvC,CACF,IAAC,kBAhBa,OAAA2E,EAAAtB,MAAA,KAAAC,UAAA,KAkBR4H,EAAQ,eAAA/F,GAAA7C,EAAAA,EAAAA,UAAG,YACf,UACQ+B,EAAAA,QAAa8G,QAAQ,UAAWrI,KAAKC,UAAUyG,UAC/CnF,EAAAA,QAAa8G,QAAQ,UAAWrI,KAAKC,UAAU6G,UAC/CvF,EAAAA,QAAa8G,QAAQ,cAAerI,KAAKC,UAAUiH,UACnD3F,EAAAA,QAAa8G,QAAQ,WAAYrI,KAAKC,UAAUqH,UAChD/F,EAAAA,QAAa8G,QAAQ,eAAgBrI,KAAKC,UAAUqG,GAC5D,CAAE,MAAOpJ,GACPiC,QAAQjC,MAAM,qBAAsBA,EACtC,CACF,IAAC,kBAVa,OAAAmF,EAAA9B,MAAA,KAAAC,UAAA,KAaR8H,EAAW,eAAA7F,GAAAjD,EAAAA,EAAAA,UAAG,YAClB,IAAM+I,GAAmBjC,EACzBC,EAAgBgC,SACVhH,EAAAA,QAAa8G,QAAQ,eAAgBrI,KAAKC,UAAUsI,GAC5D,IAAC,kBAJgB,OAAA9F,EAAAlC,MAAA,KAAAC,UAAA,KAMXgI,EAAS,eAAA5F,GAAApD,EAAAA,EAAAA,UAAG,UAAOiJ,GACvB,IAAMC,EAAiB1M,EAAAA,EAAA,GAClByM,GAAM,IACTzJ,GAAI0H,EAAQiC,OAAS,EACrBC,WAAY,EACZC,aAAc,EACdC,YAAa,IAEfnC,EAAW,GAADoC,QAAAC,EAAAA,EAAAA,SAAKtC,GAAO,CAAEgC,WAClBN,GACR,IAAC,gBAVc/H,GAAA,OAAAuC,EAAArC,MAAA,KAAAC,UAAA,KAYTyI,EAAY,eAAA7E,GAAA5E,EAAAA,EAAAA,UAAG,UAAOiJ,GAC1B9B,EAAWD,EAAQwC,KAAI,SAAAC,GAAC,OAAIA,EAAEnK,KAAOyJ,EAAOzJ,GAAKyJ,EAASU,CAAC,WACrDf,GACR,IAAC,gBAHiB9H,GAAA,OAAA8D,EAAA7D,MAAA,KAAAC,UAAA,KAKZ4I,EAAa,eAAA9E,GAAA9E,EAAAA,EAAAA,UAAG,UAAO6J,GAC3B,IAEE,IAAMC,EAAetN,EAAAA,EAAA,GAChBqN,GAAK,IACRrK,GAAI8H,EAAQ6B,OAAS,EACrBrB,SAAU,KAINiC,EAAiB7C,EAAQwC,KAAI,SAAAT,GACI,IAADe,EAAAC,EAAAC,EAQAC,EAAAC,EAAAC,EARpC,OAAIpB,EAAOzJ,KAAOqK,EAAMS,QAAQ9K,GAC9BhD,EAAAA,EAAA,GACKyM,GAAM,IACTsB,WAAuB,OAAZP,EAAAH,EAAMW,aAAM,EAAZR,EAAcxK,MAAOyJ,EAAOzJ,GAAKyJ,EAAOsB,UAAY,EAAItB,EAAOsB,UAC1EnB,YAAwB,OAAZa,EAAAJ,EAAMW,aAAM,EAAZP,EAAczK,MAAOyJ,EAAOzJ,GAAKyJ,EAAOG,WAAa,EAAIH,EAAOG,WAC5EC,cAA0B,OAAZa,EAAAL,EAAMW,aAAM,EAAZN,EAAc1K,MAAOyJ,EAAOzJ,GAAKyJ,EAAOI,aAAe,EAAIJ,EAAOI,eAGhFJ,EAAOzJ,KAAOqK,EAAMY,QAAQjL,GAC9BhD,EAAAA,EAAA,GACKyM,GAAM,IACTsB,WAAuB,OAAZJ,EAAAN,EAAMW,aAAM,EAAZL,EAAc3K,MAAOyJ,EAAOzJ,GAAKyJ,EAAOsB,UAAY,EAAItB,EAAOsB,UAC1EnB,YAAwB,OAAZgB,EAAAP,EAAMW,aAAM,EAAZJ,EAAc5K,MAAOyJ,EAAOzJ,GAAKyJ,EAAOG,WAAa,EAAIH,EAAOG,WAC5EC,cAA0B,OAAZgB,EAAAR,EAAMW,aAAM,EAAZH,EAAc7K,MAAOyJ,EAAOzJ,GAAKyJ,EAAOI,aAAe,EAAIJ,EAAOI,eAG7EJ,CACT,IAGA1B,GAAW,SAAAmD,GAAW,SAAAnB,QAAAC,EAAAA,EAAAA,SAAQkB,GAAW,CAAEZ,GAAW,IACtD3C,EAAW4C,SAGL5H,QAAQwI,IAAI,CAChB5I,EAAAA,QAAa8G,QAAQ,UAAWrI,KAAKC,UAAU,GAAD8I,QAAAC,EAAAA,EAAAA,SAAKlC,GAAO,CAAEwC,MAC5D/H,EAAAA,QAAa8G,QAAQ,UAAWrI,KAAKC,UAAUsJ,MAIjD,IACE,IAAAa,QAA+CzI,QAAQwI,IAAI,CACzDxK,MAAM,GAAGC,aAAmByK,MAAK,SAAAC,GAAG,OAAIA,EAAInK,MAAM,IAClDR,MAAM,GAAGC,aAAmByK,MAAK,SAAAC,GAAG,OAAIA,EAAInK,MAAM,MAClDoK,GAAAtE,EAAAA,EAAAA,SAAAmE,EAAA,GAHKI,EAAcD,EAAA,GAAEhB,EAAcgB,EAAA,GAKrCxD,EAAWyD,GACX7D,EAAW4C,EACb,CAAE,MAAOrM,GACPiC,QAAQjC,MAAM,uCAAwCA,EACxD,CAEA,OAAOoM,CACT,CAAE,MAAOpM,GAEP,MADAiC,QAAQjC,MAAM,4BAA6BA,GACrCA,CACR,CACF,IAAC,gBA1DkByD,GAAA,OAAA2D,EAAA/D,MAAA,KAAAC,UAAA,KA4DbiK,EAAU,eAAAjG,GAAAhF,EAAAA,EAAAA,UAAG,UAAOkL,EAAiBC,GACzC,IAAMC,EAAsB,CAC1B5L,GAAIsI,EAASqB,OAAS,EACtB+B,QAAAA,EACAG,OAAQ,EACRF,KAAAA,EACAG,UAAW,IAAIC,MAEjBxD,EAAY,GAADwB,QAAAC,EAAAA,EAAAA,SAAK1B,GAAQ,CAAEsD,WACpBxC,GACR,IAAC,gBAVexH,EAAAoD,GAAA,OAAAQ,EAAAjE,MAAA,KAAAC,UAAA,KAYVwK,EAAgB,eAAAtG,GAAAlF,EAAAA,EAAAA,UAAG,UAAOqF,GAC9B,IAAMoG,EAAyBjP,EAAAA,EAAA,GAC1B6I,GAAU,IACb7F,GAAIkI,EAAYyB,OAAS,EACzBjC,QAAS,GACTI,QAAS,GACT/E,OAAQ,YAEVoF,EAAe,GAAD4B,QAAAC,EAAAA,EAAAA,SAAK9B,GAAW,CAAE+D,WAC1B7C,GACR,IAAC,gBAVqBnE,GAAA,OAAAS,EAAAnE,MAAA,KAAAC,UAAA,KAYhB0K,EAAgB,eAAAvG,GAAAnF,EAAAA,EAAAA,UAAG,UAAOqF,GAC9BsC,EAAeD,EAAYgC,KAAI,SAAAiC,GAAC,OAAIA,EAAEnM,KAAO6F,EAAW7F,GAAK6F,EAAasG,CAAC,WACrE/C,GACR,IAAC,gBAHqBlE,GAAA,OAAAS,EAAApE,MAAA,KAAAC,UAAA,KAKtB,OACE4K,EAAAA,EAAAA,KAAC3F,EAAW4F,SAAQ,CAClB/L,MAAO,CACLgM,MAAOvP,EACPmK,cAAAA,EACAI,aAAAA,EACAiF,kBAvHoB,WAAH,OAASpF,GAAkBD,EAAe,EAwH3DoC,YAAAA,EACA5B,QAAAA,EACAI,QAAAA,EACAI,YAAAA,EACAI,SAAAA,EACAkB,UAAAA,EACAS,aAAAA,EACAG,cAAAA,EACAqB,WAAAA,EACAO,iBAAAA,EACAE,iBAAAA,EACAzD,gBAAAA,EACAE,mBAAAA,GACA9B,SAEDA,GAGP,E,4IC3Oa2F,EAAgB,CAC3BpJ,WAAW,WAAD,IAAAqJ,GAAAjM,EAAAA,EAAAA,UAAE,YACV,IACEL,QAAQC,IAAI,mDACZD,QAAQC,IAAI,yBAAgB0B,EAAIwC,SAASrC,SACzC,IAAMvB,QAAiBoB,EAAIwB,IAAI,YAE/B,OADAnD,QAAQC,IAAI,iCAA6BM,EAAS6C,MAC3C7C,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAAD4E,EAAAyB,EAAAC,EAAAE,EAAAC,EAAAC,EAA/B,GADAzE,QAAQjC,MAAM,qCAAiCA,GAC3C6D,EAAAA,QAAM+C,aAAa5G,GACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhBD,EAAE5E,EAAMwC,eAAQ,EAAdoC,EAAgBC,OACxBgC,WAA0B,OAAhBR,EAAErG,EAAMwC,eAAQ,EAAd6D,EAAgBQ,WAC5BxB,KAAoB,OAAhBiB,EAAEtG,EAAMwC,eAAQ,EAAd8D,EAAgBjB,KACtBjB,OAAQ,CACNI,IAAiB,OAAdgC,EAAExG,EAAMoE,aAAM,EAAZoC,EAAchC,IACnB7B,OAAoB,OAAd8D,EAAEzG,EAAMoE,aAAM,EAAZqC,EAAc9D,OACtBC,QAAqB,OAAd8D,EAAE1G,EAAMoE,aAAM,EAAZsC,EAAc9D,WAI7B,MAAM5C,CACR,CACF,IAvBU,OAuBT,WAvBS,OAAAuO,EAAAlL,MAAA,KAAAC,UAAA,EAAC,GAyBXkL,aAAa,WAAD,IAAAC,GAAAnM,EAAAA,EAAAA,UAAE,UAAOiJ,GACnB,IAEE,aADuB3H,EAAI6B,KAAK,WAAY8F,IAC5BlG,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,0BAA2BA,GACnCA,CACR,CACF,IARY,OAQX,SARWmD,GAAA,OAAAsL,EAAApL,MAAA,KAAAC,UAAA,EAAC,GAUbyI,aAAa,WAAD,IAAA2C,GAAApM,EAAAA,EAAAA,UAAE,UAAOR,EAAYyJ,GAC/B,IAEE,aADuB3H,EAAIiE,IAAI,YAAY/F,IAAMyJ,IACjClG,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,+BAAgCA,GACxCA,CACR,CACF,IARY,OAQX,SARWoD,EAAAK,GAAA,OAAAiL,EAAArL,MAAA,KAAAC,UAAA,EAAC,GAUbqL,aAAa,WAAD,IAAAC,GAAAtM,EAAAA,EAAAA,UAAE,UAAOR,GACnB,UACQ8B,EAAIyD,OAAO,YAAYvF,IAC/B,CAAE,MAAO9B,GAEP,MADAiC,QAAQjC,MAAM,6BAA8BA,GACtCA,CACR,CACF,IAPY,OAOX,SAPW0D,GAAA,OAAAkL,EAAAvL,MAAA,KAAAC,UAAA,EAAC,GASbuL,WAAW,WAAD,IAAAC,GAAAxM,EAAAA,EAAAA,UAAE,UAAOR,GACjB,UACQ8B,EAAI6B,KAAK,YAAY3D,YAC7B,CAAE,MAAO9B,GAEP,MADAiC,QAAQjC,MAAM,+BAAgCA,GACxCA,CACR,CACF,IAPU,OAOT,SAPS8G,GAAA,OAAAgI,EAAAzL,MAAA,KAAAC,UAAA,EAAC,IC2JPyL,EAASC,EAAAA,QAAWlL,OAAO,CAC/BmL,WAAY,CACVC,KAAM,GAERC,cAAe,CACbC,SAAU,GAEZC,UAAW,CACTH,KAAM,EACNI,gBAAiB,OACjBC,cAAe,IAEjBC,OAAQ,CACNC,QAAS,GACTH,gBAAiB,OACjBI,iBAAkB,GAClBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,WAAY,UAEdC,MAAO,CACLJ,UAAW,EACXK,UAAW,UAEbC,gBAAiB,CACfC,OAAQ,GACRT,QAAS,GACTG,aAAc,GACdN,gBAAiB,QAEnBa,aAAc,CACZC,cAAe,MACfN,WAAY,SACZO,eAAgB,SAChBC,aAAc,GACdC,IAAK,GAEPC,YAAa,CACXC,WAAY,QAEdC,OAAQ,CACNN,cAAe,MACfC,eAAgB,SAChBP,WAAY,WACZa,OAAQ,IACRJ,IAAK,GAEPK,eAAgB,CACdC,MAAO,IACPR,eAAgB,gBAChBP,WAAY,SACZF,aAAc,GACdH,QAAS,GACTqB,WAAY,GAEdC,aAAc,CACZC,OAAQ,EACRC,YAAa,EACbC,YAAa,WAEfC,eAAgB,CACdH,OAAQ,EACRI,aAAc,GAEhBC,eAAgB,CACdL,OAAQ,EACRM,YAAa,GAEfC,eAAgB,CACdV,MAAO,GACPF,OAAQ,GACRf,aAAc,GACdS,eAAgB,SAChBP,WAAY,SACZQ,aAAc,GAEhBkB,UAAW,CACTC,SAAU,GACVhB,WAAY,OACZiB,SAAU,WACVC,QAAS,GAEXC,WAAY,CACVH,SAAU,GACVhB,WAAY,OACZT,UAAW,SACXM,aAAc,GAEhBzD,UAAW,CACT4E,SAAU,GACVI,QAAS,IAEXC,iBAAkB,CAChBrC,QAAS,GACTc,IAAK,IAEPwB,OAAQ,CACNC,eAAgB,GAElBC,KAAM,CACJpB,MAAO,GACPF,OAAQ,GACRL,aAAc,IAEhB4B,iBAAkB,CAChBhD,KAAM,EACNmB,eAAgB,SAChBP,WAAY,YAIhB,QApUmB,WACjB,IAAMqC,GAAaC,EAAAA,EAAAA,iBACbhE,GAAQiE,EAAAA,EAAAA,YACdzJ,GAAoCC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAnD0J,EAAUxJ,EAAA,GAAEyJ,EAAazJ,EAAA,GAChCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCsJ,EAAOrJ,EAAA,GAAEsJ,EAAUtJ,EAAA,GAEpBuJ,EAAgB1D,EAAAA,QAAWlL,OAAO,CACtC6O,eAAgB,CACdlB,SAAU,GACVmB,MAAOxE,EAAMnP,OAAOG,SAEtByT,mBAAoB,CAClBzC,cAAe,MACfN,WAAY,SACZS,IAAK,EACLjB,gBAAiBlB,EAAMnP,OAAOqB,QAC9BwS,kBAAmB,EACnBC,gBAAiB,EACjBnD,aAAc,MAIVoD,EAAe,eAAA7O,GAAA7B,EAAAA,EAAAA,UAAG,YACtB,IACA,IAAMkH,QAAgB8E,EAAcpJ,aAE9B+N,GAAgBnH,EAAAA,EAAAA,SAAItC,GAAS0J,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvG,UAAYsG,EAAEtG,SAAS,IAAEwG,MAAM,EAAG,GACpFd,EAAcU,EAChB,CAAE,MAAOjT,GACPiC,QAAQjC,MAAM,kCAAmCA,GACnDsT,EAAAA,QAAMC,MAAM,QAAS,sCACvB,CAAC,QACCd,GAAW,EACX,CACF,IAAC,kBAZoB,OAAAtO,EAAAd,MAAA,KAAAC,UAAA,MAcvBoH,EAAAA,EAAAA,YAAU,WACRsI,GACF,GAAG,IAMH,OAAIR,GAEAtE,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,EAAOmD,iBAAiBvJ,UACnCuF,EAAAA,EAAAA,KAACwF,EAAAA,QAAiB,CAACC,KAAK,QAAQf,MAAOxE,EAAMnP,OAAOG,aAMxD8O,EAAAA,EAAAA,KAAC0F,EAAAA,QAAU,CAACH,MAAO1E,EAAOE,WAAY4E,sBAAuB9E,EAAOI,cAAcxG,UAChFmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,EAAOM,UAAU1G,SAAA,EAC5BuF,EAAAA,EAAAA,KAAC6F,EAAAA,QAAO,CAACN,MAAO1E,EAAOS,OAAQvO,UAAW,EAAE0H,UAC1CmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,EAAOc,cAAclH,SAAA,EAChCuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CACrBxO,KAAK,eACLmO,KAAM,GACNf,MAAOxE,EAAMnP,OAAOG,WAEtB8O,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,aAAaT,MAAO1E,EAAOgB,MAAMpH,SAAC,qCAMpDmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,EAAOkB,gBAAiBhP,UAAW,EAAE0H,SAAA,EACnDmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,EAAOoB,aAAaxH,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,SAASmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WACpE8O,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,aAAaT,MAAO1E,EAAOyB,YAAY7H,SAAC,sBAIxDmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,EAAO2B,OAAO/H,SAAA,CACxB2J,EAAW7G,QAAU,IACpBqI,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CACNN,MAAO,CACL1E,EAAO6B,eACP7B,EAAOoC,eACP,CACER,OAAQ,IACRrB,gBAAiBlB,EAAMnP,OAAOuB,iBAGlCS,UAAW,EAAE0H,SAAA,EAEbmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAAC1E,EAAOwC,eAAgB,CAAEjC,gBAAiB,YAAa3G,SAAA,EACnEuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,QAAQmO,KAAM,GAAIf,MAAM,aACrD1E,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO1E,EAAOyC,UAAU7I,SAAC,cAEjCuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO1E,EAAO6C,WAAWjJ,SAAE2J,EAAW,GAAG9M,QAC/CsO,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOf,EAAcG,mBAAmBlK,SAAA,EAC5CuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,OAAOmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WAClE0U,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,EAAOlC,UAAUlE,SAAA,CAAE2J,EAAW,GAAGzF,UAAU,sBAK7DyF,EAAW7G,QAAU,IACpBqI,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CACNN,MAAO,CACL1E,EAAO6B,eACP7B,EAAOgC,aACP,CACEJ,OAAQ,IACRrB,gBAAiBlB,EAAMnP,OAAOuB,iBAGlCS,UAAW,EAAE0H,SAAA,EAEbmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAAC1E,EAAOwC,eAAgB,CAAEjC,gBAAiB,YAAa3G,SAAA,EACnEuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,QAAQmO,KAAM,GAAIf,MAAM,aACrD1E,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO,CAAC1E,EAAOyC,UAAW,CAAEoB,MAAO,YAAajK,SAAC,cAEzDuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO,CAAC1E,EAAO6C,WAAYc,EAAcC,gBAAgBhK,SAAE2J,EAAW,GAAG9M,QAC/EsO,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOf,EAAcG,mBAAmBlK,SAAA,EAC5CuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,OAAOmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WAClE0U,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,EAAOlC,UAAUlE,SAAA,CAAE2J,EAAW,GAAGzF,UAAU,sBAK7DyF,EAAW7G,QAAU,IACpBqI,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CACNN,MAAO,CACL1E,EAAO6B,eACP7B,EAAOsC,eACP,CACEV,OAAQ,IACRrB,gBAAiBlB,EAAMnP,OAAOuB,iBAGlCS,UAAW,EAAE0H,SAAA,EAEbmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAAC1E,EAAOwC,eAAgB,CAAEjC,gBAAiB,YAAa3G,SAAA,EACnEuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,QAAQmO,KAAM,GAAIf,MAAM,aACrD1E,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO,CAAC1E,EAAOyC,UAAW,CAAEoB,MAAO,YAAajK,SAAC,cAEzDuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO1E,EAAO6C,WAAWjJ,SAAE2J,EAAW,GAAG9M,QAC/CsO,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAOf,EAAcG,mBAAmBlK,SAAA,EAC5CuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,OAAOmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WAClE0U,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,EAAOlC,UAAUlE,SAAA,CAAE2J,EAAW,GAAGzF,UAAU,6BAOlEiH,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,EAAO+C,iBAAiBnJ,SAAA,EACnCuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,YACLC,QAjHa,WACrBlC,EAAWmC,SAAS,WACtB,EAgHUb,MAAO1E,EAAOgD,OACdwC,KAAM,SAAF5P,GAAA,IAAKgP,EAAIhP,EAAJgP,KAAMf,EAAKjO,EAALiO,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,OAAOmO,KAAMA,EAAMf,MAAOA,GAAS,EAChEjK,SACH,mBAIDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,kBACLC,QAAS,WAAF,OAAQlC,EAAWmC,SAAS,WAAY,CAAEE,OAAQ,cAAe,EACxEf,MAAO1E,EAAOgD,OACdwC,KAAM,SAAFpP,GAAA,IAAKwO,EAAIxO,EAAJwO,KAAMf,EAAKzN,EAALyN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,gBAAgBmO,KAAMA,EAAMf,MAAOA,GAAS,EACzEjK,SACH,kBAIDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,kBACLC,QAAS,WAAF,OAAQlC,EAAWmC,SAAS,WAAY,CAAEE,OAAQ,cAAe,EACxEf,MAAO1E,EAAOgD,OACdwC,KAAM,SAAFhP,GAAA,IAAKoO,EAAIpO,EAAJoO,KAAMf,EAAKrN,EAALqN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,wBAAwBmO,KAAMA,EAAMf,MAAOA,GAAS,EACjFjK,SACH,yBAIDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,kBACLC,QAAS,WAAF,OAAQlC,EAAWmC,SAAS,WAAY,CAAEE,OAAQ,cAAe,EACxEf,MAAO1E,EAAOgD,OACdwC,KAAM,SAAF7O,GAAA,IAAKiO,EAAIjO,EAAJiO,KAAMf,EAAKlN,EAALkN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,iBAAiBmO,KAAMA,EAAMf,MAAOA,GAAS,EAC1EjK,SACH,iBAIDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,kBACLC,QAAS,WAAF,OAAQlC,EAAWmC,SAAS,aAAa,EAChDb,MAAO1E,EAAOgD,OACdwC,KAAM,SAAFrN,GAAA,IAAKyM,EAAIzM,EAAJyM,KAAMf,EAAK1L,EAAL0L,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,aAAamO,KAAMA,EAAMf,MAAOA,GAAS,EACtEjK,SACH,4BAOX,E,iECnLMoG,GAASC,EAAAA,QAAWlL,OAAe,CACvCuL,UAAW,CACTH,KAAM,GAERM,OAAQ,CACNC,QAAS,GACTK,WAAY,SACZQ,aAAc,IAEhBP,MAAO,CACLJ,UAAW,GAEb8E,QAAS,CACPvF,KAAM,EACNgB,OAAQ,GACRT,QAAS,GACTG,aAAc,GACdN,gBAAiB,QAEnBoF,WAAY,CACVxE,OAAQ,EACRT,QAAS,GACTG,aAAc,EACdQ,cAAe,MACfC,eAAgB,gBAChBP,WAAY,UAEd6E,WAAY,CACVvE,cAAe,MACfN,WAAY,SACZZ,KAAM,GAER0F,cAAe,CACbtD,WAAY,IAEduD,iBAAkB,CAChBlF,UAAW,GACXF,QAAS,GACTG,aAAc,IAEhBkF,MAAO,CACLxE,aAAc,IAEhByE,UAAW,CACTpF,UAAW,GAEbqF,QAAS,CACP5E,cAAe,MACfG,IAAK,GAEP2B,iBAAkB,CAChBhD,KAAM,EACNmB,eAAgB,SAChBP,WAAY,UAEdmF,eAAgB,CACd/F,KAAM,EACNmB,eAAgB,SAChBP,WAAY,UAEdoF,aAAc,CACZ5F,gBAAiB,QACjBG,QAAS,GACTS,OAAQ,GACRN,aAAc,EACdiB,MAAO,OAETsE,WAAY,CACV7E,aAAc,GACdN,UAAW,UAEboF,UAAW,CACT9E,aAAc,GACdN,UAAW,UAEbqF,aAAc,CACZjF,cAAe,MACfC,eAAgB,gBAElBiF,YAAa,CACXpG,KAAM,EACNQ,iBAAkB,GAEpB6F,cAAe,CACbrE,YAAa,UACbD,YAAa,GAEfuE,OAAQ,CACNpE,YAAa,IAEfqE,cAAe,CACbrF,cAAe,MACfN,WAAY,UAEd4F,UAAW,CACTpE,WAAY,GAEduB,mBAAoB,CAClBzC,cAAe,MACfN,WAAY,SACZH,UAAW,GAEbgG,cAAe,CACbrE,WAAY,GAEdsE,eAAgB,CACd9F,WAAY,SACZL,QAAS,IAEXoG,UAAW,CACTlG,UAAW,GACXK,UAAW,YAkVf,SA9UsB,YACDoC,EAAAA,EAAAA,iBAAnB,IACMhE,GAAQiE,EAAAA,EAAAA,YACdzJ,GAAqBC,EAAAA,EAAAA,UAAS,IAAIiN,EAAAA,QAASC,MAAM,IAA1CC,GAA6CjN,EAAAA,EAAAA,SAAAH,EAAA,GAAnC,GAEjBM,GAA8BL,EAAAA,EAAAA,UAAmB,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA7CM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAC1BG,GAA8BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAAnC2M,EAAO1M,EAAA,GAAE2M,EAAU3M,EAAA,GAC1BG,GAA0Cb,EAAAA,EAAAA,UAAwB,MAAKc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAAhEyM,EAAaxM,EAAA,GAAEyM,EAAgBzM,EAAA,GACtCG,GAAgCjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAArCuM,EAAQtM,EAAA,GAAEuM,EAAWvM,EAAA,GAC5BG,GAA8BrB,EAAAA,EAAAA,WAAS,GAAKsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAArCsI,EAAOrI,EAAA,GAAEsI,EAAUtI,EAAA,GAC1BG,GAA4CzB,EAAAA,EAAAA,UAAwB,MAAK2B,GAAAzB,EAAAA,EAAAA,SAAAuB,EAAA,GAAlEiM,EAAc/L,EAAA,GAAEgM,EAAiBhM,EAAA,GACxCiM,GAAoD5N,EAAAA,EAAAA,WAAS,GAAM6N,GAAA3N,EAAAA,EAAAA,SAAA0N,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAE1CG,EAAY,eAAA1S,GAAA7B,EAAAA,EAAAA,UAAG,YACnB,IACE,IAAM+C,QAAaiJ,EAAcpJ,aACjCuE,EAAWpE,EACb,CAAE,MAAOrF,GACPiC,QAAQjC,MAAM,8BAA+BA,GAC7CsT,EAAAA,QAAMC,MAAM,QAAS,0CACvB,CAAC,QACCd,GAAW,EACb,CACF,IAAC,kBAViB,OAAAtO,EAAAd,MAAA,KAAAC,UAAA,KAYZgI,EAAS,eAAA3G,GAAArC,EAAAA,EAAAA,UAAG,YAChB,GAAK2T,EAAQa,OAKb,UACQxI,EAAcE,aAAa,CAAEhJ,KAAMyQ,IACzCC,EAAW,IACXW,GACF,CAAE,MAAO7W,GACPiC,QAAQjC,MAAM,4BAA6BA,GAC3CsT,EAAAA,QAAMC,MAAM,QAAS,gCACvB,MAXED,EAAAA,QAAMC,MAAM,iBAAe,8BAY/B,IAAC,kBAdc,OAAA5O,EAAAtB,MAAA,KAAAC,UAAA,KAgBTyT,EAAkB,eAAA5R,GAAA7C,EAAAA,EAAAA,UAAG,YACzB,GAAK6T,GAAkBE,EAASS,OAEhC,UACQxI,EAAcvC,aAAaoK,EAAcrU,GAAI,CAAE0D,KAAM6Q,IAC3D/C,EAAAA,QAAMC,MAAM,WAAS,qCACrBsD,GACF,CAAE,MAAO7W,GACPsT,EAAAA,QAAMC,MAAM,QAAS,mCACvB,CAAC,QACC6C,EAAiB,MACjBE,EAAY,GACd,CACF,IAAC,kBAbuB,OAAAnR,EAAA9B,MAAA,KAAAC,UAAA,KAelB0T,EAAY,eAAAzR,GAAAjD,EAAAA,EAAAA,UAAG,UAAOiJ,GAC1BiL,EAAkBjL,GAClBqL,GAAsB,EACxB,IAAC,gBAHiBzT,GAAA,OAAAoC,EAAAlC,MAAA,KAAAC,UAAA,KAKZ2T,EAAa,eAAAvR,GAAApD,EAAAA,EAAAA,UAAG,YACpB,GAAKiU,EAEL,UACQjI,EAAcK,aAAa4H,EAAezU,IAChDwR,EAAAA,QAAMC,MAAM,WAAS,mCACrBsD,GACF,CAAE,MAAO7W,GACPsT,EAAAA,QAAMC,MAAM,QAAS,iCACvB,CAAC,QACCqD,GAAsB,GACtBJ,EAAkB,KACpB,CACF,IAAC,kBAbkB,OAAA9Q,EAAArC,MAAA,KAAAC,UAAA,KAwBb4T,GAAa,WACjBpB,EAAAA,QAASqB,OAAOnB,EAAY,CAC1BoB,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAChBC,OAAM,kBAAMnB,EAAiB,KAAK,GACvC,GAEA1L,EAAAA,EAAAA,YAAU,WACRmM,GACF,GAAG,KAEHnM,EAAAA,EAAAA,YAAU,WACJyL,GArBJL,EAAAA,QAAS0B,OAAOxB,EAAY,CAC1BoB,QAAS,EACTE,iBAAiB,EACjBG,QAAS,GACTC,SAAU,IACTH,OAmBL,GAAG,CAACpB,IA+EJ,OAAI3D,GAEAtE,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOmD,iBAAiBvJ,UACnCuF,EAAAA,EAAAA,KAACwF,EAAAA,QAAiB,CAACC,KAAK,QAAQf,MAAOxE,EAAMnP,OAAOG,aAMxD0U,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAAC1E,GAAOM,UAAW,CAAEC,gBAAiBlB,EAAMnP,OAAOmB,aAAcuI,SAAA,EAC5EmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAOS,OAAQvO,UAAW,EAAE0H,SAAA,EAC1CuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,gBAAgBmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WAC3E8O,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,iBAAiBT,MAAO1E,GAAOgB,MAAMpH,SAAC,kBAKtDmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAO0F,QAASxT,UAAW,EAAE0H,SAAA,EAC3CuF,EAAAA,EAAAA,KAACyJ,EAAAA,QAAQ,CACPtS,KAAMmE,EACNoO,aAAc,SAACC,GAAI,OAAKA,EAAK/V,GAAGgW,UAAU,EAC1CC,WA3FiB,SAAH7Q,GAAoC,IAAD8Q,EAA7BH,EAAI3Q,EAAJ2Q,KACpBI,GAA4B,OAAdD,EAPG,IAAnBxO,EAAQiC,OAAqB,KAC1BjC,EAAQ0O,QAAO,SAACC,EAAMC,GAAO,OACjCD,EAAKtL,UAAYuL,EAAQvL,UAAasL,EAAOC,CAAO,UAKrB,EAAdJ,EAAgBlW,MAAO+V,EAAK/V,GAEhD,OACEgS,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CACNN,MAAO,CACL1E,GAAO2F,WACPuD,GAAelJ,GAAOwG,eAExBtU,UAAWgX,EAAc,EAAI,EAAEtP,SAAA,EAE/BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO4F,WAAWhM,SAAA,EAC7BuF,EAAAA,EAAAA,KAACmK,EAAAA,QAAW,CACV1E,KAAM,GACN2E,MAAOT,EAAKrS,KAAK+S,UAAU,EAAG,GAAGC,cACjC/E,MAAO,CACL1E,GAAOyG,OACPyC,GAAe,CAAE3I,gBAAiBlB,EAAMnP,OAAOG,aAGnD0U,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO6F,cAAcjM,SAAA,EAChCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO0G,cAAc9M,SAAA,EAChCuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,cAAavL,SAAEkP,EAAKrS,OACjCyS,IACC/J,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CACrBxO,KAAK,QACLmO,KAAM,GACNf,MAAOxE,EAAMnP,OAAOG,QACpBqU,MAAO1E,GAAO2G,gBAIpB5B,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO8D,mBAAmBlK,SAAA,EACrCuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CACrBxO,KAAK,SACLmO,KAAM,GACNf,MAAOxE,EAAMnP,OAAOG,WAEtB0U,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACC,QAAQ,YAAYT,MAAO1E,GAAO4G,cAAchN,SAAA,CACnDkP,EAAKhL,UAAU,0BAKxBiH,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOiG,QAAQrM,SAAA,EAC1BuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,WACLC,QAAS,WACP+B,EAAiByB,GACjBvB,EAAYuB,EAAKrS,KACnB,EACA+O,KAAM,WAAF,OAAQrG,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,SAASmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,SAAW,EAC3FoT,SAAsB,MAAb2D,OAAa,EAAbA,EAAerU,MAAO+V,EAAK/V,GAAG6G,SACxC,YAGDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,WACLC,QAAS,WAAF,OAAQ2C,EAAaa,EAAK,EACjCtD,KAAM,WAAF,OAAQrG,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,SAASmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOe,OAAS,EACzFyY,UAAWrK,EAAMnP,OAAOe,MACxBwS,SAAuB,MAAd+D,OAAc,EAAdA,EAAgBzU,MAAO+V,EAAK/V,IAAM6U,EAAmBhO,SAC/D,kBAMT,EAwBQ+P,oBACE5E,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO6G,eAAejN,SAAA,EACjCuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,cAAcmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOyB,WACzEwN,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,cAAcT,MAAO1E,GAAO8G,UAAUlN,SAAC,uCAO3DmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAO8F,iBAAkB5T,UAAW,EAAE0H,SAAA,EACpDuF,EAAAA,EAAAA,KAACyK,EAAAA,QAAS,CACRvE,KAAK,WACLkE,MAAM,qBACNlW,MAAO6T,EACP2C,aAAc1C,EACdzC,MAAO1E,GAAO+F,MACd+D,MAAO5C,GACL/H,EAAAA,EAAAA,KAACyK,EAAAA,QAAUG,KAAI,CACbvE,KAAM,SAAFnN,GAAA,IAAKuM,EAAIvM,EAAJuM,KAAMf,EAAKxL,EAALwL,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CACrBxO,KAAK,QACLmO,KAAMA,EACNf,MAAOA,GACP,EAEJyB,QAAS,WAAF,OAAQ6B,EAAW,GAAG,SAE7BzN,KAENyF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,YACLC,QAAS/I,EACTmI,MAAO1E,GAAOgG,UACdR,KAAM,WAAF,OAAQrG,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,eAAemO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOI,WAAa,EAACsJ,SACrG,2BAMLuF,EAAAA,EAAAA,KAAC6K,GAAAA,QAAM,CAAApQ,UACLuF,EAAAA,EAAAA,KAAC8K,GAAAA,QAAK,CACJC,QAA2B,OAAlB9C,EACT+C,UAAWhC,GACXzD,MAAO1E,GAAOkG,eAAetM,UAE7BmL,EAAAA,EAAAA,MAACgC,EAAAA,QAAStC,KAAI,CACZC,MAAO,CACL1E,GAAOmG,aACP,CAAEiE,UAAW,CAAC,CAAEC,MAAOpD,MACvBrN,SAAA,EAEFuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,aAAaT,MAAO1E,GAAOoG,WAAWxM,SAAC,oBAGrDuF,EAAAA,EAAAA,KAACyK,EAAAA,QAAS,CACRvE,KAAK,WACLkE,MAAM,SACNlW,MAAOiU,EACPuC,aAActC,EACd7C,MAAO1E,GAAO+F,MACduE,MACEnL,EAAAA,EAAAA,KAACyK,EAAAA,QAAUG,KAAI,CACbvE,KAAM,SAAFjN,GAAA,IAAKqM,EAAIrM,EAAJqM,KAAMf,EAAKtL,EAALsL,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CACrBxO,KAAK,UACLmO,KAAMA,EACNf,MAAOA,GACP,OAKVkB,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOsG,aAAa1M,SAAA,EAC/BuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,WACLC,QAAS6C,GACTzD,MAAO1E,GAAOuG,YAAY3M,SAC3B,cAGDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,YACLC,QAAS0C,EACTtD,MAAO1E,GAAOuG,YACd9C,QAASA,EAAQ7J,SAClB,uBAQTuF,EAAAA,EAAAA,KAAC6K,GAAAA,QAAM,CAAApQ,UACLuF,EAAAA,EAAAA,KAAC8K,GAAAA,QAAK,CACJC,QAAStC,EACTuC,UAAW,WAAF,OAAQtC,GAAsB,EAAM,EAC7CnD,MAAO1E,GAAOkG,eAAetM,UAE7BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmG,aAAavM,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,aAAaT,MAAO1E,GAAOoG,WAAWxM,SAAC,2BAGrDmL,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACC,QAAQ,aAAaT,MAAO1E,GAAOqG,UAAUzM,SAAA,CAAC,gDACI,MAAd4N,OAAc,EAAdA,EAAgB/Q,KAAK,QAE/DsO,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOsG,aAAa1M,SAAA,EAC/BuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,WACLC,QAAS,WAAF,OAAQuC,GAAsB,EAAM,EAC3CnD,MAAO1E,GAAOuG,YAAY3M,SAC3B,cAGDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,YACLC,QAAS4C,EACTqC,YAAalL,EAAMnP,OAAOe,MAC1ByT,MAAO1E,GAAOuG,YAAY3M,SAC3B,yBASf,E,gDC5Za4Q,GAAoB,KAlEV9X,EAAAA,EAAAA,UAAA,SAAA+X,KAAA7X,EAAAA,EAAAA,SAAA,KAAA6X,EAAA,KAAArX,IAAA,oBAAAC,MAAA,eAAAqX,GAAAnX,EAAAA,EAAAA,UACrB,YACE,IACEL,QAAQC,IAAI,mDACZD,QAAQC,IAAI,yBAAgB0B,EAAIwC,SAASrC,SACzC,IAAMvB,QAAiBoB,EAAIwB,IAAI,YAE/B,OADAnD,QAAQC,IAAI,iCAA6BM,EAAS6C,MAC3C7C,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAAD4E,EAAAyB,EAAAC,EAAAE,EAAAC,EAAAC,EAY/B,MAbAzE,QAAQjC,MAAM,mCAA+BA,GACzC6D,EAAAA,QAAM+C,aAAa5G,IACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhBD,EAAE5E,EAAMwC,eAAQ,EAAdoC,EAAgBC,OACxBgC,WAA0B,OAAhBR,EAAErG,EAAMwC,eAAQ,EAAd6D,EAAgBQ,WAC5BxB,KAAoB,OAAhBiB,EAAEtG,EAAMwC,eAAQ,EAAd8D,EAAgBjB,KACtBjB,OAAQ,CACNI,IAAiB,OAAdgC,EAAExG,EAAMoE,aAAM,EAAZoC,EAAchC,IACnB7B,OAAoB,OAAd8D,EAAEzG,EAAMoE,aAAM,EAAZqC,EAAc9D,OACtBC,QAAqB,OAAd8D,EAAE1G,EAAMoE,aAAM,EAAZsC,EAAc9D,WAIvB5C,CACR,CACF,IAvBuB,OAuBtB,WAvBsB,OAAAyZ,EAAApW,MAAC,KAADC,UAAA,EADF,IACE,CAAAnB,IAAA,gBAAAC,MAAA,eAAAsX,GAAApX,EAAAA,EAAAA,UAyBvB,UAAoBR,GAClB,IAEE,aADuB8B,EAAIwB,IAAI,YAAYtD,MAC3BuD,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,2BAA4BA,GACpCA,CACR,CACF,IARmB,OAQlB,SARkBmD,GAAA,OAAAuW,EAAArW,MAAC,KAADC,UAAA,EAzBI,IAyBJ,CAAAnB,IAAA,mBAAAC,MAAA,eAAAuX,GAAArX,EAAAA,EAAAA,UAUnB,UAAuBqF,GACrB,IAEE,aADuB/D,EAAI6B,KAAK,WAAYkC,IAC5BtC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,yBAA0BA,GAClCA,CACR,CACF,IARsB,OAQrB,SARqBoD,GAAA,OAAAuW,EAAAtW,MAAC,KAADC,UAAA,EAVH,IAUG,CAAAnB,IAAA,mBAAAC,MAAA,eAAAwX,GAAAtX,EAAAA,EAAAA,UAUtB,UAAuBR,EAAY6F,GACjC,IAEE,aADuB/D,EAAIiE,IAAI,YAAY/F,IAAM6F,IACjCtC,IAClB,CAAE,MAAOrF,GAEP,MADAiC,QAAQjC,MAAM,8BAA+BA,GACvCA,CACR,CACF,IARsB,OAQrB,SARqByD,EAAAC,GAAA,OAAAkW,EAAAvW,MAAC,KAADC,UAAA,EAVA,IAUA,CAAAnB,IAAA,mBAAAC,MAAA,eAAAyX,GAAAvX,EAAAA,EAAAA,UAUtB,UAAuBR,GACrB,UACQ8B,EAAIyD,OAAO,YAAYvF,IAC/B,CAAE,MAAO9B,GAEP,MADAiC,QAAQjC,MAAM,4BAA6BA,GACrCA,CACR,CACF,IAPsB,OAOrB,SAPqB8G,GAAA,OAAA+S,EAAAxW,MAAC,KAADC,UAAA,EAVA,O,+kBCpDT,SAASwW,KACtB,IAAAlR,GAAsCC,EAAAA,EAAAA,UAAuB,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAzDoB,EAAWlB,EAAA,GAAEmB,EAAcnB,EAAA,GAClCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCsJ,EAAOrJ,EAAA,GAAEsJ,EAAUtJ,EAAA,GAC1BG,GAAwCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAAhDyQ,EAAYxQ,EAAA,GAAEyQ,EAAezQ,EAAA,GACpCG,GAA0Cb,EAAAA,EAAAA,UAAS,CACjDoR,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,WACRzQ,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GALKqE,EAAapE,EAAA,GAAE0Q,EAAgB1Q,EAAA,IAOtCe,EAAAA,EAAAA,YAAU,WACR4P,GACF,GAAG,IAEH,IAAMA,EAAgB,eAAAnW,GAAA7B,EAAAA,EAAAA,UAAG,YACvB,IACEmQ,GAAW,GACX,IAAMpN,QAAakU,GAAkBgB,oBACrCtQ,EAAe5E,EACjB,CAAE,MAAOrF,GACPiC,QAAQjC,MAAM,4BAA6BA,GAC3CsT,EAAAA,QAAMC,MAAM,QAAS,oCACvB,CAAC,QACCd,GAAW,EACb,CACF,IAAC,kBAXqB,OAAAtO,EAAAd,MAAA,KAAAC,UAAA,KAahBkX,EAAsB,eAAA7V,GAAArC,EAAAA,EAAAA,UAAG,YAC7B,IACE,IAAKyL,EAAckM,SAAWlM,EAAcmM,eAAiBnM,EAAcoM,UAEzE,YADA7G,EAAAA,QAAMC,MAAM,QAAS,6CAIjBgG,GAAkBzL,iBAAiBC,GACzCiM,GAAgB,GAChBK,EAAiB,CACfJ,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,WAEVE,IACAhH,EAAAA,QAAMC,MAAM,WAAS,8BACvB,CAAE,MAAOvT,GACPiC,QAAQjC,MAAM,yBAA0BA,GACxCsT,EAAAA,QAAMC,MAAM,QAAS,6BACvB,CACF,IAAC,kBArB2B,OAAA5O,EAAAtB,MAAA,KAAAC,UAAA,KAoC5B,OACEwQ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOM,UAAU1G,SAAA,EAC5BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOS,OAAO7G,SAAA,EACzBuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOgB,MAAMpH,SAAC,aAC3BuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO1E,GAAOgG,UACdV,QAAS,WAAF,OAAQ2F,GAAgB,EAAK,EAACrR,UAErCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO2L,cAAc/R,SAAC,sBAItC6J,GACCtE,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO4L,YAAYhS,SAAC,wBACR,IAAvBqB,EAAYyB,QACdyC,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO8G,UAAUlN,SAAC,gCAE/BuF,EAAAA,EAAAA,KAACyJ,EAAAA,QAAQ,CACPtS,KAAM2E,EACN+N,WAhCqB,SAAH5S,GAAA,IAAM0S,EAAI1S,EAAJ0S,KAAI,OAClC/D,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO6L,KAAKjS,SAAA,EACvBuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO8L,eAAelS,SAAEkP,EAAKoC,UAC1CnG,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO+L,eAAenS,SAAA,EACjCmL,EAAAA,EAAAA,MAACG,GAAAA,QAAI,CAACR,MAAO1E,GAAOgM,KAAKpS,SAAA,CAAC,WAAS,IAAIkF,KAAKgK,EAAKqC,cAAcc,yBAC/DlH,EAAAA,EAAAA,MAACG,GAAAA,QAAI,CAACR,MAAO1E,GAAOgM,KAAKpS,SAAA,CAAC,QAAM,IAAIkF,KAAKgK,EAAKsC,WAAWa,4BAE3D9M,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO,CAAC1E,GAAOkM,YAAa,CAAE3L,gBAAiC,WAAhBuI,EAAKuC,OAAsB,UAAY,YAAazR,UACvGuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOlI,WAAW8B,SAAEkP,EAAKuC,aAEnC,EAuBDxC,aAAc,SAACC,GAAI,OAAKA,EAAKqD,UAAUpD,UAAU,EACjDjE,sBAAuB9E,GAAOoM,QAIlCjN,EAAAA,EAAAA,KAAC8K,GAAAA,QAAK,CACJoC,cAAc,QACdC,aAAa,EACbpC,QAASc,EACTuB,eAAgB,WAAF,OAAQtB,GAAgB,EAAM,EAACrR,UAE7CuF,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOkG,eAAetM,UACjCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmG,aAAavM,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOoG,WAAWxM,SAAC,wBAEhCuF,EAAAA,EAAAA,KAACyK,GAAAA,QAAS,CACRlF,MAAO1E,GAAO+F,MACdyG,YAAY,oBACZnZ,MAAO2L,EAAckM,OACrBrB,aAAc,SAACnL,GAAI,OAAK4M,EAAgBvb,GAAAA,GAAC,CAAC,EAAGiP,GAAa,IAAEkM,OAAQxM,IAAM,KAG5ES,EAAAA,EAAAA,KAACyK,GAAAA,QAAS,CACRlF,MAAO1E,GAAO+F,MACdyG,YAAY,+BACZnZ,MAAO2L,EAAcmM,aACrBtB,aAAc,SAACnL,GAAI,OAAK4M,EAAgBvb,GAAAA,GAAC,CAAC,EAAGiP,GAAa,IAAEmM,aAAczM,IAAM,KAGlFS,EAAAA,EAAAA,KAACyK,GAAAA,QAAS,CACRlF,MAAO1E,GAAO+F,MACdyG,YAAY,4BACZnZ,MAAO2L,EAAcoM,UACrBvB,aAAc,SAACnL,GAAI,OAAK4M,EAAgBvb,GAAAA,GAAC,CAAC,EAAGiP,GAAa,IAAEoM,UAAW1M,IAAM,KAG/EqG,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOsG,aAAa1M,SAAA,EAC/BuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO,CAAC1E,GAAOuG,YAAavG,GAAOyM,cACnCnH,QAAS,WAAF,OAAQ2F,GAAgB,EAAM,EAACrR,UAEtCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO0M,WAAW9S,SAAC,gBAGlCuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO,CAAC1E,GAAOuG,YAAavG,GAAO2M,cACnCrH,QAASmG,EAAuB7R,UAEhCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO0M,WAAW9S,SAAC,wBAQhD,CAEA,IAAMoG,GAASC,EAAAA,QAAWlL,OAAO,CAC/BuL,UAAW,CACTH,KAAM,EACNI,gBAAiB,WAEnBE,OAAQ,CACNY,cAAe,MACfC,eAAgB,gBAChBP,WAAY,SACZL,QAAS,GACTH,gBAAiB,OACjBrO,UAAW,GAEb8O,MAAO,CACL0B,SAAU,GACVhB,WAAY,OACZmC,MAAO,QAETmC,UAAW,CACTzF,gBAAiB,UACjBG,QAAS,GACTG,aAAc,GAEhB8K,cAAe,CACb9H,MAAO,OACPnC,WAAY,QAEd0K,KAAM,CACJ1L,QAAS,IAEXmL,KAAM,CACJtL,gBAAiB,OACjBM,aAAc,GACdH,QAAS,GACTa,aAAc,GACdrP,UAAW,GAEb4Z,eAAgB,CACdpJ,SAAU,GACVhB,WAAY,OACZmC,MAAO,OACPtC,aAAc,GAEhBwK,eAAgB,CACdxK,aAAc,GAEhByK,KAAM,CACJtJ,SAAU,GACVmB,MAAO,OACPtC,aAAc,GAEhB2K,YAAa,CACXU,UAAW,aACX7I,kBAAmB,GACnBC,gBAAiB,EACjBnD,aAAc,IAEhB/I,WAAY,CACV+L,MAAO,OACPnC,WAAY,OACZgB,SAAU,IAEZkJ,YAAa,CACX3K,UAAW,SACXL,UAAW,GACX8B,SAAU,GACVmB,MAAO,QAETiD,UAAW,CACT7F,UAAW,SACXL,UAAW,GACX8B,SAAU,GACVmB,MAAO,QAETqC,eAAgB,CACd/F,KAAM,EACNmB,eAAgB,SAChBP,WAAY,SACZR,gBAAiB,sBAEnB4F,aAAc,CACZ5F,gBAAiB,OACjBM,aAAc,GACdH,QAAS,GACToB,MAAO,MACP+K,SAAU,KAEZzG,WAAY,CACV1D,SAAU,GACVhB,WAAY,OACZH,aAAc,GACdN,UAAW,UAEb8E,MAAO,CACL7D,YAAa,EACbC,YAAa,OACbtB,aAAc,EACdH,QAAS,GACTa,aAAc,GACdmB,SAAU,IAEZ4D,aAAc,CACZjF,cAAe,MACfC,eAAgB,gBAChBV,UAAW,IAEb2F,YAAa,CACXpG,KAAM,EACNO,QAAS,GACTG,aAAc,EACdF,iBAAkB,GAEpB8L,aAAc,CACZlM,gBAAiB,WAEnBoM,aAAc,CACZpM,gBAAiB,WAEnBmM,WAAY,CACV7I,MAAO,OACP5C,UAAW,SACXS,WAAY,OACZgB,SAAU,MCpIDoK,GAAiB,KAzHVpa,EAAAA,EAAAA,UAAA,SAAAqa,KAAAna,EAAAA,EAAAA,SAAA,KAAAma,EAAA,KAAA3Z,IAAA,wBAAAC,MAAA,eAAA2Z,GAAAzZ,EAAAA,EAAAA,UAClB,UAA4B0F,GAC1B,IACE/F,QAAQC,IAAI,gDAAuC8F,GACnD,IAAMxF,QAAiBoB,EAAIwB,IAAI,oBAAoB4C,KAEnD,OADA/F,QAAQC,IAAI,6BAAyBM,EAAS6C,KAAKoG,QAC5CjJ,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAAD4E,EAAAyB,EAAAC,EAAAE,EAAAC,EAAAC,EAY/B,MAbAzE,QAAQjC,MAAM,+CAA2CA,GACrD6D,EAAAA,QAAM+C,aAAa5G,IACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhBD,EAAE5E,EAAMwC,eAAQ,EAAdoC,EAAgBC,OACxBgC,WAA0B,OAAhBR,EAAErG,EAAMwC,eAAQ,EAAd6D,EAAgBQ,WAC5BxB,KAAoB,OAAhBiB,EAAEtG,EAAMwC,eAAQ,EAAd8D,EAAgBjB,KACtBjB,OAAQ,CACNI,IAAiB,OAAdgC,EAAExG,EAAMoE,aAAM,EAAZoC,EAAchC,IACnB7B,OAAoB,OAAd8D,EAAEzG,EAAMoE,aAAM,EAAZqC,EAAc9D,OACtBC,QAAqB,OAAd8D,EAAE1G,EAAMoE,aAAM,EAAZsC,EAAc9D,WAIvB5C,CACR,CACF,IAtB2B,OAsB1B,SAtB0BmD,GAAA,OAAA4Y,EAAA1Y,MAAC,KAADC,UAAA,EADT,IACS,CAAAnB,IAAA,oBAAAC,MAAA,eAAA4Z,GAAA1Z,EAAAA,EAAAA,UAwB3B,UAAwB4F,GACtB,IACEjG,QAAQC,IAAI,iDAAwCgG,GACpD,IAAM1F,QAAiBoB,EAAIwB,IAAI,qBAAqB8C,KAEpD,OADAjG,QAAQC,IAAI,6BAAyBM,EAAS6C,KAAKoG,QAC5CjJ,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAADuG,EAAA0V,EAAAC,EAAAvV,EAAAwV,EAAAC,EAY/B,MAbAna,QAAQjC,MAAM,gDAA4CA,GACtD6D,EAAAA,QAAM+C,aAAa5G,IACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhB0B,EAAEvG,EAAMwC,eAAQ,EAAd+D,EAAgB1B,OACxBgC,WAA0B,OAAhBoV,EAAEjc,EAAMwC,eAAQ,EAAdyZ,EAAgBpV,WAC5BxB,KAAoB,OAAhB6W,EAAElc,EAAMwC,eAAQ,EAAd0Z,EAAgB7W,KACtBjB,OAAQ,CACNI,IAAiB,OAAdmC,EAAE3G,EAAMoE,aAAM,EAAZuC,EAAcnC,IACnB7B,OAAoB,OAAdwZ,EAAEnc,EAAMoE,aAAM,EAAZ+X,EAAcxZ,OACtBC,QAAqB,OAAdwZ,EAAEpc,EAAMoE,aAAM,EAAZgY,EAAcxZ,WAIvB5C,CACR,CACF,IAtBuB,OAsBtB,SAtBsBoD,GAAA,OAAA4Y,EAAA3Y,MAAC,KAADC,UAAA,EAxBI,IAwBJ,CAAAnB,IAAA,gBAAAC,MAAA,eAAAia,GAAA/Z,EAAAA,EAAAA,UAwBvB,UAAoB8F,GAClB,IACEnG,QAAQC,IAAI,sCAA6BkG,GACzC,IAAM5F,QAAiBoB,EAAI6B,KAAK,YAAa2C,GAE7C,OADAnG,QAAQC,IAAI,yBAAqBM,EAAS6C,MACnC7C,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAADsc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAY/B,MAbA1a,QAAQjC,MAAM,iCAA6BA,GACvC6D,EAAAA,QAAM+C,aAAa5G,IACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhByX,EAAEtc,EAAMwC,eAAQ,EAAd8Z,EAAgBzX,OACxBgC,WAA0B,OAAhB0V,EAAEvc,EAAMwC,eAAQ,EAAd+Z,EAAgB1V,WAC5BxB,KAAoB,OAAhBmX,EAAExc,EAAMwC,eAAQ,EAAdga,EAAgBnX,KACtBjB,OAAQ,CACNI,IAAiB,OAAdiY,EAAEzc,EAAMoE,aAAM,EAAZqY,EAAcjY,IACnB7B,OAAoB,OAAd+Z,EAAE1c,EAAMoE,aAAM,EAAZsY,EAAc/Z,OACtBC,QAAqB,OAAd+Z,EAAE3c,EAAMoE,aAAM,EAAZuY,EAAc/Z,WAIvB5C,CACR,CACF,IAtBmB,OAsBlB,SAtBkByD,GAAA,OAAA4Y,EAAAhZ,MAAC,KAADC,UAAA,EAxBI,IAwBJ,CAAAnB,IAAA,gBAAAC,MAAA,eAAAwa,GAAAta,EAAAA,EAAAA,UAwBnB,UAAoBR,EAAYsG,GAC9B,IACEnG,QAAQC,IAAI,qCAA4B,CAAEJ,GAAAA,EAAIsG,QAAAA,IAC9C,IAAM5F,QAAiBoB,EAAIiE,IAAI,aAAa/F,IAAMsG,GAElD,OADAnG,QAAQC,IAAI,8BAA0BM,EAAS6C,MACxC7C,EAAS6C,IAClB,CAAE,MAAOrF,GAEyB,IAAD6c,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAY/B,MAbAjb,QAAQjC,MAAM,sCAAkCA,GAC5C6D,EAAAA,QAAM+C,aAAa5G,IACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhBgY,EAAE7c,EAAMwC,eAAQ,EAAdqa,EAAgBhY,OACxBgC,WAA0B,OAAhBiW,EAAE9c,EAAMwC,eAAQ,EAAdsa,EAAgBjW,WAC5BxB,KAAoB,OAAhB0X,EAAE/c,EAAMwC,eAAQ,EAAdua,EAAgB1X,KACtBjB,OAAQ,CACNI,IAAiB,OAAdwY,EAAEhd,EAAMoE,aAAM,EAAZ4Y,EAAcxY,IACnB7B,OAAoB,OAAdsa,EAAEjd,EAAMoE,aAAM,EAAZ6Y,EAActa,OACtBC,QAAqB,OAAdsa,EAAEld,EAAMoE,aAAM,EAAZ8Y,EAActa,WAIvB5C,CACR,CACF,IAtBmB,OAsBlB,SAtBkB0D,EAAAoD,GAAA,OAAA8V,EAAAvZ,MAAC,KAADC,UAAA,EAxBA,IAwBA,CAAAnB,IAAA,gBAAAC,MAAA,eAAA+a,GAAA7a,EAAAA,EAAAA,UAwBnB,UAAoBR,GAClB,IACEG,QAAQC,IAAI,mCAA0BJ,SAChC8B,EAAIyD,OAAO,aAAavF,KAC9BG,QAAQC,IAAI,yCACd,CAAE,MAAOlC,GAEyB,IAADod,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAY/B,MAbAxb,QAAQjC,MAAM,oCAAgCA,GAC1C6D,EAAAA,QAAM+C,aAAa5G,IACrBiC,QAAQjC,MAAM,sBAAuB,CACnC6E,OAAsB,OAAhBuY,EAAEpd,EAAMwC,eAAQ,EAAd4a,EAAgBvY,OACxBgC,WAA0B,OAAhBwW,EAAErd,EAAMwC,eAAQ,EAAd6a,EAAgBxW,WAC5BxB,KAAoB,OAAhBiY,EAAEtd,EAAMwC,eAAQ,EAAd8a,EAAgBjY,KACtBjB,OAAQ,CACNI,IAAiB,OAAd+Y,EAAEvd,EAAMoE,aAAM,EAAZmZ,EAAc/Y,IACnB7B,OAAoB,OAAd6a,EAAExd,EAAMoE,aAAM,EAAZoZ,EAAc7a,OACtBC,QAAqB,OAAd6a,EAAEzd,EAAMoE,aAAM,EAAZqZ,EAAc7a,WAIvB5C,CACR,CACF,IArBmB,OAqBlB,SArBkB+G,GAAA,OAAAoW,EAAA9Z,MAAC,KAADC,UAAA,EAxBA,O,+kBCnFN,SAASoa,KAAiB,IAADC,EAAAC,EAAAC,EACtCjV,GAAgCC,EAAAA,EAAAA,UAAoB,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAhDkV,EAAQhV,EAAA,GAAEiV,EAAWjV,EAAA,GAC5BI,GAAsCL,EAAAA,EAAAA,UAAuB,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAzDc,EAAWb,EAAA,GAAEc,EAAcd,EAAA,GAClCG,GAA8BT,EAAAA,EAAAA,UAA8C,IAAGU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAAxEE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAoDb,EAAAA,EAAAA,UAAwB,MAAKc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAA1EsU,EAAkBrU,EAAA,GAAEsU,EAAqBtU,EAAA,GAChDG,GAA8BjB,EAAAA,EAAAA,WAAS,GAAKkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAArC0I,EAAOzI,EAAA,GAAE0I,EAAU1I,EAAA,GAC1BG,GAAwCrB,EAAAA,EAAAA,WAAS,GAAMsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAAhD6P,EAAY5P,EAAA,GAAE6P,EAAe7P,EAAA,GACpCG,GAA4DzB,EAAAA,EAAAA,WAAS,GAAM2B,GAAAzB,EAAAA,EAAAA,SAAAuB,EAAA,GAApE4T,EAAsB1T,EAAA,GAAE2T,EAAyB3T,EAAA,GACxDiM,GAAoD5N,EAAAA,EAAAA,WAAS,GAAM6N,GAAA3N,EAAAA,EAAAA,SAAA0N,EAAA,GAA5D2H,EAAkB1H,EAAA,GAAE2H,EAAqB3H,EAAA,GAChD4H,GAAoCzV,EAAAA,EAAAA,UAAS,CAC3CqS,UAAW,EACXqD,WAAY,EACZC,iBAAkB,EAClBC,kBAAmB,IACnBC,GAAA3V,EAAAA,EAAAA,SAAAuV,EAAA,GALKK,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAOhChU,EAAAA,EAAAA,YAAU,WACR4P,IACAzD,GACF,GAAG,KAEHnM,EAAAA,EAAAA,YAAU,WACJsT,GACFa,EAAcb,EAElB,GAAG,CAACA,IAEJ,IAAM1D,EAAgB,eAAAnW,GAAA7B,EAAAA,EAAAA,UAAG,YACvB,IACE,IAAM+C,QAAakU,GAAkBgB,oBACrCtQ,EAAe5E,GACXA,EAAKoG,OAAS,GAChBwS,EAAsB5Y,EAAK,GAAG6V,UAElC,CAAE,MAAOlb,GACPiC,QAAQjC,MAAM,4BAA6BA,GAC3CsT,EAAAA,QAAMC,MAAM,QAAS,oCACvB,CACF,IAAC,kBAXqB,OAAApP,EAAAd,MAAA,KAAAC,UAAA,KAahBuT,EAAY,eAAAlS,GAAArC,EAAAA,EAAAA,UAAG,YACnB,IACE,IAAM+C,QAAaiJ,EAAcpJ,aACjCuE,EAAWpE,EACb,CAAE,MAAOrF,GACPiC,QAAQjC,MAAM,8BAA+BA,GAC7CsT,EAAAA,QAAMC,MAAM,QAAS,sCACvB,CACF,IAAC,kBARiB,OAAA5O,EAAAtB,MAAA,KAAAC,UAAA,KAUZub,EAAa,eAAA1Z,GAAA7C,EAAAA,EAAAA,UAAG,UAAO0F,GAC3B,IACEyK,GAAW,GACX,IAAMpN,QAAawW,GAAeiD,sBAAsB9W,GACxD+V,EAAY1Y,EACd,CAAE,MAAOrF,GACPiC,QAAQjC,MAAM,6BAA8BA,GAC5CsT,EAAAA,QAAMC,MAAM,QAAS,qCACvB,CAAC,QACCd,GAAW,EACb,CACF,IAAC,gBAXkBtP,GAAA,OAAAgC,EAAA9B,MAAA,KAAAC,UAAA,KAabyb,EAAmB,eAAAxZ,GAAAjD,EAAAA,EAAAA,UAAG,YAC1B,IACE,IAAKqc,EAAWzD,YAAcyD,EAAWJ,WAEvC,YADAjL,EAAAA,QAAMC,MAAM,QAAS,+CAIvB,IAAMyL,EAAWlgB,GAAAA,GAAA,GACZ6f,GAAU,IACbM,SAAU,UAGNpD,GAAeqD,cAAcF,GACnChF,GAAgB,GAChB4E,EAAc,CACZ1D,UAAW,EACXqD,WAAY,EACZC,iBAAkB,EAClBC,kBAAmB,IAErBI,EAAcF,EAAWzD,WACzB5H,EAAAA,QAAMC,MAAM,WAAS,+BACvB,CAAE,MAAOvT,GACPiC,QAAQjC,MAAM,0BAA2BA,GACzCsT,EAAAA,QAAMC,MAAM,QAAS,8BACvB,CACF,IAAC,kBA1BwB,OAAAhO,EAAAlC,MAAA,KAAAC,UAAA,KAiHzB,OACEwQ,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOM,UAAU1G,SAAA,EAC5BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOS,OAAO7G,SAAA,EACzBuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOgB,MAAMpH,SAAC,cAC3BuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO1E,GAAOgG,UACdV,QAAS,WAAF,OAAQ2F,GAAgB,EAAK,EAACrR,UAErCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO2L,cAAc/R,SAAC,0BAIvCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOoQ,mBAAmBxW,SAAA,EACrCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOqQ,cAAczW,SAAC,yBACnCuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO1E,GAAOsQ,eACdhL,QAAS,WAAF,OAAQ8J,GAA0B,EAAK,EAACxV,UAE/CuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOuQ,mBAAmB3W,SACpCqV,EAA8E,OAA5DL,EAAG3T,EAAYuV,MAAK,SAAAtR,GAAC,OAAIA,EAAEiN,YAAc8C,CAAkB,UAAC,EAAzDL,EAA2D1D,OAAS,6BAxFlG/L,EAAAA,EAAAA,KAAC8K,GAAAA,QAAK,CACJoC,cAAc,QACdC,aAAa,EACbpC,QAASiF,EACT5C,eAAgB,WAAF,OAAQ6C,GAA0B,EAAM,EAACxV,UAEvDuF,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOkG,eAAetM,UACjCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmG,aAAavM,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOoG,WAAWxM,SAAC,wBAChCuF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAU,CAACH,MAAO1E,GAAOyQ,aAAa7W,SACpCqB,EAAYgC,KAAI,SAACrE,GAAU,OAC1BuG,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CAEfhH,MAAO1E,GAAO0Q,aACdpL,QAAS,WACP4J,EAAsBtW,EAAWuT,WACjCiD,GAA0B,EAC5B,EAAExV,UAEFuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO2Q,iBAAiB/W,SAAEhB,EAAWsS,UAP7CtS,EAAWuT,UAQC,OAGvBhN,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO,CAAC1E,GAAOuG,YAAavG,GAAOyM,cACnCnH,QAAS,WAAF,OAAQ8J,GAA0B,EAAM,EAACxV,UAEhDuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO0M,WAAW9S,SAAC,uBAQxCuF,EAAAA,EAAAA,KAAC8K,GAAAA,QAAK,CACJoC,cAAc,QACdC,aAAa,EACbpC,QAASmF,EACT9C,eAAgB,WAAF,OAAQ+C,GAAsB,EAAM,EAAC1V,UAEnDuF,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOkG,eAAetM,UACjCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmG,aAAavM,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOoG,WAAWxM,SAAC,yBAChCuF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAU,CAACH,MAAO1E,GAAOyQ,aAAa7W,SACpCa,EAAQwC,KAAI,SAACT,GAAM,OAClB2C,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CAEfhH,MAAO1E,GAAO0Q,aACdpL,QAAS,WACPuK,EAAa9f,GAAAA,GAAC,CAAC,EAAG6f,GAAU,IAAEJ,WAAYhT,EAAOzJ,MACjDuc,GAAsB,EACxB,EAAE1V,UAEFuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO2Q,iBAAiB/W,SAAE4C,EAAO/F,QAPzC+F,EAAOzJ,GAQK,OAGvBoM,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO,CAAC1E,GAAOuG,YAAavG,GAAOyM,cACnCnH,QAAS,WAAF,OAAQgK,GAAsB,EAAM,EAAC1V,UAE5CuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO0M,WAAW9S,SAAC,sBAkCrC6J,GACCtE,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO4L,YAAYhS,SAAC,yBACX,IAApBmV,EAASrS,QACXyC,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO8G,UAAUlN,SAAC,iCAE/BuF,EAAAA,EAAAA,KAACyJ,EAAAA,QAAQ,CACPtS,KAAMyY,EACN/F,WAvHkB,SAAHrS,GAAA,IAAMmS,EAAInS,EAAJmS,KAAI,OAC/B/D,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO6L,KAAKjS,SAAA,EACvBuF,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAO4Q,kBAAkBhX,UACpCmL,EAAAA,EAAAA,MAACG,GAAAA,QAAI,CAACR,MAAO1E,GAAO2C,SAAS/I,SAAA,CAAEkP,EAAKoH,SAAS,aAE/CnL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO6Q,iBAAiBjX,SAAA,EACnCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO6C,WAAWjJ,SAAEkP,EAAKgI,kBACtC/L,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO+Q,eAAenX,SAAA,EACjCmL,EAAAA,EAAAA,MAACG,GAAAA,QAAI,CAACR,MAAO1E,GAAOgR,MAAMpX,SAAA,CAAC,MAAIkP,EAAK2G,iBAAiB,SAAO3G,EAAK4G,sBACjE3K,EAAAA,EAAAA,MAACG,GAAAA,QAAI,CAACR,MAAO1E,GAAOiR,WAAWrX,SAAA,CAAEkP,EAAKoI,qBAAqB,yBAG1D,EA4GDrI,aAAc,SAACC,GAAI,OAAKA,EAAKqI,YAAYpI,UAAU,EACnDjE,sBAAuB9E,GAAOoM,QAIlCjN,EAAAA,EAAAA,KAAC8K,GAAAA,QAAK,CACJoC,cAAc,QACdC,aAAa,EACbpC,QAASc,EACTuB,eAAgB,WAAF,OAAQtB,GAAgB,EAAM,EAACrR,UAE7CuF,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOkG,eAAetM,UACjCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmG,aAAavM,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOoG,WAAWxM,SAAC,2BAEhCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOqQ,cAAczW,SAAC,aACnCuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO1E,GAAOsQ,eACdhL,QAAS,WACP2F,GAAgB,GAChBmE,GAA0B,EAC5B,EAAExV,UAEFuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOuQ,mBAAmB3W,SACpCgW,EAAWzD,UAAuE,OAA9D0C,EAAG5T,EAAYuV,MAAK,SAAAtR,GAAC,OAAIA,EAAEiN,YAAcyD,EAAWzD,SAAS,UAAC,EAA3D0C,EAA6D3D,OAAS,0BAIlG/L,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOqQ,cAAczW,SAAC,cACnCuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO1E,GAAOsQ,eACdhL,QAAS,WACP2F,GAAgB,GAChBqE,GAAsB,EACxB,EAAE1V,UAEFuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAOuQ,mBAAmB3W,SACpCgW,EAAWJ,WAA8D,OAApDV,EAAGrU,EAAQ+V,MAAK,SAAAtT,GAAC,OAAIA,EAAEnK,KAAO6c,EAAWJ,UAAU,UAAC,EAAjDV,EAAmDrY,KAAO,2BAIvF0I,EAAAA,EAAAA,KAACyK,GAAAA,QAAS,CACRlF,MAAO1E,GAAO+F,MACdyG,YAAY,mBACZ4E,aAAa,UACb/d,MAAOuc,EAAWH,iBAAiB1G,WACnCc,aAAc,SAACnL,GAAI,OAAKmR,EAAa9f,GAAAA,GAAC,CAAC,EAAG6f,GAAU,IAAEH,iBAAkB4B,SAAS3S,IAAS,IAAG,KAG/FS,EAAAA,EAAAA,KAACyK,GAAAA,QAAS,CACRlF,MAAO1E,GAAO+F,MACdyG,YAAY,oBACZ4E,aAAa,UACb/d,MAAOuc,EAAWF,kBAAkB3G,WACpCc,aAAc,SAACnL,GAAI,OAAKmR,EAAa9f,GAAAA,GAAC,CAAC,EAAG6f,GAAU,IAAEF,kBAAmB2B,SAAS3S,IAAS,IAAG,KAGhGqG,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOsG,aAAa1M,SAAA,EAC/BuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO,CAAC1E,GAAOuG,YAAavG,GAAOyM,cACnCnH,QAAS,WAAF,OAAQ2F,GAAgB,EAAM,EAACrR,UAEtCuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO0M,WAAW9S,SAAC,gBAGlCuF,EAAAA,EAAAA,KAACuM,GAAAA,QAAgB,CACfhH,MAAO,CAAC1E,GAAOuG,YAAavG,GAAO2M,cACnCrH,QAAS0K,EAAoBpW,UAE7BuF,EAAAA,EAAAA,KAAC+F,GAAAA,QAAI,CAACR,MAAO1E,GAAO0M,WAAW9S,SAAC,wBAQhD,CAEA,IAAMoG,GAASC,EAAAA,QAAWlL,OAAO,CAC/BuL,UAAW,CACTH,KAAM,EACNI,gBAAiB,WAEnBE,OAAQ,CACNY,cAAe,MACfC,eAAgB,gBAChBP,WAAY,SACZL,QAAS,GACTH,gBAAiB,OACjBrO,UAAW,GAEb8O,MAAO,CACL0B,SAAU,GACVhB,WAAY,OACZmC,MAAO,QAETmC,UAAW,CACTzF,gBAAiB,UACjBG,QAAS,GACTG,aAAc,GAEhB8K,cAAe,CACb9H,MAAO,OACPnC,WAAY,QAEd0O,mBAAoB,CAClB7P,gBAAiB,OACjBG,QAAS,GACTa,aAAc,GAEhB8O,cAAe,CACb3N,SAAU,GACVmB,MAAO,OACPtC,aAAc,GAEhB+O,eAAgB,CACdpO,YAAa,EACbC,YAAa,OACbtB,aAAc,EACdH,QAAS,GACTa,aAAc,IAEhBgP,mBAAoB,CAClB7N,SAAU,GACVmB,MAAO,QAET4M,aAAc,CACZa,UAAW,KAEbZ,aAAc,CACZhQ,QAAS,GACT6Q,kBAAmB,EACnBC,kBAAmB,QAErBb,iBAAkB,CAChBjO,SAAU,GACVmB,MAAO,QAETuI,KAAM,CACJ1L,QAAS,IAEXmL,KAAM,CACJxK,cAAe,MACfd,gBAAiB,OACjBM,aAAc,GACdH,QAAS,GACTa,aAAc,GACdrP,UAAW,GAEb0e,kBAAmB,CACjB9O,MAAO,GACPF,OAAQ,GACRf,aAAc,GACdN,gBAAiB,UACjBe,eAAgB,SAChBP,WAAY,SACZsB,YAAa,IAEfM,SAAU,CACRkB,MAAO,OACPnB,SAAU,GACVhB,WAAY,QAEdmP,iBAAkB,CAChB1Q,KAAM,GAER0C,WAAY,CACVH,SAAU,GACVhB,WAAY,OACZmC,MAAO,OACPtC,aAAc,GAEhBwP,eAAgB,CACd1P,cAAe,MACfC,eAAgB,iBAElB0P,MAAO,CACLtO,SAAU,GACVmB,MAAO,QAEToN,WAAY,CACVvO,SAAU,GACVmB,MAAO,UACPnC,WAAY,QAEdkK,YAAa,CACX3K,UAAW,SACXL,UAAW,GACX8B,SAAU,GACVmB,MAAO,QAETiD,UAAW,CACT7F,UAAW,SACXL,UAAW,GACX8B,SAAU,GACVmB,MAAO,QAETqC,eAAgB,CACd/F,KAAM,EACNmB,eAAgB,SAChBP,WAAY,SACZR,gBAAiB,sBAEnB4F,aAAc,CACZ5F,gBAAiB,OACjBM,aAAc,GACdH,QAAS,GACToB,MAAO,MACP+K,SAAU,KAEZzG,WAAY,CACV1D,SAAU,GACVhB,WAAY,OACZH,aAAc,GACdN,UAAW,UAEb8E,MAAO,CACL7D,YAAa,EACbC,YAAa,OACbtB,aAAc,EACdH,QAAS,GACTa,aAAc,GACdmB,SAAU,IAEZ4D,aAAc,CACZjF,cAAe,MACfC,eAAgB,gBAChBV,UAAW,IAEb2F,YAAa,CACXpG,KAAM,EACNO,QAAS,GACTG,aAAc,EACdF,iBAAkB,GAEpB8L,aAAc,CACZlM,gBAAiB,WAEnBoM,aAAc,CACZpM,gBAAiB,WAEnBmM,WAAY,CACV7I,MAAO,OACP5C,UAAW,SACXS,WAAY,OACZgB,SAAU,M,WCtaR1C,GAASC,EAAAA,QAAWlL,OAAO,CAC/BuL,UAAW,CACTH,KAAM,GAERM,OAAQ,CACNC,QAAS,GACTK,WAAY,SACZJ,iBAAkB,GAClBC,UAAW,GACXC,aAAc,IAEhBG,MAAO,CACLJ,UAAW,GACXK,UAAW,UAEbwQ,QAAS,CACPtQ,OAAQ,GACRT,QAAS,GACTG,aAAc,IAEhB6Q,YAAa,CACXrQ,cAAe,MACfN,WAAY,SACZiD,gBAAiB,IAEnB2N,YAAa,CACXxR,KAAM,EACNoC,WAAY,MAIhB,SAlEuB,WACrB,IAAAqP,ERmPoB,WACpB,IAAMC,GAAUC,EAAAA,EAAAA,YAAWtY,GAC3B,QAAgBE,IAAZmY,EACF,MAAM,IAAI1d,MAAM,6CAElB,OAAO0d,CACT,CQzPiFE,GAAvE1S,EAAKuS,EAALvS,MAAOpF,EAAa2X,EAAb3X,cAAeI,EAAYuX,EAAZvX,aAAciF,EAAiBsS,EAAjBtS,kBAAmBjD,EAAWuV,EAAXvV,YAE/D,OACE0I,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO,CAAC1E,GAAOM,UAAW,CAAEC,gBAAiBlB,EAAMnP,OAAOmB,aAAcuI,SAAA,EAC5EmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAOS,OAAQvO,UAAW,EAAE0H,SAAA,EAC1CuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,MAAMmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WACjE8O,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,iBAAiBT,MAAO1E,GAAOgB,MAAMpH,SAAC,gBAKtDmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAOyR,QAASvf,UAAW,EAAE0H,SAAA,EAC3CmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO0R,YAAY9X,SAAA,EAC9BuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,WAAWmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WACtE0U,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO2R,YAAY/X,SAAA,EAC9BuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,cAAavL,SAAC,0BAC5BuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,YAAWvL,SAAC,sDAE5BuF,EAAAA,EAAAA,KAAC6S,GAAAA,QAAM,CAAC3e,MAAO4G,EAAegY,cAAe3S,QAG/CyF,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO0R,YAAY9X,SAAA,EAC9BuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,cAAcmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WACzE0U,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO2R,YAAY/X,SAAA,EAC9BuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,cAAavL,SAAC,YAC5BuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACC,QAAQ,YAAWvL,SAAC,6CAE5BuF,EAAAA,EAAAA,KAAC6S,GAAAA,QAAM,CAAC3e,MAAOgH,EAAc4X,cAAe5V,YAKtD,ECtBA,IA0LM2D,GAASC,EAAAA,QAAWlL,OAAO,CAC/BuL,UAAW,CACTH,KAAM,EACNI,gBAAiB,WAEnBhP,QAAS,CACP4P,OAAQ,GACRT,QAAS,GACTG,aAAc,EACd3O,UAAW,GAEbuO,OAAQ,CACNY,cAAe,MACfN,WAAY,SACZQ,aAAc,IAEhB2Q,WAAY,CACV7P,YAAa,IAEfrB,MAAO,CACL0B,SAAU,GACVhB,WAAY,OACZvB,KAAM,EACNc,UAAW,UAEbkR,cAAe,CACb5Q,aAAc,IAEhB6Q,aAAc,CACZ1P,SAAU,GACVhB,WAAY,OACZH,aAAc,GACdF,cAAe,MACfN,WAAY,UAEdsR,aAAc,CACZ9Q,aAAc,GAEhB+Q,cAAe,CACb/Q,aAAc,IAEhBgR,cAAe,CACblR,cAAe,MACfC,eAAgB,iBAElBkR,aAAc,CACZrS,KAAM,EACNQ,iBAAkB,GAEpB8R,aAAc,CACZ7R,UAAW,IAEb8R,cAAe,CACbnS,gBAAiB,WAEnBoS,YAAa,CACXpS,gBAAiB,WAEnB4C,iBAAkB,CAChBhD,KAAM,EACNmB,eAAgB,SAChBP,WAAY,YAIhB,SA3PuB,WACrB,IAAAlH,GAA8BC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA7CY,EAAOV,EAAA,GAAEW,EAAUX,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCsJ,EAAOrJ,EAAA,GAAEsJ,EAAUtJ,EAAA,GAC1BG,GAA8CT,EAAAA,EAAAA,UAAwB,MAAKU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAApEqY,EAAepY,EAAA,GAAEqY,EAAkBrY,EAAA,GAC1CG,GAA8Cb,EAAAA,EAAAA,UAAwB,MAAKc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAApEmY,EAAelY,EAAA,GAAEmY,EAAkBnY,EAAA,GAC1CG,GAA0CjB,EAAAA,EAAAA,UAAyB,OAAMkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAAlEjE,EAAakE,EAAA,GAAEgY,EAAgBhY,EAAA,GACtCG,GAA0CrB,EAAAA,EAAAA,UAAyB,QAAOsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAAnEpE,EAAaqE,EAAA,GAAE6X,EAAgB7X,EAAA,GACtCG,GAAwCzB,EAAAA,EAAAA,WAAS,GAAM2B,GAAAzB,EAAAA,EAAAA,SAAAuB,EAAA,GAAhD2X,EAAYzX,EAAA,GAAE0X,EAAe1X,EAAA,GACpCiM,GAAwC5N,EAAAA,EAAAA,UAAuC,QAAO6N,GAAA3N,EAAAA,EAAAA,SAAA0N,EAAA,GAA/E0L,EAAYzL,EAAA,GAAE0L,EAAe1L,EAAA,GAC9BvE,GAAaC,EAAAA,EAAAA,iBACbhE,GAAQiE,EAAAA,EAAAA,aAEd3H,EAAAA,EAAAA,YAAU,WACRmM,GACF,GAAG,IAEH,IAAMA,EAAY,eAAA1S,GAAA7B,EAAAA,EAAAA,UAAG,YACnB,IACE,IAAM+C,QAAaH,IACnBuE,EAAWpE,GACXoN,GAAW,EACb,CAAE,MAAOzS,GACPsT,EAAAA,QAAMC,MAAM,QAAS,uCACrBd,GAAW,EACb,CACF,IAAC,kBATiB,OAAAtO,EAAAd,MAAA,KAAAC,UAAA,KAWZ+e,EAAY,eAAA1d,GAAArC,EAAAA,EAAAA,UAAG,YACnB,GAAKqf,GAAoBE,EAKzB,GAAIF,IAAoBE,EAAxB,CAKAK,GAAgB,GAChBE,EAAgB,QAEhB,UACQ9c,EACJqc,EACAE,EACAhc,EACAC,GAGFsc,EAAgB,WAChBE,YAAW,WACTnQ,EAAWoQ,QACb,GAAG,KACL,CAAE,MAAOviB,GACPoiB,EAAgB,QAClB,CAAC,QACCF,GAAgB,EAClB,CArBA,MAFEE,EAAgB,cALhBA,EAAgB,QA6BpB,IAAC,kBA/BiB,OAAAzd,EAAAtB,MAAA,KAAAC,UAAA,KAiClB,OAAIkP,GAEAtE,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOmD,iBAAiBvJ,UACnCuF,EAAAA,EAAAA,KAACwF,EAAAA,QAAiB,CAACC,KAAK,aAM5BzF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAU,CAACH,MAAO1E,GAAOM,UAAU1G,UAClCmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAOzO,QAAQqI,SAAA,EAC7BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOS,OAAO7G,SAAA,EACzBuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,WACLC,QAAS,WAAF,OAAQlC,EAAWoQ,QAAQ,EAClC9O,MAAO1E,GAAOkS,WACd1M,KAAM,SAAFpP,GAAA,IAAKwO,EAAIxO,EAAJwO,KAAMf,EAAKzN,EAALyN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,aAAamO,KAAMA,EAAMf,MAAOA,GAAS,EACtEjK,SACH,YAGHuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO1E,GAAOgB,MAAMpH,SAAC,gCAG3BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmS,cAAcvY,SAAA,EAChCmL,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAOoS,aAAaxY,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,UAAUmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,UAAW,gBAEjFoK,EAAQwC,KAAI,SAAAT,GAAM,OACjB2C,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CAELC,KAAMuN,IAAoBpW,EAAOzJ,GAAK,YAAc,WACpDuS,QAAS,WAAF,OAAQuN,EAAmBrW,EAAOzJ,GAAG,EAC5C2R,MAAO1E,GAAOqS,aACd7M,KAAM,SAAFhP,GAAA,IAAKoO,EAAIpO,EAAJoO,KAAMf,EAAKrN,EAALqN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,iBAAiBmO,KAAMA,EAAMf,MAAOA,GAAS,EAC1EjK,SAED4C,EAAO/F,MARH+F,EAAOzJ,GASL,QAIbgS,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOmS,cAAcvY,SAAA,EAChCmL,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAOoS,aAAaxY,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,UAAUmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,UAAW,gBAEjFoK,EAAQwC,KAAI,SAAAT,GAAM,OACjB2C,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CAELC,KAAMyN,IAAoBtW,EAAOzJ,GAAK,YAAc,WACpDuS,QAAS,WAAF,OAAQyN,EAAmBvW,EAAOzJ,GAAG,EAC5C2R,MAAO1E,GAAOqS,aACd7M,KAAM,SAAF7O,GAAA,IAAKiO,EAAIjO,EAAJiO,KAAMf,EAAKlN,EAALkN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,iBAAiBmO,KAAMA,EAAMf,MAAOA,GAAS,EAC1EjK,SAED4C,EAAO/F,MARH+F,EAAOzJ,GASL,QAIbgS,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOsS,cAAc1Y,SAAA,EAChCmL,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAOoS,aAAaxY,SAAA,EAC/BuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,SAASmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,UAAW,iBAEjF0U,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOuS,cAAc3Y,SAAA,EAChCuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAwB,QAAlBvO,EAA0B,YAAc,WAC9CwO,QAAS,WACP0N,EAAiB,OACjBC,EAAiB,OACnB,EACAvO,MAAO1E,GAAOwS,aACdhN,KAAM,SAAFrN,GAAA,IAAKyM,EAAIzM,EAAJyM,KAAMf,EAAK1L,EAAL0L,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,iBAAiBmO,KAAMA,EAAMf,MAAOA,GAAS,EAC1EjK,SACH,oBAGDuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAwB,QAAlBtO,EAA0B,YAAc,WAC9CuO,QAAS,WACP0N,EAAiB,QACjBC,EAAiB,MACnB,EACAvO,MAAO1E,GAAOwS,aACdhN,KAAM,SAAFnN,GAAA,IAAKuM,EAAIvM,EAAJuM,KAAMf,EAAKxL,EAALwL,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,iBAAiBmO,KAAMA,EAAMf,MAAOA,GAAS,EAC1EjK,SACH,0BAMLuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,YACLC,QAASgO,EACT5O,MAAO,CACL1E,GAAOyS,aACU,YAAjBW,GAA8BpT,GAAO0S,cACpB,UAAjBU,GAA4BpT,GAAO2S,aAErClP,QAASyP,EACTO,SAAUP,EACV1N,KAAM,SAAFjN,GAAwB,IAAnBqM,EAAIrM,EAAJqM,KAAMf,EAAKtL,EAALsL,MACb,MAAqB,YAAjBuP,GACKjU,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,eAAemO,KAAMA,EAAMf,MAAOA,IAC5C,UAAjBuP,GACFjU,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,eAAemO,KAAMA,EAAMf,MAAOA,KAEjE1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,eAAemO,KAAMA,EAAMf,MAAOA,GACxE,EAAEjK,SAEDsZ,EAAe,iBACE,YAAjBE,EAA6B,0BACZ,UAAjBA,EAA2B,qBAC3B,0BAKX,E,eCnEMpT,GAASC,EAAAA,QAAWlL,OAAO,CAC/BuL,UAAW,CACTH,KAAM,EACNI,gBAAiB,WAEnBE,OAAQ,CACNC,QAAS,GACTxO,UAAW,EACXqO,gBAAiB,OACjBgB,aAAc,GAEhBmS,eAAgB,CACdrS,cAAe,MACfN,WAAY,SACZQ,aAAc,IAEhBP,MAAO,CACL0B,SAAU,GACVhB,WAAY,OACZa,WAAY,GAEdoR,eAAgB,CACd/S,UAAW,EACXC,aAAc,GAEhB+S,cAAe,CACblT,QAAS,IAEXmT,UAAW,CACTtS,aAAc,GACdrP,UAAW,EACX2O,aAAc,GAEhBiT,WAAY,CACVpR,SAAU,GACVhB,WAAY,OACZH,aAAc,GAEhBwS,UAAW,CACTlQ,MAAO,OACPtC,aAAc,GAEhByS,YAAa,CACXnQ,MAAO,UACPtC,aAAc,GAEhB0S,WAAY,CACVpQ,MAAO,WAETV,iBAAkB,CAChBhD,KAAM,EACNmB,eAAgB,SAChBP,WAAY,UAEd5P,eAAgB,CACdgP,KAAM,EACNmB,eAAgB,SAChBP,WAAY,SACZL,QAAS,IAEXwT,UAAW,CACTrQ,MAAO,MACPtC,aAAc,GACdN,UAAW,YAIf,SA9KsB,WACpB,IAAApH,GAA8BC,EAAAA,EAAAA,UAAkB,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA5CgB,EAAOd,EAAA,GAAEe,EAAUf,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCsJ,EAAOrJ,EAAA,GAAEsJ,EAAUtJ,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAwB,MAAKU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAAhDtJ,EAAKuJ,EAAA,GAAE2Z,EAAQ3Z,EAAA,GAChB4I,GAAaC,EAAAA,EAAAA,iBACbhE,GAAQiE,EAAAA,EAAAA,YAER8Q,EAAY,eAAAhf,GAAA7B,EAAAA,EAAAA,UAAG,YACnB,IACEmQ,GAAW,GACX,IAAMpN,QAAa4B,IACnB4C,EAAWxE,GACX6d,EAAS,KACX,CAAE,MAAOE,GACPF,EAAS,gCACTjhB,QAAQjC,MAAM,4BAA6BojB,EAC7C,CAAC,QACC3Q,GAAW,EACb,CACF,IAAC,kBAZiB,OAAAtO,EAAAd,MAAA,KAAAC,UAAA,MAclBoH,EAAAA,EAAAA,YAAU,WACRyY,GACF,GAAG,IAEH,IAAME,EAAiB,eAAA1e,GAAArC,EAAAA,EAAAA,UAAG,UAAOkL,GAC/B,UACQrG,EAAYqG,GAClB3D,EAAWD,EAAQ0Z,QAAO,SAAAnX,GAAK,OAAIA,EAAMrK,KAAO0L,CAAO,KACvD8F,EAAAA,QAAMC,MAAM,WAAS,kCACvB,CAAE,MAAOvT,GACPsT,EAAAA,QAAMC,MAAM,QAAS,iCACvB,CACF,IAAC,gBARsBpQ,GAAA,OAAAwB,EAAAtB,MAAA,KAAAC,UAAA,KAqCvB,OAAIkP,GAEAtE,EAAAA,EAAAA,KAACsF,EAAAA,QAAI,CAACC,MAAO1E,GAAOmD,iBAAiBvJ,UACnCuF,EAAAA,EAAAA,KAACwF,EAAAA,QAAiB,CAACC,KAAK,YAK1B3T,GAEA8T,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO7O,eAAeyI,SAAA,EACjCuF,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO1E,GAAOkU,UAAUta,SAAE3I,KAChCkO,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CAACE,QAAS8O,EAAaxa,SAAC,mBAMnCmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAOM,UAAU1G,SAAA,EAC5BmL,EAAAA,EAAAA,MAACC,EAAAA,QAAO,CAACN,MAAO1E,GAAOS,OAAO7G,SAAA,EAC5BmL,EAAAA,EAAAA,MAACN,EAAAA,QAAI,CAACC,MAAO1E,GAAO0T,eAAe9Z,SAAA,EACjCuF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,UAAUmO,KAAM,GAAIf,MAAOxE,EAAMnP,OAAOG,WACrE8O,EAAAA,EAAAA,KAAC+F,EAAAA,QAAI,CAACR,MAAO1E,GAAOgB,MAAMpH,SAAC,8BAE7BuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CACLC,KAAK,YACLC,QArDe,WACrBlC,EAAWmC,SAAS,WACtB,EAoDQb,MAAO1E,GAAO2T,eACdnO,KAAM,SAAFhP,GAAA,IAAKoO,EAAIpO,EAAJoO,KAAMf,EAAKrN,EAALqN,MAAK,OAClB1E,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,OAAOmO,KAAMA,EAAMf,MAAOA,GAAS,EAChEjK,SACH,sBAIHuF,EAAAA,EAAAA,KAACyJ,EAAAA,QAAQ,CACPtS,KAAMuE,EACNmO,WA5Dc,SAAH5S,GAAA,IAAM0S,EAAI1S,EAAJ0S,KAAI,OACzB/D,EAAAA,EAAAA,MAACyP,GAAAA,QAAI,CAAC9P,MAAO1E,GAAO6T,UAAUja,SAAA,EAC5BmL,EAAAA,EAAAA,MAACyP,GAAAA,QAAKC,QAAO,CAAA7a,SAAA,EACXmL,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAO8T,WAAWla,SAAA,CAC5BkP,EAAK4L,aAAa,OAAK5L,EAAK6L,iBAE/B5P,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAO+T,UAAUna,SAAA,CAAC,UACrB,IAAIkF,KAAKgK,EAAK8L,YAAY3I,yBAEpClH,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAOgU,YAAYpa,SAAA,CAAC,YACrBkP,EAAK+L,gBAEjB9P,EAAAA,EAAAA,MAACG,EAAAA,QAAI,CAACR,MAAO1E,GAAOiU,WAAWra,SAAA,CAAC,cACM,QAAxBkP,EAAK3R,eAA2B,UAAS,YAAS,IAAE2R,EAAK4L,aAAa,KACzD,QAAxB5L,EAAK1R,eAA2B,UAAS,YAAS,IAAE0R,EAAK6L,oBAG9DxV,EAAAA,EAAAA,KAACqV,GAAAA,QAAKM,QAAO,CAAAlb,UACXuF,EAAAA,EAAAA,KAACiG,EAAAA,QAAM,CAACE,QAAS,WAAF,OAAQgP,EAAkBxL,EAAK/V,GAAG,EAAC6G,SAAC,iBAEhD,EAyCHiP,aAAc,SAAAC,GAAI,OAAIA,EAAK/V,GAAGgW,UAAU,EACxCjE,sBAAuB9E,GAAO4T,kBAItC,ECjHA,IAAMmB,IAAMC,EAAAA,EAAAA,WACNC,IAAQC,EAAAA,EAAAA,WAEd,SAASC,KACP,OACEhW,EAAAA,EAAAA,KAAC8V,GAAMG,UAAS,CAAAxb,UACduF,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CACX5e,KAAK,aACL6e,UAAWC,EACXC,QAAS,CAAEC,aAAa,MAIhC,CAEA,SAASC,KACP,OACEvW,EAAAA,EAAAA,KAAC8V,GAAMG,UAAS,CAAAxb,UACduF,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CACX5e,KAAK,eACL6e,UAAWK,GACXH,QAAS,CAAEC,aAAa,MAIhC,CAEA,SAASG,KACP,OACEzW,EAAAA,EAAAA,KAAC8V,GAAMG,UAAS,CAAAxb,UACduF,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CACX5e,KAAK,gBACL6e,UAAWO,GACXL,QAAS,CAAEC,aAAa,MAIhC,CAEA,SAASK,KACP,OACE3W,EAAAA,EAAAA,KAAC8V,GAAMG,UAAS,CAAAxb,UACduF,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CACX5e,KAAK,mBACL6e,UAAWvK,GACXyK,QAAS,CAAEC,aAAa,MAIhC,CAEA,SAASM,KACP,OACE5W,EAAAA,EAAAA,KAAC8V,GAAMG,UAAS,CAAAxb,UACduF,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CACX5e,KAAK,gBACL6e,UAAW3G,GACX6G,QAAS,CAAEC,aAAa,MAIhC,CAEA,IAAMO,GAAW,WACf,IAAM3W,GAAQiE,EAAAA,EAAAA,YAEd,OACEyB,EAAAA,EAAAA,MAACgQ,GAAIK,UAAS,CACZa,cAAe,CACbC,sBAAuB7W,EAAMnP,OAAOG,QACpC8lB,wBAAyB9W,EAAMnP,OAAOyB,QACtCykB,YAAa,CACX7V,gBAAiBlB,EAAMnP,OAAOqB,QAC9B8kB,eAAgB,EAChBC,eAAgB,SAElB1c,SAAA,EAEFuF,EAAAA,EAAAA,KAAC4V,GAAIM,OAAM,CACT5e,KAAK,UACL6e,UAAWH,GACXK,QAAS,CACPe,YAAa,SACbC,WAAY,SAAFphB,GAAA,IAAKyO,EAAKzO,EAALyO,MAAOe,EAAIxP,EAAJwP,KAAI,OACxBzF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,OAAOoN,MAAOA,EAAOe,KAAMA,GAAQ,MAItEzF,EAAAA,EAAAA,KAAC4V,GAAIM,OAAM,CACT5e,KAAK,aACL6e,UAAWI,GACXF,QAAS,CACPe,YAAa,YACbC,WAAY,SAAF5gB,GAAA,IAAKiO,EAAKjO,EAALiO,MAAOe,EAAIhP,EAAJgP,KAAI,OACxBzF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,gBAAgBoN,MAAOA,EAAOe,KAAMA,GAAQ,MAI/EzF,EAAAA,EAAAA,KAAC4V,GAAIM,OAAM,CACT5e,KAAK,aACL6e,UAAWM,GACXJ,QAAS,CACPe,YAAa,WACbC,WAAY,SAAFpgB,GAAA,IAAKyN,EAAKzN,EAALyN,MAAOe,EAAIxO,EAAJwO,KAAI,OACxBzF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,eAAeoN,MAAOA,EAAOe,KAAMA,GAAQ,MAI9EzF,EAAAA,EAAAA,KAAC4V,GAAIM,OAAM,CACT5e,KAAK,iBACL6e,UAAWQ,GACXN,QAAS,CACPe,YAAa,UACbC,WAAY,SAAFhgB,GAAA,IAAKqN,EAAKrN,EAALqN,MAAOe,EAAIpO,EAAJoO,KAAI,OACxBzF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,SAASoN,MAAOA,EAAOe,KAAMA,GAAQ,MAIxEzF,EAAAA,EAAAA,KAAC4V,GAAIM,OAAM,CACT5e,KAAK,cACL6e,UAAWS,GACXP,QAAS,CACPe,YAAa,WACbC,WAAY,SAAF7f,GAAA,IAAKkN,EAAKlN,EAALkN,MAAOe,EAAIjO,EAAJiO,KAAI,OACxBzF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,SAASoN,MAAOA,EAAOe,KAAMA,GAAQ,MAIxEzF,EAAAA,EAAAA,KAAC4V,GAAIM,OAAM,CACT5e,KAAK,WACL6e,UAAWmB,GACXjB,QAAS,CACPgB,WAAY,SAAFre,GAAA,IAAK0L,EAAK1L,EAAL0L,MAAOe,EAAIzM,EAAJyM,KAAI,OACxBzF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAsB,CAACxO,KAAK,MAAMmO,KAAMA,EAAMf,MAAOA,GAAS,OAM3E,EAiBA,SAfqB,WACnB,OACE1E,EAAAA,EAAAA,KAACuX,EAAAA,QAAmB,CAAA9c,UAClBmL,EAAAA,EAAAA,MAACkQ,GAAMG,UAAS,CACda,cAAe,CACbR,aAAa,GACb7b,SAAA,EAEFuF,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CAAC5e,KAAK,WAAW6e,UAAWU,MACzC7W,EAAAA,EAAAA,KAAC8V,GAAMI,OAAM,CAAC5e,KAAK,WAAW6e,UAAWqB,SAIjD,ECtKe,SAASC,KACtB,OACEzX,EAAAA,EAAAA,KAAC0X,EAAAA,iBAAgB,CAAAjd,UACfuF,EAAAA,EAAAA,KAAC2X,EAAAA,QAAa,CAACzX,MAAOvP,EAAqB8J,UAC3CuF,EAAAA,EAAAA,KAACxF,EAAW,CAAAC,UACRuF,EAAAA,EAAAA,KAAC4X,GAAY,SAKvB,C,GChBIC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBxd,IAAjByd,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,MCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAAS/a,OAAQub,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYL,EAASQ,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAASlb,OAAQyb,MACpB,EAAXL,GAAsBC,GAAgBD,IAAaM,OAAOC,KAAKpB,EAAoBS,GAAGY,OAAOllB,GAAS6jB,EAAoBS,EAAEtkB,GAAKwkB,EAASO,MAC9IP,EAASW,OAAOJ,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASc,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACEne,IAAN8e,IAAiBb,EAASa,EAC/B,CACD,CACA,OAAOb,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAAS/a,OAAQub,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,C,KCzBdb,EAAoBwB,EAAKpB,IACxB,IAAIqB,EAASrB,GAAUA,EAAOsB,WAC7B,IAAOtB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoB2B,EAAEF,EAAQ,CAAEtU,EAAGsU,IAC5BA,CAAM,ECLdzB,EAAoB2B,EAAI,CAACxB,EAASyB,KACjC,IAAI,IAAIzlB,KAAOylB,EACX5B,EAAoB6B,EAAED,EAAYzlB,KAAS6jB,EAAoB6B,EAAE1B,EAAShkB,IAC5EglB,OAAOW,eAAe3B,EAAShkB,EAAK,CAAE4lB,YAAY,EAAM3iB,IAAKwiB,EAAWzlB,IAE1E,ECND6jB,EAAoBgC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOzkB,MAAQ,IAAI0kB,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXpjB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBihB,EAAoB6B,EAAI,CAACO,EAAKC,IAAUlB,OAAOmB,UAAUC,eAAejC,KAAK8B,EAAKC,GCClFrC,EAAoBuB,EAAKpB,IACH,qBAAXqC,QAA0BA,OAAOC,aAC1CtB,OAAOW,eAAe3B,EAASqC,OAAOC,YAAa,CAAErmB,MAAO,WAE7D+kB,OAAOW,eAAe3B,EAAS,aAAc,CAAE/jB,OAAO,GAAO,ECL9D4jB,EAAoB/Z,EAAI,gB,MCKxB,IAAIyc,EAAkB,CACrB,IAAK,GAaN1C,EAAoBS,EAAES,EAAKyB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BxjB,KACvD,IAGI4gB,EAAU0C,GAHThC,EAAUmC,EAAaC,GAAW1jB,EAGhB2hB,EAAI,EAC3B,GAAGL,EAASqC,MAAMlnB,GAAgC,IAAxB4mB,EAAgB5mB,KAAa,CACtD,IAAImkB,KAAY6C,EACZ9C,EAAoB6B,EAAEiB,EAAa7C,KACrCD,EAAoBO,EAAEN,GAAY6C,EAAY7C,IAGhD,GAAG8C,EAAS,IAAIrC,EAASqC,EAAQ/C,EAClC,CAEA,IADG6C,GAA4BA,EAA2BxjB,GACrD2hB,EAAIL,EAASlb,OAAQub,IACzB2B,EAAUhC,EAASK,GAChBhB,EAAoB6B,EAAEa,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO3C,EAAoBS,EAAEC,EAAO,EAGjCuC,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBE,QAAQP,EAAqBQ,KAAK,KAAM,IAC3DH,EAAmBI,KAAOT,EAAqBQ,KAAK,KAAMH,EAAmBI,KAAKD,KAAKH,G,KC7CvF,IAAIK,EAAsBtD,EAAoBS,OAAEhe,EAAW,CAAC,MAAM,IAAOud,EAAoB,QAC7FsD,EAAsBtD,EAAoBS,EAAE6C,E","sources":["src/theme/index.ts","src/api/authService.ts","src/api/api.ts","src/context/AppContext.tsx","src/api/playerService.ts","src/screens/HomeScreen.tsx","src/screens/PlayersScreen.tsx","src/api/tournamentService.ts","src/screens/TournamentScreen.tsx","src/api/rankingService.ts","src/screens/RankingScreen.tsx","src/screens/SettingsScreen.tsx","src/screens/AddMatchScreen.tsx","src/screens/MatchesScreen.tsx","src/navigation/AppNavigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { MD3DarkTheme, MD3LightTheme } from 'react-native-paper';\nimport { DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from '@react-navigation/native';\n\nconst CombinedDefaultTheme = {\n  ...MD3LightTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...NavigationDefaultTheme.colors,\n  },\n};\n\nconst CombinedDarkTheme = {\n  ...MD3DarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n  },\n};\n\nexport { CombinedDefaultTheme, CombinedDarkTheme };\n\nexport const lightTheme = {\n  ...MD3LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    primary: '#2196F3',\n    onPrimary: '#FFFFFF',\n    primaryContainer: '#E3F2FD',\n    onPrimaryContainer: '#004B87',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#CCFFF9',\n    onSecondaryContainer: '#002D2A',\n    tertiary: '#4CAF50',\n    onTertiary: '#FFFFFF',\n    tertiaryContainer: '#E8F5E9',\n    onTertiaryContainer: '#002204',\n    error: '#B00020',\n    onError: '#FFFFFF',\n    errorContainer: '#FDECEA',\n    onErrorContainer: '#410002',\n    background: '#FFFFFF',\n    onBackground: '#000000',\n    surface: '#FFFFFF',\n    onSurface: '#000000',\n    surfaceVariant: '#F5F5F5',\n    onSurfaceVariant: '#757575',\n    outline: '#757575',\n    outlineVariant: '#BDBDBD',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#000000',\n    inverseOnSurface: '#FFFFFF',\n    inversePrimary: '#90CAF9',\n    elevation: {\n      level0: 'transparent',\n      level1: '#F5F5F5',\n      level2: '#EEEEEE',\n      level3: '#E0E0E0',\n      level4: '#BDBDBD',\n      level5: '#9E9E9E',\n    },\n  },\n};\n\nexport const darkTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: '#90CAF9',\n    onPrimary: '#003B6F',\n    primaryContainer: '#004B87',\n    onPrimaryContainer: '#D1E4FF',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#004D40',\n    onSecondaryContainer: '#70F7EE',\n    tertiary: '#81C784',\n    onTertiary: '#003314',\n    tertiaryContainer: '#004B1C',\n    onTertiaryContainer: '#95F5A0',\n    error: '#CF6679',\n    onError: '#000000',\n    errorContainer: '#93000A',\n    onErrorContainer: '#FFB4AB',\n    background: '#121212',\n    onBackground: '#FFFFFF',\n    surface: '#121212',\n    onSurface: '#FFFFFF',\n    surfaceVariant: '#2C2C2C',\n    onSurfaceVariant: '#BDBDBD',\n    outline: '#757575',\n    outlineVariant: '#424242',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#FFFFFF',\n    inverseOnSurface: '#000000',\n    inversePrimary: '#1976D2',\n    elevation: {\n      level0: 'transparent',\n      level1: '#1E1E1E',\n      level2: '#222222',\n      level3: '#242424',\n      level4: '#272727',\n      level5: '#2C2C2C',\n    },\n  },\n};\n\nexport type AppTheme = typeof lightTheme; ","import { API_URL } from './api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport interface User {\n  id: number;\n  username: string;\n  role: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nclass AuthService {\n  private token: string = 'dummy-token';\n  private user: User = {\n    id: 1,\n    username: 'admin',\n    role: 'admin'\n  };\n\n  constructor() {\n    console.log('🔄 Inicializando AuthService');\n  }\n\n  async register(username: string, password: string): Promise<void> {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Error al registrar usuario');\n    }\n  }\n\n  async login(username: string, password: string): Promise<AuthResponse> {\n    return {\n      token: this.token,\n      user: this.user\n    };\n  }\n\n  async logout(): Promise<void> {\n    // No hacer nada\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  getUser(): User {\n    return this.user;\n  }\n\n  isAuthenticated(): boolean {\n    return true;\n  }\n\n  isAdmin(): boolean {\n    return true;\n  }\n}\n\nexport const authService = new AuthService(); ","import axios from 'axios';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authService } from './authService';\n\n// Configuración de la URL base según la plataforma\nexport const API_URL = Platform.select({\n  android: 'http://10.0.2.2:8080', // Para el emulador de Android\n  ios: 'http://localhost:8080',    // Para el simulador de iOS\n  default: 'https://pingpong-backend-production.up.railway.app' // Para producción en Railway\n});\n\n// Crear instancia de axios con la configuración base\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para agregar el token de autenticación\napi.interceptors.request.use(\n  async (config) => {\n    try {\n      const token = await AsyncStorage.getItem('token');\n      console.log('🔍 Interceptor - Token recuperado:', token ? 'Sí' : 'No');\n      \n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n        console.log('🔑 Interceptor - Token agregado a los headers');\n        console.log('🔧 Interceptor - Headers completos:', JSON.stringify(config.headers, null, 2));\n      } else {\n        console.warn('⚠️ Interceptor - No se encontró token de autenticación');\n      }\n\n      console.log('📤 Interceptor - Configuración de la solicitud:', {\n        url: config.url,\n        method: config.method,\n        baseURL: config.baseURL\n      });\n    } catch (error) {\n      console.error('❌ Interceptor - Error al obtener el token:', error);\n    }\n    return config;\n  },\n  (error) => {\n    console.error('❌ Interceptor - Error en la configuración:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para manejar respuestas\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response?.status === 403) {\n      console.log('⚠️ Error 403 detectado, limpiando datos de autenticación...');\n      await authService.logout();\n      // Redirigir al login\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Definir los tipos de las respuestas esperadas\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n}\n\nexport interface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name?: string;\n  player2_name?: string;\n  winner_name?: string;\n}\n\nexport interface Tournament {\n  id_torneo: number;\n  nombre: string;\n  fecha_inicio: string;\n  fecha_fin: string;\n  estado: string;\n}\n\nexport interface Ranking {\n  id_rankings: number;\n  id_torneo: number;\n  id_jugador: number;\n  posicion: number;\n  partidas_ganadas: number;\n  partidas_perdidas: number;\n  nombre_jugador?: string;\n  nombre_torneo?: string;\n}\n\n// Funciones para interactuar con la API\nexport const getPlayers = async (): Promise<Player[]> => {\n  try {\n    const response = await api.get('/players');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener jugadores:', error);\n    throw error;\n  }\n};\n\nexport const addPlayer = async (name: string): Promise<Player> => {\n  try {\n    const response = await api.post('/players', { name });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar jugador:', error);\n    throw error;\n  }\n};\n\nexport const addMatch = async (\n  player1Id: number,\n  player2Id: number,\n  player1Result: string,\n  player2Result: string\n): Promise<Match> => {\n  try {\n    const requestBody = {\n      player1_id: player1Id,\n      player2_id: player2Id,\n      player1_result: player1Result,\n      player2_result: player2Result\n    };\n\n    console.log('🚀 Iniciando solicitud POST a /matches');\n    console.log('📦 Datos a enviar:', requestBody);\n    console.log('🔧 Configuración de la solicitud:', {\n      url: api.defaults.baseURL + '/matches',\n      headers: api.defaults.headers\n    });\n\n    const response = await api.post('/matches', requestBody);\n    console.log('✅ Respuesta del servidor:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error al agregar partida:', error);\n    if (axios.isAxiosError(error)) {\n      console.error('Detalles del error:', {\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data,\n        config: {\n          url: error.config?.url,\n          method: error.config?.method,\n          headers: error.config?.headers,\n          baseURL: error.config?.baseURL\n        }\n      });\n    }\n    throw error;\n  }\n};\n\nexport const getMatches = async (): Promise<Match[]> => {\n  try {\n    const response = await api.get('/matches');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener partidas:', error);\n    throw error;\n  }\n};\n\nexport const deletePlayer = async (id: number): Promise<void> => {\n  try {\n    console.log('🚀 Iniciando solicitud DELETE a:', `/players/${id}`);\n    await api.delete(`/players/${id}`);\n    console.log('✅ Jugador eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar jugador:', error);\n    throw error;\n  }\n};\n\nexport const deleteMatch = async (id: number): Promise<void> => {\n  try {\n    await api.post(`/matches/${id}/delete`);\n    console.log('✅ Partida eliminada correctamente');\n  } catch (error) {\n    console.error('Error al eliminar partida:', error);\n    throw error;\n  }\n};\n\n// Funciones para torneos\nexport const getTournaments = async (): Promise<Tournament[]> => {\n  try {\n    const response = await api.get('/torneos');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneos:', error);\n    throw error;\n  }\n};\n\nexport const getTournament = async (id: number): Promise<Tournament> => {\n  try {\n    const response = await api.get(`/torneos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneo:', error);\n    throw error;\n  }\n};\n\nexport const addTournament = async (tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> => {\n  try {\n    const response = await api.post('/torneos', tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear torneo:', error);\n    throw error;\n  }\n};\n\nexport const updateTournament = async (id: number, tournament: Partial<Tournament>): Promise<Tournament> => {\n  try {\n    const response = await api.put(`/torneos/${id}`, tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar torneo:', error);\n    throw error;\n  }\n};\n\nexport const deleteTournament = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/torneos/${id}`);\n    console.log('✅ Torneo eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar torneo:', error);\n    throw error;\n  }\n};\n\n// Funciones para rankings\nexport const getTournamentRankings = async (tournamentId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/torneo/${tournamentId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del torneo:', error);\n    throw error;\n  }\n};\n\nexport const getPlayerRankings = async (playerId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/jugador/${playerId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del jugador:', error);\n    throw error;\n  }\n};\n\nexport const addRanking = async (ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> => {\n  try {\n    const response = await api.post('/rankings', ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear ranking:', error);\n    throw error;\n  }\n};\n\nexport const updateRanking = async (id: number, ranking: Partial<Ranking>): Promise<Ranking> => {\n  try {\n    const response = await api.put(`/rankings/${id}`, ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar ranking:', error);\n    throw error;\n  }\n};\n\nexport const deleteRanking = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/rankings/${id}`);\n    console.log('✅ Ranking eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar ranking:', error);\n    throw error;\n  }\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MD3Theme } from 'react-native-paper';\nimport { CombinedDefaultTheme } from '../theme';\nimport { API_URL } from '../api/api';\nimport { authService } from '../api/authService';\n\ninterface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\ninterface Match {\n  id: number;\n  player1: Player;\n  player2: Player;\n  winner?: Player;\n  date: Date;\n  comments: Comment[];\n}\n\ninterface Tournament {\n  id: number;\n  name: string;\n  description: string;\n  startDate: Date;\n  maxPlayers: number;\n  location: string;\n  players: Player[];\n  matches: Match[];\n  status: 'pending' | 'in_progress' | 'completed';\n}\n\ninterface Comment {\n  id: number;\n  matchId: number;\n  userId: number;\n  text: string;\n  timestamp: Date;\n}\n\nexport interface AppContextType {\n  theme: MD3Theme;\n  isOfflineMode: boolean;\n  soundEnabled: boolean;\n  toggleOfflineMode: () => void;\n  toggleSound: () => void;\n  players: Player[];\n  matches: Match[];\n  tournaments: Tournament[];\n  comments: Comment[];\n  addPlayer: (player: Omit<Player, 'id' | 'stats'>) => Promise<void>;\n  updatePlayer: (player: Player) => Promise<void>;\n  addLocalMatch: (match: Omit<Match, 'id' | 'comments'>) => Promise<Match>;\n  addComment: (matchId: number, text: string) => Promise<void>;\n  createTournament: (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => Promise<void>;\n  updateTournament: (tournament: Tournament) => Promise<void>;\n  isAuthenticated: boolean;\n  setIsAuthenticated: (value: boolean) => void;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      const storedPlayers = await AsyncStorage.getItem('players');\n      const storedMatches = await AsyncStorage.getItem('matches');\n      const storedTournaments = await AsyncStorage.getItem('tournaments');\n      const storedComments = await AsyncStorage.getItem('comments');\n      const storedSoundEnabled = await AsyncStorage.getItem('soundEnabled');\n\n      if (storedPlayers) setPlayers(JSON.parse(storedPlayers));\n      if (storedMatches) setMatches(JSON.parse(storedMatches));\n      if (storedTournaments) setTournaments(JSON.parse(storedTournaments));\n      if (storedComments) setComments(JSON.parse(storedComments));\n      if (storedSoundEnabled !== null) setSoundEnabled(JSON.parse(storedSoundEnabled));\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n\n  const saveData = async () => {\n    try {\n      await AsyncStorage.setItem('players', JSON.stringify(players));\n      await AsyncStorage.setItem('matches', JSON.stringify(matches));\n      await AsyncStorage.setItem('tournaments', JSON.stringify(tournaments));\n      await AsyncStorage.setItem('comments', JSON.stringify(comments));\n      await AsyncStorage.setItem('soundEnabled', JSON.stringify(soundEnabled));\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n\n  const toggleOfflineMode = () => setIsOfflineMode(!isOfflineMode);\n  const toggleSound = async () => {\n    const newSoundEnabled = !soundEnabled;\n    setSoundEnabled(newSoundEnabled);\n    await AsyncStorage.setItem('soundEnabled', JSON.stringify(newSoundEnabled));\n  };\n\n  const addPlayer = async (player: Omit<Player, 'id' | 'stats'>) => {\n    const newPlayer: Player = {\n      ...player,\n      id: players.length + 1,\n      stats_wins: 0,\n      stats_losses: 0,\n      stats_draws: 0,\n    };\n    setPlayers([...players, newPlayer]);\n    await saveData();\n  };\n\n  const updatePlayer = async (player: Player) => {\n    setPlayers(players.map(p => p.id === player.id ? player : p));\n    await saveData();\n  };\n\n  const addLocalMatch = async (match: Omit<Match, 'id' | 'comments'>) => {\n    try {\n      // Crear la nueva partida\n      const newMatch: Match = {\n        ...match,\n        id: matches.length + 1,\n        comments: [],\n      };\n\n      // Actualizar las estadísticas de los jugadores\n      const updatedPlayers = players.map(player => {\n        if (player.id === match.player1.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        if (player.id === match.player2.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        return player;\n      });\n\n      // Actualizar el estado\n      setMatches(prevMatches => [...prevMatches, newMatch]);\n      setPlayers(updatedPlayers);\n\n      // Guardar los cambios\n      await Promise.all([\n        AsyncStorage.setItem('matches', JSON.stringify([...matches, newMatch])),\n        AsyncStorage.setItem('players', JSON.stringify(updatedPlayers))\n      ]);\n\n      // Recargar los datos del backend\n      try {\n        const [updatedMatches, updatedPlayers] = await Promise.all([\n          fetch(`${API_URL}/matches`).then(res => res.json()),\n          fetch(`${API_URL}/players`).then(res => res.json())\n        ]);\n\n        setMatches(updatedMatches);\n        setPlayers(updatedPlayers);\n      } catch (error) {\n        console.error('Error al recargar datos del backend:', error);\n      }\n\n      return newMatch;\n    } catch (error) {\n      console.error('Error al agregar partida:', error);\n      throw error;\n    }\n  };\n\n  const addComment = async (matchId: number, text: string) => {\n    const newComment: Comment = {\n      id: comments.length + 1,\n      matchId,\n      userId: 1, // TODO: Implementar sistema de usuarios\n      text,\n      timestamp: new Date(),\n    };\n    setComments([...comments, newComment]);\n    await saveData();\n  };\n\n  const createTournament = async (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => {\n    const newTournament: Tournament = {\n      ...tournament,\n      id: tournaments.length + 1,\n      players: [],\n      matches: [],\n      status: 'pending',\n    };\n    setTournaments([...tournaments, newTournament]);\n    await saveData();\n  };\n\n  const updateTournament = async (tournament: Tournament) => {\n    setTournaments(tournaments.map(t => t.id === tournament.id ? tournament : t));\n    await saveData();\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        theme: CombinedDefaultTheme,\n        isOfflineMode,\n        soundEnabled,\n        toggleOfflineMode,\n        toggleSound,\n        players,\n        matches,\n        tournaments,\n        comments,\n        addPlayer,\n        updatePlayer,\n        addLocalMatch,\n        addComment,\n        createTournament,\n        updateTournament,\n        isAuthenticated,\n        setIsAuthenticated,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { api } from './api';\nimport { authService } from './authService';\nimport axios from 'axios';\n\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\nexport const playerService = {\n  getPlayers: async (): Promise<Player[]> => {\n    try {\n      console.log('🚀 Iniciando solicitud GET a /players');\n      console.log('📡 URL base:', api.defaults.baseURL);\n      const response = await api.get('/players');\n      console.log('✅ Respuesta del servidor:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('❌ Error al obtener jugadores:', error);\n      if (axios.isAxiosError(error)) {\n        console.error('Detalles del error:', {\n          status: error.response?.status,\n          statusText: error.response?.statusText,\n          data: error.response?.data,\n          config: {\n            url: error.config?.url,\n            method: error.config?.method,\n            headers: error.config?.headers\n          }\n        });\n      }\n      throw error;\n    }\n  },\n\n  createPlayer: async (player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.post('/players', player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear jugador:', error);\n      throw error;\n    }\n  },\n\n  updatePlayer: async (id: number, player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.put(`/players/${id}`, player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al actualizar jugador:', error);\n      throw error;\n    }\n  },\n\n  deletePlayer: async (id: number): Promise<void> => {\n    try {\n      await api.delete(`/players/${id}`);\n    } catch (error) {\n      console.error('Error al eliminar jugador:', error);\n      throw error;\n    }\n  },\n\n  addVictory: async (id: number): Promise<void> => {\n    try {\n      await api.post(`/players/${id}/victory`);\n    } catch (error) {\n      console.error('Error al registrar victoria:', error);\n      throw error;\n    }\n  }\n}; ","import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, ScrollView, Image, ViewStyle, TextStyle, Alert } from 'react-native';\nimport { Button, Text, Surface, useTheme, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { useApp } from '../context/AppContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { RootStackParamList } from '../navigation/types';\n\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'MainTabs'>;\n\nconst HomeScreen = () => {\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n  const theme = useTheme();\n  const [topPlayers, setTopPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const dynamicStyles = StyleSheet.create({\n    goldPlayerName: {\n      fontSize: 16,\n      color: theme.colors.primary,\n    },\n    victoriesContainer: {\n      flexDirection: 'row' as const,\n      alignItems: 'center' as const,\n      gap: 4,\n      backgroundColor: theme.colors.surface,\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n      borderRadius: 12,\n    },\n  });\n\n    const fetchTopPlayers = async () => {\n      try {\n      const players = await playerService.getPlayers();\n      // Ordenar por victorias y tomar los primeros 3\n      const sortedPlayers = [...players].sort((a, b) => b.victories - a.victories).slice(0, 3);\n        setTopPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('Error al obtener top jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    } finally {\n      setLoading(false);\n      }\n    };\n\n  useEffect(() => {\n    fetchTopPlayers();\n  }, []);\n\n  const handleAddMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n      <View style={styles.container}>\n        <Surface style={styles.header} elevation={2}>\n          <View style={styles.headerContent}>\n            <MaterialCommunityIcons \n              name=\"table-tennis\" \n              size={60}\n              color={theme.colors.primary}\n            />\n            <Text variant=\"titleLarge\" style={styles.title}>\n              Bienvenido a Ping Pong App\n            </Text>\n          </View>\n        </Surface>\n\n        <Surface style={styles.podiumContainer} elevation={2}>\n          <View style={styles.podiumHeader}>\n            <MaterialCommunityIcons name=\"trophy\" size={32} color={theme.colors.primary} />\n            <Text variant=\"titleLarge\" style={styles.podiumTitle}>\n              Top Jugadores\n            </Text>\n          </View>\n          <View style={styles.podium}>\n            {topPlayers.length >= 2 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.silverPosition,\n                  {\n                    height: 120,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#E8E8E8' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={32} color=\"#C0C0C0\" />\n                  <Text style={styles.medalText}>2°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[1].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[1].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 1 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.goldPosition,\n                  {\n                    height: 150,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFF7E6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={40} color=\"#FFD700\" />\n                  <Text style={[styles.medalText, { color: '#B8860B' }]}>1°</Text>\n                </View>\n                <Text style={[styles.playerName, dynamicStyles.goldPlayerName]}>{topPlayers[0].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[0].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 3 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.bronzePosition,\n                  {\n                    height: 100,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFE5D6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={28} color=\"#CD7F32\" />\n                  <Text style={[styles.medalText, { color: '#8B4513' }]}>3°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[2].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[2].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n          </View>\n        </Surface>\n\n        <View style={styles.buttonsContainer}>\n          <Button\n            mode=\"contained\"\n            onPress={handleAddMatch}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n            )}\n          >\n            Nuevo Partido\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'MatchesTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"clock-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Partidos\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'PlayersTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"account-group-outline\" size={size} color={color} />\n            )}\n          >\n            Gestionar Jugadores\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'RankingTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"trophy-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Ranking\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('Tournament')}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"tournament\" size={size} color={color} />\n            )}\n          >\n            Torneo Rápido\n          </Button>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#fff',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  headerContent: {\n    alignItems: 'center',\n  },\n  title: {\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  podiumContainer: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  podiumHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 24,\n    gap: 8,\n  },\n  podiumTitle: {\n    fontWeight: 'bold',\n  },\n  podium: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    height: 170,\n    gap: 8,\n  },\n  podiumPosition: {\n    width: 100,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 12,\n    padding: 12,\n    paddingTop: 8,\n  },\n  goldPosition: {\n    zIndex: 3,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  silverPosition: {\n    zIndex: 2,\n    marginRight: -4,\n  },\n  bronzePosition: {\n    zIndex: 1,\n    marginLeft: -4,\n  },\n  medalContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  medalText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: -4,\n  },\n  playerName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  victories: {\n    fontSize: 12,\n    opacity: 0.8,\n  },\n  buttonsContainer: {\n    padding: 16,\n    gap: 12,\n  },\n  button: {\n    marginVertical: 8,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginBottom: 10,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default HomeScreen; ","// src/screens/PlayersScreen.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, FlatList, Alert, ViewStyle, TextStyle, Animated } from 'react-native';\nimport { Text, Button, Surface, TextInput, useTheme, Portal, Modal, ActivityIndicator, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype PlayersScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\ninterface Styles {\n  container: ViewStyle;\n  header: ViewStyle;\n  title: TextStyle;\n  playerCard: ViewStyle;\n  playerInfo: ViewStyle;\n  playerDetails: ViewStyle;\n  actions: ViewStyle;\n  loadingContainer: ViewStyle;\n  modalContainer: ViewStyle;\n  modalContent: ViewStyle;\n  modalTitle: TextStyle;\n  modalText: TextStyle;\n  modalButtons: ViewStyle;\n  modalButton: ViewStyle;\n  input: ViewStyle;\n  content: ViewStyle;\n  addPlayerSection: ViewStyle;\n  addButton: ViewStyle;\n  topPlayerCard: ViewStyle;\n  avatar: ViewStyle;\n  nameContainer: ViewStyle;\n  crownIcon: ViewStyle;\n  victoriesContainer: ViewStyle;\n  victoriesText: TextStyle;\n  emptyContainer: ViewStyle;\n  emptyText: TextStyle;\n}\n\nconst styles = StyleSheet.create<Styles>({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    marginTop: 8,\n  },\n  content: {\n    flex: 1,\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  playerCard: {\n    margin: 8,\n    padding: 16,\n    borderRadius: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  playerDetails: {\n    marginLeft: 16,\n  },\n  addPlayerSection: {\n    marginTop: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  input: {\n    marginBottom: 20,\n  },\n  addButton: {\n    marginTop: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8,\n    width: '80%',\n  },\n  modalTitle: {\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 5,\n  },\n  topPlayerCard: {\n    borderColor: '#FFD700',\n    borderWidth: 2,\n  },\n  avatar: {\n    marginRight: 12,\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  crownIcon: {\n    marginLeft: 8,\n  },\n  victoriesContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  victoriesText: {\n    marginLeft: 4,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    padding: 32,\n  },\n  emptyText: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n});\n\nconst PlayersScreen = () => {\n  const navigation = useNavigation<PlayersScreenNavigationProp>();\n  const theme = useTheme();\n  const [modalScale] = useState(new Animated.Value(0));\n\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [newName, setNewName] = useState('');\n  const [editingPlayer, setEditingPlayer] = useState<Player | null>(null);\n  const [editName, setEditName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudo cargar la lista de jugadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addPlayer = async () => {\n    if (!newName.trim()) {\n      Alert.alert('Campo vacío', 'Por favor ingresa un nombre');\n      return;\n    }\n\n    try {\n      await playerService.createPlayer({ name: newName });\n      setNewName('');\n      fetchPlayers();\n    } catch (error) {\n      console.error('Error al agregar jugador:', error);\n      Alert.alert('Error', 'No se pudo agregar el jugador');\n    }\n  };\n\n  const handleUpdatePlayer = async () => {\n    if (!editingPlayer || !editName.trim()) return;\n\n    try {\n      await playerService.updatePlayer(editingPlayer.id, { name: editName });\n      Alert.alert('Éxito', 'Jugador actualizado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo actualizar el jugador');\n    } finally {\n      setEditingPlayer(null);\n      setEditName('');\n    }\n  };\n\n  const handleDelete = async (player: Player) => {\n    setSelectedPlayer(player);\n    setDeleteModalVisible(true);\n  };\n\n  const confirmDelete = async () => {\n    if (!selectedPlayer) return;\n    \n    try {\n      await playerService.deletePlayer(selectedPlayer.id);\n      Alert.alert('Éxito', 'Jugador eliminado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar el jugador');\n    } finally {\n      setDeleteModalVisible(false);\n      setSelectedPlayer(null);\n    }\n  };\n\n  const openModal = () => {\n    Animated.spring(modalScale, {\n      toValue: 1,\n      useNativeDriver: true,\n      tension: 50,\n      friction: 7,\n    }).start();\n  };\n\n  const closeModal = () => {\n    Animated.timing(modalScale, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start(() => setEditingPlayer(null));\n  };\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (editingPlayer) {\n      openModal();\n    }\n  }, [editingPlayer]);\n\n  const getTopPlayer = () => {\n    if (players.length === 0) return null;\n    return players.reduce((prev, current) => \n      (prev.victories > current.victories) ? prev : current\n    );\n  };\n\n  const renderPlayerCard = ({ item }: { item: Player }) => {\n    const isTopPlayer = getTopPlayer()?.id === item.id;\n    \n    return (\n      <Surface \n        style={[\n          styles.playerCard,\n          isTopPlayer && styles.topPlayerCard\n        ]} \n        elevation={isTopPlayer ? 4 : 1}\n      >\n        <View style={styles.playerInfo}>\n          <Avatar.Text \n            size={40} \n            label={item.name.substring(0, 2).toUpperCase()}\n            style={[\n              styles.avatar,\n              isTopPlayer && { backgroundColor: theme.colors.primary }\n            ]}\n          />\n          <View style={styles.playerDetails}>\n            <View style={styles.nameContainer}>\n              <Text variant=\"titleMedium\">{item.name}</Text>\n              {isTopPlayer && (\n                <MaterialCommunityIcons \n                  name=\"crown\" \n                  size={20} \n                  color={theme.colors.primary} \n                  style={styles.crownIcon}\n                />\n              )}\n            </View>\n            <View style={styles.victoriesContainer}>\n              <MaterialCommunityIcons \n                name=\"trophy\" \n                size={16} \n                color={theme.colors.primary} \n              />\n              <Text variant=\"bodySmall\" style={styles.victoriesText}>\n                {item.victories} victorias\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.actions}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => {\n              setEditingPlayer(item);\n              setEditName(item.name);\n            }}\n            icon={() => <MaterialCommunityIcons name=\"pencil\" size={24} color={theme.colors.primary} />}\n            loading={editingPlayer?.id === item.id}\n          >\n            Editar\n          </Button>\n          <Button\n            mode=\"outlined\"\n            onPress={() => handleDelete(item)}\n            icon={() => <MaterialCommunityIcons name=\"delete\" size={24} color={theme.colors.error} />}\n            textColor={theme.colors.error}\n            loading={selectedPlayer?.id === item.id && deleteModalVisible}\n          >\n            Eliminar\n          </Button>\n        </View>\n      </Surface>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"account-group\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Jugadores\n        </Text>\n      </Surface>\n\n      <Surface style={styles.content} elevation={1}>\n        <FlatList\n          data={players}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderPlayerCard}\n          ListEmptyComponent={\n            <View style={styles.emptyContainer}>\n              <MaterialCommunityIcons name=\"account-off\" size={48} color={theme.colors.outline} />\n              <Text variant=\"titleMedium\" style={styles.emptyText}>\n                No hay jugadores registrados\n              </Text>\n            </View>\n          }\n        />\n\n        <Surface style={styles.addPlayerSection} elevation={2}>\n          <TextInput\n            mode=\"outlined\"\n            label=\"Nombre del jugador\"\n            value={newName}\n            onChangeText={setNewName}\n            style={styles.input}\n            right={newName ? (\n              <TextInput.Icon \n                icon={({ size, color }) => (\n                  <MaterialCommunityIcons \n                    name=\"close\" \n                    size={size} \n                    color={color} \n                  />\n                )} \n                onPress={() => setNewName('')} \n              />\n            ) : undefined}\n          />\n          <Button\n            mode=\"contained\"\n            onPress={addPlayer}\n            style={styles.addButton}\n            icon={() => <MaterialCommunityIcons name=\"account-plus\" size={24} color={theme.colors.onPrimary} />}\n          >\n            Agregar Jugador\n          </Button>\n        </Surface>\n      </Surface>\n\n      <Portal>\n        <Modal\n          visible={editingPlayer !== null}\n          onDismiss={closeModal}\n          style={styles.modalContainer}\n        >\n          <Animated.View \n            style={[\n              styles.modalContent,\n              { transform: [{ scale: modalScale }] }\n            ]}\n          >\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              Editar Jugador\n            </Text>\n            <TextInput\n              mode=\"outlined\"\n              label=\"Nombre\"\n              value={editName}\n              onChangeText={setEditName}\n              style={styles.input}\n              left={(\n                <TextInput.Icon \n                  icon={({ size, color }) => (\n                    <MaterialCommunityIcons \n                      name=\"account\" \n                      size={size} \n                      color={color} \n                    />\n                  )} \n                />\n              )}\n            />\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={closeModal}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={handleUpdatePlayer}\n                style={styles.modalButton}\n                loading={loading}\n              >\n                Guardar\n              </Button>\n            </View>\n          </Animated.View>\n        </Modal>\n      </Portal>\n\n      <Portal>\n        <Modal\n          visible={deleteModalVisible}\n          onDismiss={() => setDeleteModalVisible(false)}\n          style={styles.modalContainer}\n        >\n          <View style={styles.modalContent}>\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              ¿Eliminar jugador?\n            </Text>\n            <Text variant=\"bodyMedium\" style={styles.modalText}>\n              ¿Estás seguro de que deseas eliminar a {selectedPlayer?.name}?\n            </Text>\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => setDeleteModalVisible(false)}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={confirmDelete}\n                buttonColor={theme.colors.error}\n                style={styles.modalButton}\n              >\n                Eliminar\n              </Button>\n            </View>\n          </View>\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\nexport default PlayersScreen;\n","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Tournament {\r\n  id_torneo: number;\r\n  nombre: string;\r\n  fecha_inicio: string;\r\n  fecha_fin: string;\r\n  estado: string;\r\n}\r\n\r\nclass TournamentService {\r\n  async getAllTournaments(): Promise<Tournament[]> {\r\n    try {\r\n      console.log('🚀 Iniciando solicitud GET a /torneos');\r\n      console.log('📡 URL base:', api.defaults.baseURL);\r\n      const response = await api.get('/torneos');\r\n      console.log('✅ Respuesta del servidor:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener torneos:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getTournament(id: number): Promise<Tournament> {\r\n    try {\r\n      const response = await api.get(`/torneos/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createTournament(tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.post('/torneos', tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTournament(id: number, tournament: Partial<Tournament>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.put(`/torneos/${id}`, tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteTournament(id: number): Promise<void> {\r\n    try {\r\n      await api.delete(`/torneos/${id}`);\r\n    } catch (error) {\r\n      console.error('Error al eliminar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const tournamentService = new TournamentService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert } from 'react-native';\nimport { tournamentService } from '../api/tournamentService';\nimport { Tournament } from '../api/tournamentService';\n\nexport default function TournamentScreen() {\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [newTournament, setNewTournament] = useState({\n    nombre: '',\n    fecha_inicio: '',\n    fecha_fin: '',\n    estado: 'activo'\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n  }, []);\n\n  const fetchTournaments = async () => {\n    try {\n      setLoading(true);\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateTournament = async () => {\n    try {\n      if (!newTournament.nombre || !newTournament.fecha_inicio || !newTournament.fecha_fin) {\n        Alert.alert('Error', 'Por favor completa todos los campos');\n        return;\n      }\n\n      await tournamentService.createTournament(newTournament);\n      setModalVisible(false);\n      setNewTournament({\n        nombre: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: 'activo'\n      });\n      fetchTournaments();\n      Alert.alert('Éxito', 'Torneo creado correctamente');\n    } catch (error) {\n      console.error('Error al crear torneo:', error);\n      Alert.alert('Error', 'No se pudo crear el torneo');\n    }\n  };\n\n  const renderTournamentCard = ({ item }: { item: Tournament }) => (\n    <View style={styles.card}>\n      <Text style={styles.tournamentName}>{item.nombre}</Text>\n      <View style={styles.datesContainer}>\n        <Text style={styles.date}>Inicio: {new Date(item.fecha_inicio).toLocaleDateString()}</Text>\n        <Text style={styles.date}>Fin: {new Date(item.fecha_fin).toLocaleDateString()}</Text>\n      </View>\n      <View style={[styles.statusBadge, { backgroundColor: item.estado === 'activo' ? '#4CAF50' : '#9E9E9E' }]}>\n        <Text style={styles.statusText}>{item.estado}</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Torneos</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Crear Torneo</Text>\n        </TouchableOpacity>\n      </View>\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando torneos...</Text>\n      ) : tournaments.length === 0 ? (\n        <Text style={styles.emptyText}>No hay torneos disponibles</Text>\n      ) : (\n        <FlatList\n          data={tournaments}\n          renderItem={renderTournamentCard}\n          keyExtractor={(item) => item.id_torneo.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Crear Nuevo Torneo</Text>\n            \n            <TextInput\n              style={styles.input}\n              placeholder=\"Nombre del torneo\"\n              value={newTournament.nombre}\n              onChangeText={(text) => setNewTournament({...newTournament, nombre: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de inicio (YYYY-MM-DD)\"\n              value={newTournament.fecha_inicio}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_inicio: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de fin (YYYY-MM-DD)\"\n              value={newTournament.fecha_fin}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_fin: text})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateTournament}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  tournamentName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  datesContainer: {\n    marginBottom: 8,\n  },\n  date: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  statusText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Ranking {\r\n  id_rankings: number;\r\n  id_torneo: number;\r\n  id_jugador: number;\r\n  posicion: number;\r\n  partidas_ganadas: number;\r\n  partidas_perdidas: number;\r\n  nombre_jugador?: string; // Para cuando necesitemos mostrar el nombre del jugador\r\n  nombre_torneo?: string; // Para cuando necesitemos mostrar el nombre del torneo\r\n  total_partidas?: number;\r\n  porcentaje_victorias?: number;\r\n}\r\n\r\nclass RankingService {\r\n  async getTournamentRankings(tournamentId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para torneo:', tournamentId);\r\n      const response = await api.get(`/rankings/torneo/${tournamentId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del torneo:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPlayerRankings(playerId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para jugador:', playerId);\r\n      const response = await api.get(`/rankings/jugador/${playerId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del jugador:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createRanking(ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Creando nuevo ranking:', ranking);\r\n      const response = await api.post('/rankings', ranking);\r\n      console.log('✅ Ranking creado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al crear ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateRanking(id: number, ranking: Partial<Ranking>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Actualizando ranking:', { id, ranking });\r\n      const response = await api.put(`/rankings/${id}`, ranking);\r\n      console.log('✅ Ranking actualizado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al actualizar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteRanking(id: number): Promise<void> {\r\n    try {\r\n      console.log('🚀 Eliminando ranking:', id);\r\n      await api.delete(`/rankings/${id}`);\r\n      console.log('✅ Ranking eliminado correctamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al eliminar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const rankingService = new RankingService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert, ScrollView } from 'react-native';\nimport { rankingService, Ranking } from '../api/rankingService';\nimport { tournamentService, Tournament } from '../api/tournamentService';\nimport { playerService } from '../api/playerService';\n\nexport default function RankingScreen() {\n  const [rankings, setRankings] = useState<Ranking[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [players, setPlayers] = useState<Array<{ id: number; name: string }>>([]);\n  const [selectedTournament, setSelectedTournament] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [showTournamentSelector, setShowTournamentSelector] = useState(false);\n  const [showPlayerSelector, setShowPlayerSelector] = useState(false);\n  const [newRanking, setNewRanking] = useState({\n    id_torneo: 0,\n    id_jugador: 0,\n    partidas_ganadas: 0,\n    partidas_perdidas: 0\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedTournament) {\n      fetchRankings(selectedTournament);\n    }\n  }, [selectedTournament]);\n\n  const fetchTournaments = async () => {\n    try {\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n      if (data.length > 0) {\n        setSelectedTournament(data[0].id_torneo);\n      }\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    }\n  };\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    }\n  };\n\n  const fetchRankings = async (tournamentId: number) => {\n    try {\n      setLoading(true);\n      const data = await rankingService.getTournamentRankings(tournamentId);\n      setRankings(data);\n    } catch (error) {\n      console.error('Error al obtener rankings:', error);\n      Alert.alert('Error', 'No se pudieron cargar los rankings');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateRanking = async () => {\n    try {\n      if (!newRanking.id_torneo || !newRanking.id_jugador) {\n        Alert.alert('Error', 'Por favor selecciona un torneo y un jugador');\n        return;\n      }\n\n      const rankingData = {\n        ...newRanking,\n        posicion: 0 // La posición se calculará automáticamente en el backend\n      };\n\n      await rankingService.createRanking(rankingData);\n      setModalVisible(false);\n      setNewRanking({\n        id_torneo: 0,\n        id_jugador: 0,\n        partidas_ganadas: 0,\n        partidas_perdidas: 0\n      });\n      fetchRankings(newRanking.id_torneo);\n      Alert.alert('Éxito', 'Ranking creado correctamente');\n    } catch (error) {\n      console.error('Error al crear ranking:', error);\n      Alert.alert('Error', 'No se pudo crear el ranking');\n    }\n  };\n\n  const renderRankingCard = ({ item }: { item: Ranking }) => (\n    <View style={styles.card}>\n      <View style={styles.positionContainer}>\n        <Text style={styles.position}>{item.posicion}°</Text>\n      </View>\n      <View style={styles.detailsContainer}>\n        <Text style={styles.playerName}>{item.nombre_jugador}</Text>\n        <View style={styles.statsContainer}>\n          <Text style={styles.stats}>G: {item.partidas_ganadas} | P: {item.partidas_perdidas}</Text>\n          <Text style={styles.percentage}>{item.porcentaje_victorias}% victorias</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderTournamentSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showTournamentSelector}\n      onRequestClose={() => setShowTournamentSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Torneo</Text>\n          <ScrollView style={styles.selectorList}>\n            {tournaments.map((tournament) => (\n              <TouchableOpacity\n                key={tournament.id_torneo}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setSelectedTournament(tournament.id_torneo);\n                  setShowTournamentSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{tournament.nombre}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowTournamentSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  const renderPlayerSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showPlayerSelector}\n      onRequestClose={() => setShowPlayerSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Jugador</Text>\n          <ScrollView style={styles.selectorList}>\n            {players.map((player) => (\n              <TouchableOpacity\n                key={player.id}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setNewRanking({...newRanking, id_jugador: player.id});\n                  setShowPlayerSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{player.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowPlayerSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Rankings</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Agregar Ranking</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.tournamentSelector}>\n        <Text style={styles.selectorLabel}>Seleccionar Torneo:</Text>\n        <TouchableOpacity\n          style={styles.selectorButton}\n          onPress={() => setShowTournamentSelector(true)}\n        >\n          <Text style={styles.selectorButtonText}>\n            {selectedTournament ? tournaments.find(t => t.id_torneo === selectedTournament)?.nombre : 'Seleccionar torneo'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {renderTournamentSelector()}\n      {renderPlayerSelector()}\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando rankings...</Text>\n      ) : rankings.length === 0 ? (\n        <Text style={styles.emptyText}>No hay rankings disponibles</Text>\n      ) : (\n        <FlatList\n          data={rankings}\n          renderItem={renderRankingCard}\n          keyExtractor={(item) => item.id_rankings.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Agregar Nuevo Ranking</Text>\n            \n            <Text style={styles.selectorLabel}>Torneo:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowTournamentSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_torneo ? tournaments.find(t => t.id_torneo === newRanking.id_torneo)?.nombre : 'Seleccionar torneo'}\n              </Text>\n            </TouchableOpacity>\n\n            <Text style={styles.selectorLabel}>Jugador:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowPlayerSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_jugador ? players.find(p => p.id === newRanking.id_jugador)?.name : 'Seleccionar jugador'}\n              </Text>\n            </TouchableOpacity>\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas ganadas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_ganadas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_ganadas: parseInt(text) || 0})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas perdidas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_perdidas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_perdidas: parseInt(text) || 0})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateRanking}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  tournamentSelector: {\n    backgroundColor: '#fff',\n    padding: 16,\n    marginBottom: 8,\n  },\n  selectorLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 8,\n  },\n  selectorButton: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  selectorButtonText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  selectorList: {\n    maxHeight: 300,\n  },\n  selectorItem: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  selectorItemText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  positionContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#2196F3',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  position: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  detailsContainer: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  stats: {\n    fontSize: 14,\n    color: '#666',\n  },\n  percentage: {\n    fontSize: 14,\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Surface, Switch, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\n\nconst SettingsScreen = () => {\n  const { theme, isOfflineMode, soundEnabled, toggleOfflineMode, toggleSound } = useApp();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"cog\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Ajustes\n        </Text>\n      </Surface>\n\n      <Surface style={styles.section} elevation={1}>\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"wifi-off\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Modo sin conexión</Text>\n            <Text variant=\"bodySmall\">Usar datos locales sin conexión a internet</Text>\n          </View>\n          <Switch value={isOfflineMode} onValueChange={toggleOfflineMode} />\n        </View>\n\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"volume-high\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Sonido</Text>\n            <Text variant=\"bodySmall\">Activar/desactivar efectos de sonido</Text>\n          </View>\n          <Switch value={soundEnabled} onValueChange={toggleSound} />\n        </View>\n      </Surface>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 24,\n    alignItems: 'center',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  title: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  section: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n  },\n  settingText: {\n    flex: 1,\n    marginLeft: 16,\n  }\n}); \n\nexport default SettingsScreen; ","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { Text, Button, TextInput, Surface, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getPlayers, addMatch } from '../api/api';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\n\ntype AddMatchScreenNavigationProp = StackNavigationProp<RootStackParamList, 'AddMatch'>;\n\ninterface Player {\n  id: number;\n  name: string;\n}\n\nconst AddMatchScreen = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer1, setSelectedPlayer1] = useState<number | null>(null);\n  const [selectedPlayer2, setSelectedPlayer2] = useState<number | null>(null);\n  const [player1Result, setPlayer1Result] = useState<'win' | 'lose'>('win');\n  const [player2Result, setPlayer2Result] = useState<'win' | 'lose'>('lose');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const navigation = useNavigation<AddMatchScreenNavigationProp>();\n  const theme = useTheme();\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await getPlayers();\n      setPlayers(data);\n      setLoading(false);\n    } catch (error) {\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedPlayer1 || !selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    if (selectedPlayer1 === selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus('idle');\n\n    try {\n      await addMatch(\n        selectedPlayer1,\n        selectedPlayer2,\n        player1Result,\n        player2Result\n      );\n\n      setSubmitStatus('success');\n      setTimeout(() => {\n        navigation.goBack();\n      }, 1500);\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Surface style={styles.surface}>\n        <View style={styles.header}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => navigation.goBack()}\n            style={styles.backButton}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"arrow-left\" size={size} color={color} />\n            )}\n          >\n            Volver\n          </Button>\n        <Text style={styles.title}>Registrar Nueva Partida</Text>\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 1\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer1 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer1(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 2\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer2 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer2(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.resultSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"trophy\" size={20} color={theme.colors.primary} /> Resultado\n          </Text>\n          <View style={styles.resultButtons}>\n            <Button\n              mode={player1Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('win');\n                setPlayer2Result('lose');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 1 Gana\n            </Button>\n            <Button\n              mode={player2Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('lose');\n                setPlayer2Result('win');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 2 Gana\n            </Button>\n          </View>\n        </View>\n\n        <Button\n          mode=\"contained\"\n          onPress={handleSubmit}\n          style={[\n            styles.submitButton,\n            submitStatus === 'success' && styles.successButton,\n            submitStatus === 'error' && styles.errorButton\n          ]}\n          loading={isSubmitting}\n          disabled={isSubmitting}\n          icon={({ size, color }) => {\n            if (submitStatus === 'success') {\n              return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n            } else if (submitStatus === 'error') {\n              return <MaterialCommunityIcons name=\"alert-circle\" size={size} color={color} />;\n            }\n            return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n          }}\n        >\n          {isSubmitting ? 'Registrando...' : \n           submitStatus === 'success' ? '¡Partida Registrada!' :\n           submitStatus === 'error' ? 'Error al Registrar' :\n           'Registrar Partida'}\n        </Button>\n      </Surface>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  surface: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 4,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    flex: 1,\n    textAlign: 'center',\n  },\n  playerSection: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  playerButton: {\n    marginBottom: 8,\n  },\n  resultSection: {\n    marginBottom: 24,\n  },\n  resultButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  resultButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  submitButton: {\n    marginTop: 16,\n  },\n  successButton: {\n    backgroundColor: '#4CAF50',\n  },\n  errorButton: {\n    backgroundColor: '#f44336',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AddMatchScreen;\n","// src/screens/MatchesScreen.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, FlatList, Alert } from 'react-native';\nimport { Text, Card, Button, ActivityIndicator, Surface, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getMatches, deleteMatch } from '../api/api';\nimport { authService } from '../api/authService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype MatchesScreenNavigationProp = StackNavigationProp<RootStackParamList, 'MainTabs'>;\n\ninterface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name: string;\n  player2_name: string;\n  winner_name: string;\n}\n\nconst MatchesScreen = () => {\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigation = useNavigation<MatchesScreenNavigationProp>();\n  const theme = useTheme();\n\n  const fetchMatches = async () => {\n    try {\n      setLoading(true);\n      const data = await getMatches();\n      setMatches(data);\n      setError(null);\n    } catch (err) {\n      setError('Error al cargar las partidas');\n      console.error('Error al cargar partidas:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMatches();\n  }, []);\n\n  const handleDeleteMatch = async (matchId: number) => {\n    try {\n      await deleteMatch(matchId);\n      setMatches(matches.filter(match => match.id !== matchId));\n      Alert.alert('Éxito', 'Partida eliminada correctamente');\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar la partida');\n    }\n  };\n\n  const handleNewMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  const renderMatch = ({ item }: { item: Match }) => (\n    <Card style={styles.matchCard}>\n      <Card.Content>\n        <Text style={styles.matchTitle}>\n          {item.player1_name} vs {item.player2_name}\n        </Text>\n        <Text style={styles.matchDate}>\n          Fecha: {new Date(item.match_date).toLocaleDateString()}\n        </Text>\n        <Text style={styles.matchResult}>\n          Ganador: {item.winner_name}\n        </Text>\n        <Text style={styles.matchScore}>\n          Resultado: {item.player1_result === 'win' ? 'Ganó' : 'Perdió'} {item.player1_name} - \n          {item.player2_result === 'win' ? 'Ganó' : 'Perdió'} {item.player2_name}\n        </Text>\n      </Card.Content>\n      <Card.Actions>\n        <Button onPress={() => handleDeleteMatch(item.id)}>Eliminar</Button>\n      </Card.Actions>\n    </Card>\n  );\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <Button onPress={fetchMatches}>Reintentar</Button>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Surface style={styles.header}>\n        <View style={styles.titleContainer}>\n          <MaterialCommunityIcons name=\"history\" size={32} color={theme.colors.primary} />\n          <Text style={styles.title}>Historial de Partidas</Text>\n        </View>\n        <Button \n          mode=\"contained\" \n          onPress={handleNewMatch}\n          style={styles.newMatchButton}\n          icon={({ size, color }) => (\n            <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n          )}\n        >\n          Nueva Partida\n        </Button>\n      </Surface>\n      <FlatList\n        data={matches}\n        renderItem={renderMatch}\n        keyExtractor={item => item.id.toString()}\n        contentContainerStyle={styles.listContainer}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    padding: 16,\n    elevation: 4,\n    backgroundColor: '#fff',\n    marginBottom: 8,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  newMatchButton: {\n    marginTop: 8,\n    borderRadius: 8,\n  },\n  listContainer: {\n    padding: 16,\n  },\n  matchCard: {\n    marginBottom: 16,\n    elevation: 2,\n    borderRadius: 8,\n  },\n  matchTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  matchDate: {\n    color: '#666',\n    marginBottom: 4,\n  },\n  matchResult: {\n    color: '#2196F3',\n    marginBottom: 4,\n  },\n  matchScore: {\n    color: '#4CAF50',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n});\n\nexport default MatchesScreen;\n","// src/navigation/AppNavigator.tsx\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\nimport { RootStackParamList, MainTabParamList } from './types';\n\n// Screens\nimport HomeScreen from '../screens/HomeScreen';\nimport PlayersScreen from '../screens/PlayersScreen';\nimport TournamentScreen from '../screens/TournamentScreen';\nimport RankingScreen from '../screens/RankingScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport AddMatchScreen from '../screens/AddMatchScreen';\nimport MatchesScreen from '../screens/MatchesScreen';\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction HomeStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"HomeScreen\" \n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction PlayerStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"PlayerScreen\" \n        component={PlayersScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction MatchesStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MatchesScreen\" \n        component={MatchesScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TournamentStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"TournamentScreen\" \n        component={TournamentScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction RankingStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"RankingScreen\" \n        component={RankingScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nconst MainTabs = () => {\n  const theme = useTheme();\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.outline,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopWidth: 1,\n          borderTopColor: '#ddd',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"HomeTab\"\n        component={HomeStack}\n        options={{\n          tabBarLabel: 'Inicio',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"PlayersTab\"\n        component={PlayerStack}\n        options={{\n          tabBarLabel: 'Jugadores',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"account-group\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"MatchesTab\"\n        component={MatchesStack}\n        options={{\n          tabBarLabel: 'Partidos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"table-tennis\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"TournamentsTab\"\n        component={TournamentStack}\n        options={{\n          tabBarLabel: 'Torneos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"trophy\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"RankingsTab\"\n        component={RankingStack}\n        options={{\n          tabBarLabel: 'Rankings',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"podium\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"MainTabs\" component={MainTabs} />\n        <Stack.Screen name=\"AddMatch\" component={AddMatchScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n","import React from 'react';\nimport { PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { AppProvider } from './src/context/AppContext';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { CombinedDefaultTheme } from './src/theme';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <PaperProvider theme={CombinedDefaultTheme}>\n      <AppProvider>\n          <AppNavigator />\n      </AppProvider>\n      </PaperProvider>\n    </SafeAreaProvider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/AppPingPong/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [159], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["CombinedDefaultTheme","_objectSpread","MD3LightTheme","NavigationDefaultTheme","colors","MD3DarkTheme","NavigationDarkTheme","primary","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","error","onError","errorContainer","onErrorContainer","background","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","authService","_createClass","AuthService","_classCallCheck","token","user","id","username","role","console","log","key","value","_register","_asyncToGenerator","password","response","fetch","API_URL","method","headers","body","JSON","stringify","ok","json","Error","_x","_x2","apply","arguments","_login","this","_x3","_x4","_logout","api","axios","create","baseURL","interceptors","request","use","_ref","config","AsyncStorage","getItem","warn","url","Promise","reject","_ref2","_error$response","status","logout","window","location","href","getPlayers","_ref3","get","data","addMatch","_ref4","name","post","_ref5","player1Id","player2Id","player1Result","player2Result","requestBody","player1_id","player2_id","player1_result","player2_result","defaults","_error$response2","_error$response3","_error$response4","_error$config","_error$config2","_error$config3","_error$config4","isAxiosError","statusText","_x5","_x6","_x7","getMatches","_ref6","deleteMatch","_ref7","delete","_ref8","_x9","_ref9","_ref10","_ref11","tournament","_ref12","put","_ref13","_ref14","tournamentId","_ref15","playerId","_ref16","ranking","_ref17","_ref18","AppContext","createContext","undefined","AppProvider","children","_useState","useState","_useState2","_slicedToArray","isOfflineMode","setIsOfflineMode","_useState3","_useState4","soundEnabled","setSoundEnabled","_useState5","_useState6","players","setPlayers","_useState7","_useState8","matches","setMatches","_useState9","_useState10","tournaments","setTournaments","_useState11","_useState12","comments","setComments","_useState13","isAuthenticated","_useState14","setIsAuthenticated","useEffect","loadData","storedPlayers","storedMatches","storedTournaments","storedComments","storedSoundEnabled","parse","saveData","setItem","toggleSound","newSoundEnabled","addPlayer","player","newPlayer","length","stats_wins","stats_losses","stats_draws","concat","_toConsumableArray","updatePlayer","map","p","addLocalMatch","match","newMatch","updatedPlayers","_match$winner","_match$winner2","_match$winner3","_match$winner4","_match$winner5","_match$winner6","player1","victories","winner","player2","prevMatches","all","_yield$Promise$all","then","res","_yield$Promise$all2","updatedMatches","addComment","matchId","text","newComment","userId","timestamp","Date","createTournament","newTournament","updateTournament","t","_jsx","Provider","theme","toggleOfflineMode","playerService","_getPlayers","createPlayer","_createPlayer","_updatePlayer","deletePlayer","_deletePlayer","addVictory","_addVictory","styles","StyleSheet","scrollView","flex","scrollContent","flexGrow","container","backgroundColor","paddingBottom","header","padding","marginHorizontal","marginTop","borderRadius","headerContent","alignItems","title","textAlign","podiumContainer","margin","podiumHeader","flexDirection","justifyContent","marginBottom","gap","podiumTitle","fontWeight","podium","height","podiumPosition","width","paddingTop","goldPosition","zIndex","borderWidth","borderColor","silverPosition","marginRight","bronzePosition","marginLeft","medalContainer","medalText","fontSize","position","bottom","playerName","opacity","buttonsContainer","button","marginVertical","logo","loadingContainer","navigation","useNavigation","useTheme","topPlayers","setTopPlayers","loading","setLoading","dynamicStyles","goldPlayerName","color","victoriesContainer","paddingHorizontal","paddingVertical","fetchTopPlayers","sortedPlayers","sort","a","b","slice","Alert","alert","View","style","ActivityIndicator","size","ScrollView","contentContainerStyle","_jsxs","Surface","MaterialCommunityIcons","Text","variant","Button","mode","onPress","navigate","icon","screen","content","playerCard","playerInfo","playerDetails","addPlayerSection","input","addButton","actions","modalContainer","modalContent","modalTitle","modalText","modalButtons","modalButton","topPlayerCard","avatar","nameContainer","crownIcon","victoriesText","emptyContainer","emptyText","Animated","Value","modalScale","newName","setNewName","editingPlayer","setEditingPlayer","editName","setEditName","selectedPlayer","setSelectedPlayer","_useState15","_useState16","deleteModalVisible","setDeleteModalVisible","fetchPlayers","trim","handleUpdatePlayer","handleDelete","confirmDelete","closeModal","timing","toValue","duration","useNativeDriver","start","spring","tension","friction","FlatList","keyExtractor","item","toString","renderItem","_getTopPlayer","isTopPlayer","reduce","prev","current","Avatar","label","substring","toUpperCase","textColor","ListEmptyComponent","TextInput","onChangeText","right","Icon","Portal","Modal","visible","onDismiss","transform","scale","left","buttonColor","tournamentService","TournamentService","_getAllTournaments","_getTournament","_createTournament","_updateTournament","_deleteTournament","TournamentScreen","modalVisible","setModalVisible","nombre","fecha_inicio","fecha_fin","estado","setNewTournament","fetchTournaments","getAllTournaments","handleCreateTournament","TouchableOpacity","addButtonText","loadingText","card","tournamentName","datesContainer","date","toLocaleDateString","statusBadge","id_torneo","list","animationType","transparent","onRequestClose","placeholder","cancelButton","buttonText","createButton","alignSelf","maxWidth","rankingService","RankingService","_getTournamentRankings","_getPlayerRankings","_error$response5","_error$response6","_error$config5","_error$config6","_createRanking","_error$response7","_error$response8","_error$response9","_error$config7","_error$config8","_error$config9","_updateRanking","_error$response10","_error$response11","_error$response12","_error$config10","_error$config11","_error$config12","_deleteRanking","_error$response13","_error$response14","_error$response15","_error$config13","_error$config14","_error$config15","RankingScreen","_tournaments$find","_tournaments$find2","_players$find","rankings","setRankings","selectedTournament","setSelectedTournament","showTournamentSelector","setShowTournamentSelector","showPlayerSelector","setShowPlayerSelector","_useState17","id_jugador","partidas_ganadas","partidas_perdidas","_useState18","newRanking","setNewRanking","fetchRankings","getTournamentRankings","handleCreateRanking","rankingData","posicion","createRanking","tournamentSelector","selectorLabel","selectorButton","selectorButtonText","find","selectorList","selectorItem","selectorItemText","positionContainer","detailsContainer","nombre_jugador","statsContainer","stats","percentage","porcentaje_victorias","id_rankings","keyboardType","parseInt","maxHeight","borderBottomWidth","borderBottomColor","section","settingItem","settingText","_useApp","context","useContext","useApp","Switch","onValueChange","backButton","playerSection","sectionTitle","playerButton","resultSection","resultButtons","resultButton","submitButton","successButton","errorButton","selectedPlayer1","setSelectedPlayer1","selectedPlayer2","setSelectedPlayer2","setPlayer1Result","setPlayer2Result","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleSubmit","setTimeout","goBack","disabled","titleContainer","newMatchButton","listContainer","matchCard","matchTitle","matchDate","matchResult","matchScore","errorText","setError","fetchMatches","err","handleDeleteMatch","filter","Card","Content","player1_name","player2_name","match_date","winner_name","Actions","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","HomeStack","Navigator","Screen","component","HomeScreen","options","headerShown","PlayerStack","PlayersScreen","MatchesStack","MatchesScreen","TournamentStack","RankingStack","MainTabs","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","borderTopWidth","borderTopColor","tabBarLabel","tabBarIcon","SettingsScreen","NavigationContainer","AddMatchScreen","App","SafeAreaProvider","PaperProvider","AppNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}