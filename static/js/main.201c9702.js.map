{"version":3,"file":"static/js/main.201c9702.js","mappings":"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","sources":["src/theme/index.ts","src/api/authService.ts","src/api/api.ts","src/context/AppContext.tsx","src/api/playerService.ts","src/screens/HomeScreen.tsx","src/screens/PlayersScreen.tsx","src/api/tournamentService.ts","src/screens/TournamentScreen.tsx","src/api/rankingService.ts","src/screens/RankingScreen.tsx","src/screens/SettingsScreen.tsx","src/screens/AddMatchScreen.tsx","src/screens/MatchesScreen.tsx","src/navigation/AppNavigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { MD3DarkTheme, MD3LightTheme } from 'react-native-paper';\nimport { DarkTheme as NavigationDarkTheme, DefaultTheme as NavigationDefaultTheme } from '@react-navigation/native';\n\nconst CombinedDefaultTheme = {\n  ...MD3LightTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...NavigationDefaultTheme.colors,\n  },\n};\n\nconst CombinedDarkTheme = {\n  ...MD3DarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n  },\n};\n\nexport { CombinedDefaultTheme, CombinedDarkTheme };\n\nexport const lightTheme = {\n  ...MD3LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    primary: '#2196F3',\n    onPrimary: '#FFFFFF',\n    primaryContainer: '#E3F2FD',\n    onPrimaryContainer: '#004B87',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#CCFFF9',\n    onSecondaryContainer: '#002D2A',\n    tertiary: '#4CAF50',\n    onTertiary: '#FFFFFF',\n    tertiaryContainer: '#E8F5E9',\n    onTertiaryContainer: '#002204',\n    error: '#B00020',\n    onError: '#FFFFFF',\n    errorContainer: '#FDECEA',\n    onErrorContainer: '#410002',\n    background: '#FFFFFF',\n    onBackground: '#000000',\n    surface: '#FFFFFF',\n    onSurface: '#000000',\n    surfaceVariant: '#F5F5F5',\n    onSurfaceVariant: '#757575',\n    outline: '#757575',\n    outlineVariant: '#BDBDBD',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#000000',\n    inverseOnSurface: '#FFFFFF',\n    inversePrimary: '#90CAF9',\n    elevation: {\n      level0: 'transparent',\n      level1: '#F5F5F5',\n      level2: '#EEEEEE',\n      level3: '#E0E0E0',\n      level4: '#BDBDBD',\n      level5: '#9E9E9E',\n    },\n  },\n};\n\nexport const darkTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: '#90CAF9',\n    onPrimary: '#003B6F',\n    primaryContainer: '#004B87',\n    onPrimaryContainer: '#D1E4FF',\n    secondary: '#03DAC6',\n    onSecondary: '#000000',\n    secondaryContainer: '#004D40',\n    onSecondaryContainer: '#70F7EE',\n    tertiary: '#81C784',\n    onTertiary: '#003314',\n    tertiaryContainer: '#004B1C',\n    onTertiaryContainer: '#95F5A0',\n    error: '#CF6679',\n    onError: '#000000',\n    errorContainer: '#93000A',\n    onErrorContainer: '#FFB4AB',\n    background: '#121212',\n    onBackground: '#FFFFFF',\n    surface: '#121212',\n    onSurface: '#FFFFFF',\n    surfaceVariant: '#2C2C2C',\n    onSurfaceVariant: '#BDBDBD',\n    outline: '#757575',\n    outlineVariant: '#424242',\n    shadow: '#000000',\n    scrim: '#000000',\n    inverseSurface: '#FFFFFF',\n    inverseOnSurface: '#000000',\n    inversePrimary: '#1976D2',\n    elevation: {\n      level0: 'transparent',\n      level1: '#1E1E1E',\n      level2: '#222222',\n      level3: '#242424',\n      level4: '#272727',\n      level5: '#2C2C2C',\n    },\n  },\n};\n\nexport type AppTheme = typeof lightTheme; ","import { API_URL } from './api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport interface User {\n  id: number;\n  username: string;\n  role: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nclass AuthService {\n  private token: string = 'dummy-token';\n  private user: User = {\n    id: 1,\n    username: 'admin',\n    role: 'admin'\n  };\n\n  constructor() {\n    console.log('🔄 Inicializando AuthService');\n  }\n\n  async register(username: string, password: string): Promise<void> {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Error al registrar usuario');\n    }\n  }\n\n  async login(username: string, password: string): Promise<AuthResponse> {\n    return {\n      token: this.token,\n      user: this.user\n    };\n  }\n\n  async logout(): Promise<void> {\n    // No hacer nada\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  getUser(): User {\n    return this.user;\n  }\n\n  isAuthenticated(): boolean {\n    return true;\n  }\n\n  isAdmin(): boolean {\n    return true;\n  }\n}\n\nexport const authService = new AuthService(); ","import axios, { AxiosError } from 'axios';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authService } from './authService';\n\n// Configuración de la URL base según la plataforma\nexport const API_URL = Platform.select({\n  android: 'http://10.0.2.2:3000', // Para el emulador de Android\n  ios: 'http://localhost:3000',    // Para el simulador de iOS\n  default: 'http://192.168.0.27:3000' // Para desarrollo web local\n});\n\nconsole.log('🌐 API_URL configurada:', API_URL);\nconsole.log('📱 Plataforma:', Platform.OS);\n\n// Crear instancia de axios con la configuración base\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 10000, // 10 segundos de timeout\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Aceptar todos los códigos de estado para manejarlos\n  }\n});\n\n// Función para probar la conexión\nexport const testConnection = async () => {\n  try {\n    console.log('🔍 Probando conexión al servidor...');\n    const response = await api.get('/test');\n    console.log('✅ Conexión exitosa:', response.data);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.error('❌ Error al conectar con el servidor:', {\n        message: error.message,\n        code: error.code,\n        response: error.response?.data,\n        config: {\n          url: error.config?.url,\n          baseURL: error.config?.baseURL,\n          method: error.config?.method\n        }\n      });\n    } else {\n      console.error('❌ Error desconocido:', error);\n    }\n    throw error;\n  }\n};\n\n// Interceptor para agregar el token de autenticación\napi.interceptors.request.use(\n  async (config) => {\n    try {\n      console.log('🚀 Iniciando petición a:', config.url);\n      console.log('🔧 Configuración:', {\n        baseURL: config.baseURL,\n        method: config.method,\n        headers: config.headers\n      });\n\n      const token = await AsyncStorage.getItem('token');\n      console.log('🔍 Token recuperado:', token ? 'Sí' : 'No');\n      \n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n        console.log('🔑 Token agregado a los headers');\n      }\n\n      return config;\n    } catch (error) {\n      console.error('❌ Error en interceptor de request:', error);\n      return Promise.reject(error);\n    }\n  },\n  (error: AxiosError) => {\n    console.error('❌ Error en la configuración de la petición:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para manejar respuestas\napi.interceptors.response.use(\n  (response) => {\n    console.log('✅ Respuesta exitosa:', {\n      url: response.config.url,\n      status: response.status,\n      data: response.data\n    });\n    return response;\n  },\n  async (error: AxiosError) => {\n    console.error('❌ Error en la respuesta:', {\n      url: error.config?.url,\n      status: error.response?.status,\n      message: error.message,\n      data: error.response?.data\n    });\n\n    if (error.code === 'ECONNABORTED') {\n      console.error('⏰ Timeout en la petición');\n    }\n\n    if (error.response?.status === 403) {\n      console.log('⚠️ Error 403 detectado, limpiando datos de autenticación...');\n      await authService.logout();\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Definir los tipos de las respuestas esperadas\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n}\n\nexport interface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name?: string;\n  player2_name?: string;\n  winner_name?: string;\n}\n\nexport interface Tournament {\n  id_torneo: number;\n  nombre: string;\n  fecha_inicio: string;\n  fecha_fin: string;\n  estado: string;\n}\n\nexport interface Ranking {\n  id_rankings: number;\n  id_torneo: number;\n  id_jugador: number;\n  posicion: number;\n  partidas_ganadas: number;\n  partidas_perdidas: number;\n  nombre_jugador?: string;\n  nombre_torneo?: string;\n}\n\n// Funciones para interactuar con la API\nexport const getPlayers = async (): Promise<Player[]> => {\n  try {\n    const response = await api.get('/players');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener jugadores:', error);\n    throw error;\n  }\n};\n\nexport const addPlayer = async (name: string): Promise<Player> => {\n  try {\n    const response = await api.post('/players', { name });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar jugador:', error);\n    throw error;\n  }\n};\n\nexport const addMatch = async (\n  player1Id: number,\n  player2Id: number,\n  player1Result: string,\n  player2Result: string\n): Promise<Match> => {\n  try {\n    const requestBody = {\n      player1_id: player1Id,\n      player2_id: player2Id,\n      player1_result: player1Result,\n      player2_result: player2Result\n    };\n\n    console.log('🚀 Iniciando solicitud POST a /matches');\n    console.log('📦 Datos a enviar:', requestBody);\n    console.log('🔧 Configuración de la solicitud:', {\n      url: api.defaults.baseURL + '/matches',\n      headers: api.defaults.headers\n    });\n\n    const response = await api.post('/matches', requestBody);\n    console.log('✅ Respuesta del servidor:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error al agregar partida:', error);\n    if (axios.isAxiosError(error)) {\n      console.error('Detalles del error:', {\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data,\n        config: {\n          url: error.config?.url,\n          method: error.config?.method,\n          headers: error.config?.headers,\n          baseURL: error.config?.baseURL\n        }\n      });\n    }\n    throw error;\n  }\n};\n\nexport const getMatches = async (): Promise<Match[]> => {\n  try {\n    const response = await api.get('/matches');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener partidas:', error);\n    throw error;\n  }\n};\n\nexport const deletePlayer = async (id: number): Promise<void> => {\n  try {\n    console.log('🚀 Iniciando solicitud DELETE a:', `/players/${id}`);\n    await api.delete(`/players/${id}`);\n    console.log('✅ Jugador eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar jugador:', error);\n    throw error;\n  }\n};\n\nexport const deleteMatch = async (id: number): Promise<void> => {\n  try {\n    await api.post(`/matches/${id}/delete`);\n    console.log('✅ Partida eliminada correctamente');\n  } catch (error) {\n    console.error('Error al eliminar partida:', error);\n    throw error;\n  }\n};\n\n// Funciones para torneos\nexport const getTournaments = async (): Promise<Tournament[]> => {\n  try {\n    const response = await api.get('/torneos');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneos:', error);\n    throw error;\n  }\n};\n\nexport const getTournament = async (id: number): Promise<Tournament> => {\n  try {\n    const response = await api.get(`/torneos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener torneo:', error);\n    throw error;\n  }\n};\n\nexport const addTournament = async (tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> => {\n  try {\n    const response = await api.post('/torneos', tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear torneo:', error);\n    throw error;\n  }\n};\n\nexport const updateTournament = async (id: number, tournament: Partial<Tournament>): Promise<Tournament> => {\n  try {\n    const response = await api.put(`/torneos/${id}`, tournament);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar torneo:', error);\n    throw error;\n  }\n};\n\nexport const deleteTournament = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/torneos/${id}`);\n    console.log('✅ Torneo eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar torneo:', error);\n    throw error;\n  }\n};\n\n// Funciones para rankings\nexport const getTournamentRankings = async (tournamentId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/torneo/${tournamentId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del torneo:', error);\n    throw error;\n  }\n};\n\nexport const getPlayerRankings = async (playerId: number): Promise<Ranking[]> => {\n  try {\n    const response = await api.get(`/rankings/jugador/${playerId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener rankings del jugador:', error);\n    throw error;\n  }\n};\n\nexport const addRanking = async (ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> => {\n  try {\n    const response = await api.post('/rankings', ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear ranking:', error);\n    throw error;\n  }\n};\n\nexport const updateRanking = async (id: number, ranking: Partial<Ranking>): Promise<Ranking> => {\n  try {\n    const response = await api.put(`/rankings/${id}`, ranking);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar ranking:', error);\n    throw error;\n  }\n};\n\nexport const deleteRanking = async (id: number): Promise<void> => {\n  try {\n    await api.delete(`/rankings/${id}`);\n    console.log('✅ Ranking eliminado correctamente');\n  } catch (error) {\n    console.error('Error al eliminar ranking:', error);\n    throw error;\n  }\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MD3Theme } from 'react-native-paper';\nimport { CombinedDefaultTheme } from '../theme';\nimport { API_URL } from '../api/api';\nimport { authService } from '../api/authService';\n\ninterface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\ninterface Match {\n  id: number;\n  player1: Player;\n  player2: Player;\n  winner?: Player;\n  date: Date;\n  comments: Comment[];\n}\n\ninterface Tournament {\n  id: number;\n  name: string;\n  description: string;\n  startDate: Date;\n  maxPlayers: number;\n  location: string;\n  players: Player[];\n  matches: Match[];\n  status: 'pending' | 'in_progress' | 'completed';\n}\n\ninterface Comment {\n  id: number;\n  matchId: number;\n  userId: number;\n  text: string;\n  timestamp: Date;\n}\n\nexport interface AppContextType {\n  theme: MD3Theme;\n  isOfflineMode: boolean;\n  soundEnabled: boolean;\n  toggleOfflineMode: () => void;\n  toggleSound: () => void;\n  players: Player[];\n  matches: Match[];\n  tournaments: Tournament[];\n  comments: Comment[];\n  addPlayer: (player: Omit<Player, 'id' | 'stats'>) => Promise<void>;\n  updatePlayer: (player: Player) => Promise<void>;\n  addLocalMatch: (match: Omit<Match, 'id' | 'comments'>) => Promise<Match>;\n  addComment: (matchId: number, text: string) => Promise<void>;\n  createTournament: (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => Promise<void>;\n  updateTournament: (tournament: Tournament) => Promise<void>;\n  isAuthenticated: boolean;\n  setIsAuthenticated: (value: boolean) => void;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      const storedPlayers = await AsyncStorage.getItem('players');\n      const storedMatches = await AsyncStorage.getItem('matches');\n      const storedTournaments = await AsyncStorage.getItem('tournaments');\n      const storedComments = await AsyncStorage.getItem('comments');\n      const storedSoundEnabled = await AsyncStorage.getItem('soundEnabled');\n\n      if (storedPlayers) setPlayers(JSON.parse(storedPlayers));\n      if (storedMatches) setMatches(JSON.parse(storedMatches));\n      if (storedTournaments) setTournaments(JSON.parse(storedTournaments));\n      if (storedComments) setComments(JSON.parse(storedComments));\n      if (storedSoundEnabled !== null) setSoundEnabled(JSON.parse(storedSoundEnabled));\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n\n  const saveData = async () => {\n    try {\n      await AsyncStorage.setItem('players', JSON.stringify(players));\n      await AsyncStorage.setItem('matches', JSON.stringify(matches));\n      await AsyncStorage.setItem('tournaments', JSON.stringify(tournaments));\n      await AsyncStorage.setItem('comments', JSON.stringify(comments));\n      await AsyncStorage.setItem('soundEnabled', JSON.stringify(soundEnabled));\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n\n  const toggleOfflineMode = () => setIsOfflineMode(!isOfflineMode);\n  const toggleSound = async () => {\n    const newSoundEnabled = !soundEnabled;\n    setSoundEnabled(newSoundEnabled);\n    await AsyncStorage.setItem('soundEnabled', JSON.stringify(newSoundEnabled));\n  };\n\n  const addPlayer = async (player: Omit<Player, 'id' | 'stats'>) => {\n    const newPlayer: Player = {\n      ...player,\n      id: players.length + 1,\n      stats_wins: 0,\n      stats_losses: 0,\n      stats_draws: 0,\n    };\n    setPlayers([...players, newPlayer]);\n    await saveData();\n  };\n\n  const updatePlayer = async (player: Player) => {\n    setPlayers(players.map(p => p.id === player.id ? player : p));\n    await saveData();\n  };\n\n  const addLocalMatch = async (match: Omit<Match, 'id' | 'comments'>) => {\n    try {\n      // Crear la nueva partida\n      const newMatch: Match = {\n        ...match,\n        id: matches.length + 1,\n        comments: [],\n      };\n\n      // Actualizar las estadísticas de los jugadores\n      const updatedPlayers = players.map(player => {\n        if (player.id === match.player1.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        if (player.id === match.player2.id) {\n          return {\n            ...player,\n            victories: match.winner?.id === player.id ? player.victories + 1 : player.victories,\n            stats_wins: match.winner?.id === player.id ? player.stats_wins + 1 : player.stats_wins,\n            stats_losses: match.winner?.id !== player.id ? player.stats_losses + 1 : player.stats_losses,\n          };\n        }\n        return player;\n      });\n\n      // Actualizar el estado\n      setMatches(prevMatches => [...prevMatches, newMatch]);\n      setPlayers(updatedPlayers);\n\n      // Guardar los cambios\n      await Promise.all([\n        AsyncStorage.setItem('matches', JSON.stringify([...matches, newMatch])),\n        AsyncStorage.setItem('players', JSON.stringify(updatedPlayers))\n      ]);\n\n      // Recargar los datos del backend\n      try {\n        const [updatedMatches, updatedPlayers] = await Promise.all([\n          fetch(`${API_URL}/matches`).then(res => res.json()),\n          fetch(`${API_URL}/players`).then(res => res.json())\n        ]);\n\n        setMatches(updatedMatches);\n        setPlayers(updatedPlayers);\n      } catch (error) {\n        console.error('Error al recargar datos del backend:', error);\n      }\n\n      return newMatch;\n    } catch (error) {\n      console.error('Error al agregar partida:', error);\n      throw error;\n    }\n  };\n\n  const addComment = async (matchId: number, text: string) => {\n    const newComment: Comment = {\n      id: comments.length + 1,\n      matchId,\n      userId: 1, // TODO: Implementar sistema de usuarios\n      text,\n      timestamp: new Date(),\n    };\n    setComments([...comments, newComment]);\n    await saveData();\n  };\n\n  const createTournament = async (tournament: Omit<Tournament, 'id' | 'players' | 'matches' | 'status'>) => {\n    const newTournament: Tournament = {\n      ...tournament,\n      id: tournaments.length + 1,\n      players: [],\n      matches: [],\n      status: 'pending',\n    };\n    setTournaments([...tournaments, newTournament]);\n    await saveData();\n  };\n\n  const updateTournament = async (tournament: Tournament) => {\n    setTournaments(tournaments.map(t => t.id === tournament.id ? tournament : t));\n    await saveData();\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        theme: CombinedDefaultTheme,\n        isOfflineMode,\n        soundEnabled,\n        toggleOfflineMode,\n        toggleSound,\n        players,\n        matches,\n        tournaments,\n        comments,\n        addPlayer,\n        updatePlayer,\n        addLocalMatch,\n        addComment,\n        createTournament,\n        updateTournament,\n        isAuthenticated,\n        setIsAuthenticated,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}; ","import { api } from './api';\nimport { authService } from './authService';\nimport axios from 'axios';\n\nexport interface Player {\n  id: number;\n  name: string;\n  victories: number;\n  stats_wins: number;\n  stats_losses: number;\n  stats_draws: number;\n}\n\nexport const playerService = {\n  getPlayers: async (): Promise<Player[]> => {\n    try {\n      console.log('🚀 Iniciando solicitud GET a /players');\n      console.log('📡 URL base:', api.defaults.baseURL);\n      const response = await api.get('/players');\n      console.log('✅ Respuesta del servidor:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('❌ Error al obtener jugadores:', error);\n      if (axios.isAxiosError(error)) {\n        console.error('Detalles del error:', {\n          status: error.response?.status,\n          statusText: error.response?.statusText,\n          data: error.response?.data,\n          config: {\n            url: error.config?.url,\n            method: error.config?.method,\n            headers: error.config?.headers\n          }\n        });\n      }\n      throw error;\n    }\n  },\n\n  createPlayer: async (player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.post('/players', player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear jugador:', error);\n      throw error;\n    }\n  },\n\n  updatePlayer: async (id: number, player: { name: string }): Promise<Player> => {\n    try {\n      const response = await api.put(`/players/${id}`, player);\n      return response.data;\n    } catch (error) {\n      console.error('Error al actualizar jugador:', error);\n      throw error;\n    }\n  },\n\n  deletePlayer: async (id: number): Promise<void> => {\n    try {\n      await api.delete(`/players/${id}`);\n    } catch (error) {\n      console.error('Error al eliminar jugador:', error);\n      throw error;\n    }\n  },\n\n  addVictory: async (id: number): Promise<void> => {\n    try {\n      await api.post(`/players/${id}/victory`);\n    } catch (error) {\n      console.error('Error al registrar victoria:', error);\n      throw error;\n    }\n  }\n}; ","import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, ScrollView, Image, ViewStyle, TextStyle, Alert } from 'react-native';\nimport { Button, Text, Surface, useTheme, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { useApp } from '../context/AppContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { RootStackParamList } from '../navigation/types';\n\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'MainTabs'>;\n\nconst HomeScreen = () => {\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n  const theme = useTheme();\n  const [topPlayers, setTopPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const dynamicStyles = StyleSheet.create({\n    goldPlayerName: {\n      fontSize: 16,\n      color: theme.colors.primary,\n    },\n    victoriesContainer: {\n      flexDirection: 'row' as const,\n      alignItems: 'center' as const,\n      gap: 4,\n      backgroundColor: theme.colors.surface,\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n      borderRadius: 12,\n    },\n  });\n\n    const fetchTopPlayers = async () => {\n      try {\n      const players = await playerService.getPlayers();\n      // Ordenar por victorias y tomar los primeros 3\n      const sortedPlayers = [...players].sort((a, b) => b.victories - a.victories).slice(0, 3);\n        setTopPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('Error al obtener top jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    } finally {\n      setLoading(false);\n      }\n    };\n\n  useEffect(() => {\n    fetchTopPlayers();\n  }, []);\n\n  const handleAddMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>\n      <View style={styles.container}>\n        <Surface style={styles.header} elevation={2}>\n          <View style={styles.headerContent}>\n            <MaterialCommunityIcons \n              name=\"table-tennis\" \n              size={60}\n              color={theme.colors.primary}\n            />\n            <Text variant=\"titleLarge\" style={styles.title}>\n              Bienvenido a Ping Pong App\n            </Text>\n          </View>\n        </Surface>\n\n        <Surface style={styles.podiumContainer} elevation={2}>\n          <View style={styles.podiumHeader}>\n            <MaterialCommunityIcons name=\"trophy\" size={32} color={theme.colors.primary} />\n            <Text variant=\"titleLarge\" style={styles.podiumTitle}>\n              Top Jugadores\n            </Text>\n          </View>\n          <View style={styles.podium}>\n            {topPlayers.length >= 2 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.silverPosition,\n                  {\n                    height: 120,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#E8E8E8' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={32} color=\"#C0C0C0\" />\n                  <Text style={styles.medalText}>2°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[1].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[1].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 1 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.goldPosition,\n                  {\n                    height: 150,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFF7E6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={40} color=\"#FFD700\" />\n                  <Text style={[styles.medalText, { color: '#B8860B' }]}>1°</Text>\n                </View>\n                <Text style={[styles.playerName, dynamicStyles.goldPlayerName]}>{topPlayers[0].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[0].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n\n            {topPlayers.length >= 3 && (\n              <Surface\n                style={[\n                  styles.podiumPosition,\n                  styles.bronzePosition,\n                  {\n                    height: 100,\n                    backgroundColor: theme.colors.surfaceVariant,\n                  },\n                ]}\n                elevation={3}\n              >\n                <View style={[styles.medalContainer, { backgroundColor: '#FFE5D6' }]}>\n                  <MaterialCommunityIcons name=\"medal\" size={28} color=\"#CD7F32\" />\n                  <Text style={[styles.medalText, { color: '#8B4513' }]}>3°</Text>\n                </View>\n                <Text style={styles.playerName}>{topPlayers[2].name}</Text>\n                <View style={dynamicStyles.victoriesContainer}>\n                  <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.primary} />\n                  <Text style={styles.victories}>{topPlayers[2].victories} victorias</Text>\n                </View>\n              </Surface>\n            )}\n          </View>\n        </Surface>\n\n        <View style={styles.buttonsContainer}>\n          <Button\n            mode=\"contained\"\n            onPress={handleAddMatch}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n            )}\n          >\n            Nuevo Partido\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'MatchesTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"clock-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Partidos\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'PlayersTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"account-group-outline\" size={size} color={color} />\n            )}\n          >\n            Gestionar Jugadores\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('MainTabs', { screen: 'RankingTab' })}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"trophy-outline\" size={size} color={color} />\n            )}\n          >\n            Ver Ranking\n          </Button>\n\n          <Button\n            mode=\"contained-tonal\"\n            onPress={() => navigation.navigate('Tournament')}\n            style={styles.button}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"tournament\" size={size} color={color} />\n            )}\n          >\n            Torneo Rápido\n          </Button>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n  },\n  header: {\n    padding: 16,\n    backgroundColor: '#fff',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  headerContent: {\n    alignItems: 'center',\n  },\n  title: {\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  podiumContainer: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  podiumHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 24,\n    gap: 8,\n  },\n  podiumTitle: {\n    fontWeight: 'bold',\n  },\n  podium: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    height: 170,\n    gap: 8,\n  },\n  podiumPosition: {\n    width: 100,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 12,\n    padding: 12,\n    paddingTop: 8,\n  },\n  goldPosition: {\n    zIndex: 3,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  silverPosition: {\n    zIndex: 2,\n    marginRight: -4,\n  },\n  bronzePosition: {\n    zIndex: 1,\n    marginLeft: -4,\n  },\n  medalContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  medalText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: -4,\n  },\n  playerName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  victories: {\n    fontSize: 12,\n    opacity: 0.8,\n  },\n  buttonsContainer: {\n    padding: 16,\n    gap: 12,\n  },\n  button: {\n    marginVertical: 8,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginBottom: 10,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default HomeScreen; ","// src/screens/PlayersScreen.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, FlatList, Alert, ViewStyle, TextStyle, Animated } from 'react-native';\nimport { Text, Button, Surface, TextInput, useTheme, Portal, Modal, ActivityIndicator, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackParamList } from '../navigation/types';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { playerService, Player } from '../api/playerService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype PlayersScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\ninterface Styles {\n  container: ViewStyle;\n  header: ViewStyle;\n  title: TextStyle;\n  playerCard: ViewStyle;\n  playerInfo: ViewStyle;\n  playerDetails: ViewStyle;\n  actions: ViewStyle;\n  loadingContainer: ViewStyle;\n  modalContainer: ViewStyle;\n  modalContent: ViewStyle;\n  modalTitle: TextStyle;\n  modalText: TextStyle;\n  modalButtons: ViewStyle;\n  modalButton: ViewStyle;\n  input: ViewStyle;\n  content: ViewStyle;\n  addPlayerSection: ViewStyle;\n  addButton: ViewStyle;\n  topPlayerCard: ViewStyle;\n  avatar: ViewStyle;\n  nameContainer: ViewStyle;\n  crownIcon: ViewStyle;\n  victoriesContainer: ViewStyle;\n  victoriesText: TextStyle;\n  emptyContainer: ViewStyle;\n  emptyText: TextStyle;\n}\n\nconst styles = StyleSheet.create<Styles>({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    marginTop: 8,\n  },\n  content: {\n    flex: 1,\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#fff',\n  },\n  playerCard: {\n    margin: 8,\n    padding: 16,\n    borderRadius: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  playerDetails: {\n    marginLeft: 16,\n  },\n  addPlayerSection: {\n    marginTop: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  input: {\n    marginBottom: 20,\n  },\n  addButton: {\n    marginTop: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 8,\n    width: '80%',\n  },\n  modalTitle: {\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 5,\n  },\n  topPlayerCard: {\n    borderColor: '#FFD700',\n    borderWidth: 2,\n  },\n  avatar: {\n    marginRight: 12,\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  crownIcon: {\n    marginLeft: 8,\n  },\n  victoriesContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  victoriesText: {\n    marginLeft: 4,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    padding: 32,\n  },\n  emptyText: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n});\n\nconst PlayersScreen = () => {\n  const navigation = useNavigation<PlayersScreenNavigationProp>();\n  const theme = useTheme();\n  const [modalScale] = useState(new Animated.Value(0));\n\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [newName, setNewName] = useState('');\n  const [editingPlayer, setEditingPlayer] = useState<Player | null>(null);\n  const [editName, setEditName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudo cargar la lista de jugadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addPlayer = async () => {\n    if (!newName.trim()) {\n      Alert.alert('Campo vacío', 'Por favor ingresa un nombre');\n      return;\n    }\n\n    try {\n      await playerService.createPlayer({ name: newName });\n      setNewName('');\n      fetchPlayers();\n    } catch (error) {\n      console.error('Error al agregar jugador:', error);\n      Alert.alert('Error', 'No se pudo agregar el jugador');\n    }\n  };\n\n  const handleUpdatePlayer = async () => {\n    if (!editingPlayer || !editName.trim()) return;\n\n    try {\n      await playerService.updatePlayer(editingPlayer.id, { name: editName });\n      Alert.alert('Éxito', 'Jugador actualizado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo actualizar el jugador');\n    } finally {\n      setEditingPlayer(null);\n      setEditName('');\n    }\n  };\n\n  const handleDelete = async (player: Player) => {\n    setSelectedPlayer(player);\n    setDeleteModalVisible(true);\n  };\n\n  const confirmDelete = async () => {\n    if (!selectedPlayer) return;\n    \n    try {\n      await playerService.deletePlayer(selectedPlayer.id);\n      Alert.alert('Éxito', 'Jugador eliminado correctamente');\n      fetchPlayers();\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar el jugador');\n    } finally {\n      setDeleteModalVisible(false);\n      setSelectedPlayer(null);\n    }\n  };\n\n  const openModal = () => {\n    Animated.spring(modalScale, {\n      toValue: 1,\n      useNativeDriver: true,\n      tension: 50,\n      friction: 7,\n    }).start();\n  };\n\n  const closeModal = () => {\n    Animated.timing(modalScale, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start(() => setEditingPlayer(null));\n  };\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (editingPlayer) {\n      openModal();\n    }\n  }, [editingPlayer]);\n\n  const getTopPlayer = () => {\n    if (players.length === 0) return null;\n    return players.reduce((prev, current) => \n      (prev.victories > current.victories) ? prev : current\n    );\n  };\n\n  const renderPlayerCard = ({ item }: { item: Player }) => {\n    const isTopPlayer = getTopPlayer()?.id === item.id;\n    \n    return (\n      <Surface \n        style={[\n          styles.playerCard,\n          isTopPlayer && styles.topPlayerCard\n        ]} \n        elevation={isTopPlayer ? 4 : 1}\n      >\n        <View style={styles.playerInfo}>\n          <Avatar.Text \n            size={40} \n            label={item.name.substring(0, 2).toUpperCase()}\n            style={[\n              styles.avatar,\n              isTopPlayer && { backgroundColor: theme.colors.primary }\n            ]}\n          />\n          <View style={styles.playerDetails}>\n            <View style={styles.nameContainer}>\n              <Text variant=\"titleMedium\">{item.name}</Text>\n              {isTopPlayer && (\n                <MaterialCommunityIcons \n                  name=\"crown\" \n                  size={20} \n                  color={theme.colors.primary} \n                  style={styles.crownIcon}\n                />\n              )}\n            </View>\n            <View style={styles.victoriesContainer}>\n              <MaterialCommunityIcons \n                name=\"trophy\" \n                size={16} \n                color={theme.colors.primary} \n              />\n              <Text variant=\"bodySmall\" style={styles.victoriesText}>\n                {item.victories} victorias\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.actions}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => {\n              setEditingPlayer(item);\n              setEditName(item.name);\n            }}\n            icon={() => <MaterialCommunityIcons name=\"pencil\" size={24} color={theme.colors.primary} />}\n            loading={editingPlayer?.id === item.id}\n          >\n            Editar\n          </Button>\n          <Button\n            mode=\"outlined\"\n            onPress={() => handleDelete(item)}\n            icon={() => <MaterialCommunityIcons name=\"delete\" size={24} color={theme.colors.error} />}\n            textColor={theme.colors.error}\n            loading={selectedPlayer?.id === item.id && deleteModalVisible}\n          >\n            Eliminar\n          </Button>\n        </View>\n      </Surface>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"account-group\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Jugadores\n        </Text>\n      </Surface>\n\n      <Surface style={styles.content} elevation={1}>\n        <FlatList\n          data={players}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderPlayerCard}\n          ListEmptyComponent={\n            <View style={styles.emptyContainer}>\n              <MaterialCommunityIcons name=\"account-off\" size={48} color={theme.colors.outline} />\n              <Text variant=\"titleMedium\" style={styles.emptyText}>\n                No hay jugadores registrados\n              </Text>\n            </View>\n          }\n        />\n\n        <Surface style={styles.addPlayerSection} elevation={2}>\n          <TextInput\n            mode=\"outlined\"\n            label=\"Nombre del jugador\"\n            value={newName}\n            onChangeText={setNewName}\n            style={styles.input}\n            right={newName ? (\n              <TextInput.Icon \n                icon={({ size, color }) => (\n                  <MaterialCommunityIcons \n                    name=\"close\" \n                    size={size} \n                    color={color} \n                  />\n                )} \n                onPress={() => setNewName('')} \n              />\n            ) : undefined}\n          />\n          <Button\n            mode=\"contained\"\n            onPress={addPlayer}\n            style={styles.addButton}\n            icon={() => <MaterialCommunityIcons name=\"account-plus\" size={24} color={theme.colors.onPrimary} />}\n          >\n            Agregar Jugador\n          </Button>\n        </Surface>\n      </Surface>\n\n      <Portal>\n        <Modal\n          visible={editingPlayer !== null}\n          onDismiss={closeModal}\n          style={styles.modalContainer}\n        >\n          <Animated.View \n            style={[\n              styles.modalContent,\n              { transform: [{ scale: modalScale }] }\n            ]}\n          >\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              Editar Jugador\n            </Text>\n            <TextInput\n              mode=\"outlined\"\n              label=\"Nombre\"\n              value={editName}\n              onChangeText={setEditName}\n              style={styles.input}\n              left={(\n                <TextInput.Icon \n                  icon={({ size, color }) => (\n                    <MaterialCommunityIcons \n                      name=\"account\" \n                      size={size} \n                      color={color} \n                    />\n                  )} \n                />\n              )}\n            />\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={closeModal}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={handleUpdatePlayer}\n                style={styles.modalButton}\n                loading={loading}\n              >\n                Guardar\n              </Button>\n            </View>\n          </Animated.View>\n        </Modal>\n      </Portal>\n\n      <Portal>\n        <Modal\n          visible={deleteModalVisible}\n          onDismiss={() => setDeleteModalVisible(false)}\n          style={styles.modalContainer}\n        >\n          <View style={styles.modalContent}>\n            <Text variant=\"titleLarge\" style={styles.modalTitle}>\n              ¿Eliminar jugador?\n            </Text>\n            <Text variant=\"bodyMedium\" style={styles.modalText}>\n              ¿Estás seguro de que deseas eliminar a {selectedPlayer?.name}?\n            </Text>\n            <View style={styles.modalButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => setDeleteModalVisible(false)}\n                style={styles.modalButton}\n              >\n                Cancelar\n              </Button>\n              <Button\n                mode=\"contained\"\n                onPress={confirmDelete}\n                buttonColor={theme.colors.error}\n                style={styles.modalButton}\n              >\n                Eliminar\n              </Button>\n            </View>\n          </View>\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\nexport default PlayersScreen;\n","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Tournament {\r\n  id_torneo: number;\r\n  nombre: string;\r\n  fecha_inicio: string;\r\n  fecha_fin: string;\r\n  estado: string;\r\n}\r\n\r\nclass TournamentService {\r\n  async getAllTournaments(): Promise<Tournament[]> {\r\n    try {\r\n      console.log('🚀 Iniciando solicitud GET a /torneos');\r\n      console.log('📡 URL base:', api.defaults.baseURL);\r\n      const response = await api.get('/torneos');\r\n      console.log('✅ Respuesta del servidor:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener torneos:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getTournament(id: number): Promise<Tournament> {\r\n    try {\r\n      const response = await api.get(`/torneos/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createTournament(tournament: Omit<Tournament, 'id_torneo'>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.post('/torneos', tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateTournament(id: number, tournament: Partial<Tournament>): Promise<Tournament> {\r\n    try {\r\n      const response = await api.put(`/torneos/${id}`, tournament);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteTournament(id: number): Promise<void> {\r\n    try {\r\n      await api.delete(`/torneos/${id}`);\r\n    } catch (error) {\r\n      console.error('Error al eliminar torneo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const tournamentService = new TournamentService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert } from 'react-native';\nimport { tournamentService } from '../api/tournamentService';\nimport { Tournament } from '../api/tournamentService';\n\nexport default function TournamentScreen() {\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [newTournament, setNewTournament] = useState({\n    nombre: '',\n    fecha_inicio: '',\n    fecha_fin: '',\n    estado: 'activo'\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n  }, []);\n\n  const fetchTournaments = async () => {\n    try {\n      setLoading(true);\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateTournament = async () => {\n    try {\n      if (!newTournament.nombre || !newTournament.fecha_inicio || !newTournament.fecha_fin) {\n        Alert.alert('Error', 'Por favor completa todos los campos');\n        return;\n      }\n\n      await tournamentService.createTournament(newTournament);\n      setModalVisible(false);\n      setNewTournament({\n        nombre: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: 'activo'\n      });\n      fetchTournaments();\n      Alert.alert('Éxito', 'Torneo creado correctamente');\n    } catch (error) {\n      console.error('Error al crear torneo:', error);\n      Alert.alert('Error', 'No se pudo crear el torneo');\n    }\n  };\n\n  const renderTournamentCard = ({ item }: { item: Tournament }) => (\n    <View style={styles.card}>\n      <Text style={styles.tournamentName}>{item.nombre}</Text>\n      <View style={styles.datesContainer}>\n        <Text style={styles.date}>Inicio: {new Date(item.fecha_inicio).toLocaleDateString()}</Text>\n        <Text style={styles.date}>Fin: {new Date(item.fecha_fin).toLocaleDateString()}</Text>\n      </View>\n      <View style={[styles.statusBadge, { backgroundColor: item.estado === 'activo' ? '#4CAF50' : '#9E9E9E' }]}>\n        <Text style={styles.statusText}>{item.estado}</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Torneos</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Crear Torneo</Text>\n        </TouchableOpacity>\n      </View>\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando torneos...</Text>\n      ) : tournaments.length === 0 ? (\n        <Text style={styles.emptyText}>No hay torneos disponibles</Text>\n      ) : (\n        <FlatList\n          data={tournaments}\n          renderItem={renderTournamentCard}\n          keyExtractor={(item) => item.id_torneo.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Crear Nuevo Torneo</Text>\n            \n            <TextInput\n              style={styles.input}\n              placeholder=\"Nombre del torneo\"\n              value={newTournament.nombre}\n              onChangeText={(text) => setNewTournament({...newTournament, nombre: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de inicio (YYYY-MM-DD)\"\n              value={newTournament.fecha_inicio}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_inicio: text})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Fecha de fin (YYYY-MM-DD)\"\n              value={newTournament.fecha_fin}\n              onChangeText={(text) => setNewTournament({...newTournament, fecha_fin: text})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateTournament}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  tournamentName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  datesContainer: {\n    marginBottom: 8,\n  },\n  date: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  statusText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import { api } from './api';\r\nimport axios from 'axios';\r\n\r\nexport interface Ranking {\r\n  id_rankings: number;\r\n  id_torneo: number;\r\n  id_jugador: number;\r\n  posicion: number;\r\n  partidas_ganadas: number;\r\n  partidas_perdidas: number;\r\n  nombre_jugador?: string; // Para cuando necesitemos mostrar el nombre del jugador\r\n  nombre_torneo?: string; // Para cuando necesitemos mostrar el nombre del torneo\r\n  total_partidas?: number;\r\n  porcentaje_victorias?: number;\r\n}\r\n\r\nclass RankingService {\r\n  async getTournamentRankings(tournamentId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para torneo:', tournamentId);\r\n      const response = await api.get(`/rankings/torneo/${tournamentId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del torneo:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPlayerRankings(playerId: number): Promise<Ranking[]> {\r\n    try {\r\n      console.log('🚀 Obteniendo rankings para jugador:', playerId);\r\n      const response = await api.get(`/rankings/jugador/${playerId}`);\r\n      console.log('✅ Rankings obtenidos:', response.data.length);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al obtener rankings del jugador:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createRanking(ranking: Omit<Ranking, 'id_rankings'>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Creando nuevo ranking:', ranking);\r\n      const response = await api.post('/rankings', ranking);\r\n      console.log('✅ Ranking creado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al crear ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateRanking(id: number, ranking: Partial<Ranking>): Promise<Ranking> {\r\n    try {\r\n      console.log('🚀 Actualizando ranking:', { id, ranking });\r\n      const response = await api.put(`/rankings/${id}`, ranking);\r\n      console.log('✅ Ranking actualizado:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Error al actualizar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteRanking(id: number): Promise<void> {\r\n    try {\r\n      console.log('🚀 Eliminando ranking:', id);\r\n      await api.delete(`/rankings/${id}`);\r\n      console.log('✅ Ranking eliminado correctamente');\r\n    } catch (error) {\r\n      console.error('❌ Error al eliminar ranking:', error);\r\n      if (axios.isAxiosError(error)) {\r\n        console.error('Detalles del error:', {\r\n          status: error.response?.status,\r\n          statusText: error.response?.statusText,\r\n          data: error.response?.data,\r\n          config: {\r\n            url: error.config?.url,\r\n            method: error.config?.method,\r\n            headers: error.config?.headers\r\n          }\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const rankingService = new RankingService(); ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Modal, TextInput, Alert, ScrollView } from 'react-native';\nimport { rankingService, Ranking } from '../api/rankingService';\nimport { tournamentService, Tournament } from '../api/tournamentService';\nimport { playerService } from '../api/playerService';\n\nexport default function RankingScreen() {\n  const [rankings, setRankings] = useState<Ranking[]>([]);\n  const [tournaments, setTournaments] = useState<Tournament[]>([]);\n  const [players, setPlayers] = useState<Array<{ id: number; name: string }>>([]);\n  const [selectedTournament, setSelectedTournament] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [showTournamentSelector, setShowTournamentSelector] = useState(false);\n  const [showPlayerSelector, setShowPlayerSelector] = useState(false);\n  const [newRanking, setNewRanking] = useState({\n    id_torneo: 0,\n    id_jugador: 0,\n    partidas_ganadas: 0,\n    partidas_perdidas: 0\n  });\n\n  useEffect(() => {\n    fetchTournaments();\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedTournament) {\n      fetchRankings(selectedTournament);\n    }\n  }, [selectedTournament]);\n\n  const fetchTournaments = async () => {\n    try {\n      const data = await tournamentService.getAllTournaments();\n      setTournaments(data);\n      if (data.length > 0) {\n        setSelectedTournament(data[0].id_torneo);\n      }\n    } catch (error) {\n      console.error('Error al obtener torneos:', error);\n      Alert.alert('Error', 'No se pudieron cargar los torneos');\n    }\n  };\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await playerService.getPlayers();\n      setPlayers(data);\n    } catch (error) {\n      console.error('Error al obtener jugadores:', error);\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n    }\n  };\n\n  const fetchRankings = async (tournamentId: number) => {\n    try {\n      setLoading(true);\n      const data = await rankingService.getTournamentRankings(tournamentId);\n      setRankings(data);\n    } catch (error) {\n      console.error('Error al obtener rankings:', error);\n      Alert.alert('Error', 'No se pudieron cargar los rankings');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateRanking = async () => {\n    try {\n      if (!newRanking.id_torneo || !newRanking.id_jugador) {\n        Alert.alert('Error', 'Por favor selecciona un torneo y un jugador');\n        return;\n      }\n\n      const rankingData = {\n        ...newRanking,\n        posicion: 0 // La posición se calculará automáticamente en el backend\n      };\n\n      await rankingService.createRanking(rankingData);\n      setModalVisible(false);\n      setNewRanking({\n        id_torneo: 0,\n        id_jugador: 0,\n        partidas_ganadas: 0,\n        partidas_perdidas: 0\n      });\n      fetchRankings(newRanking.id_torneo);\n      Alert.alert('Éxito', 'Ranking creado correctamente');\n    } catch (error) {\n      console.error('Error al crear ranking:', error);\n      Alert.alert('Error', 'No se pudo crear el ranking');\n    }\n  };\n\n  const renderRankingCard = ({ item }: { item: Ranking }) => (\n    <View style={styles.card}>\n      <View style={styles.positionContainer}>\n        <Text style={styles.position}>{item.posicion}°</Text>\n      </View>\n      <View style={styles.detailsContainer}>\n        <Text style={styles.playerName}>{item.nombre_jugador}</Text>\n        <View style={styles.statsContainer}>\n          <Text style={styles.stats}>G: {item.partidas_ganadas} | P: {item.partidas_perdidas}</Text>\n          <Text style={styles.percentage}>{item.porcentaje_victorias}% victorias</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderTournamentSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showTournamentSelector}\n      onRequestClose={() => setShowTournamentSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Torneo</Text>\n          <ScrollView style={styles.selectorList}>\n            {tournaments.map((tournament) => (\n              <TouchableOpacity\n                key={tournament.id_torneo}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setSelectedTournament(tournament.id_torneo);\n                  setShowTournamentSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{tournament.nombre}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowTournamentSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  const renderPlayerSelector = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={showPlayerSelector}\n      onRequestClose={() => setShowPlayerSelector(false)}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Seleccionar Jugador</Text>\n          <ScrollView style={styles.selectorList}>\n            {players.map((player) => (\n              <TouchableOpacity\n                key={player.id}\n                style={styles.selectorItem}\n                onPress={() => {\n                  setNewRanking({...newRanking, id_jugador: player.id});\n                  setShowPlayerSelector(false);\n                }}\n              >\n                <Text style={styles.selectorItemText}>{player.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, styles.cancelButton]}\n            onPress={() => setShowPlayerSelector(false)}\n          >\n            <Text style={styles.buttonText}>Cancelar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Rankings</Text>\n        <TouchableOpacity \n          style={styles.addButton}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.addButtonText}>Agregar Ranking</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.tournamentSelector}>\n        <Text style={styles.selectorLabel}>Seleccionar Torneo:</Text>\n        <TouchableOpacity\n          style={styles.selectorButton}\n          onPress={() => setShowTournamentSelector(true)}\n        >\n          <Text style={styles.selectorButtonText}>\n            {selectedTournament ? tournaments.find(t => t.id_torneo === selectedTournament)?.nombre : 'Seleccionar torneo'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {renderTournamentSelector()}\n      {renderPlayerSelector()}\n\n      {loading ? (\n        <Text style={styles.loadingText}>Cargando rankings...</Text>\n      ) : rankings.length === 0 ? (\n        <Text style={styles.emptyText}>No hay rankings disponibles</Text>\n      ) : (\n        <FlatList\n          data={rankings}\n          renderItem={renderRankingCard}\n          keyExtractor={(item) => item.id_rankings.toString()}\n          contentContainerStyle={styles.list}\n        />\n      )}\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Agregar Nuevo Ranking</Text>\n            \n            <Text style={styles.selectorLabel}>Torneo:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowTournamentSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_torneo ? tournaments.find(t => t.id_torneo === newRanking.id_torneo)?.nombre : 'Seleccionar torneo'}\n              </Text>\n            </TouchableOpacity>\n\n            <Text style={styles.selectorLabel}>Jugador:</Text>\n            <TouchableOpacity\n              style={styles.selectorButton}\n              onPress={() => {\n                setModalVisible(false);\n                setShowPlayerSelector(true);\n              }}\n            >\n              <Text style={styles.selectorButtonText}>\n                {newRanking.id_jugador ? players.find(p => p.id === newRanking.id_jugador)?.name : 'Seleccionar jugador'}\n              </Text>\n            </TouchableOpacity>\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas ganadas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_ganadas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_ganadas: parseInt(text) || 0})}\n            />\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Partidas perdidas\"\n              keyboardType=\"numeric\"\n              value={newRanking.partidas_perdidas.toString()}\n              onChangeText={(text) => setNewRanking({...newRanking, partidas_perdidas: parseInt(text) || 0})}\n            />\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.buttonText}>Cancelar</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, styles.createButton]}\n                onPress={handleCreateRanking}\n              >\n                <Text style={styles.buttonText}>Crear</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  addButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 8,\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  tournamentSelector: {\n    backgroundColor: '#fff',\n    padding: 16,\n    marginBottom: 8,\n  },\n  selectorLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 8,\n  },\n  selectorButton: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  selectorButtonText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  selectorList: {\n    maxHeight: 300,\n  },\n  selectorItem: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ddd',\n  },\n  selectorItemText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    elevation: 2,\n  },\n  positionContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#2196F3',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  position: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  detailsContainer: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  stats: {\n    fontSize: 14,\n    color: '#666',\n  },\n  percentage: {\n    fontSize: 14,\n    color: '#4CAF50',\n    fontWeight: 'bold',\n  },\n  loadingText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n    color: '#666',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: '#9E9E9E',\n  },\n  createButton: {\n    backgroundColor: '#2196F3',\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Surface, Switch, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useApp } from '../context/AppContext';\n\nconst SettingsScreen = () => {\n  const { theme, isOfflineMode, soundEnabled, toggleOfflineMode, toggleSound } = useApp();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Surface style={styles.header} elevation={2}>\n        <MaterialCommunityIcons name=\"cog\" size={48} color={theme.colors.primary} />\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          Ajustes\n        </Text>\n      </Surface>\n\n      <Surface style={styles.section} elevation={1}>\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"wifi-off\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Modo sin conexión</Text>\n            <Text variant=\"bodySmall\">Usar datos locales sin conexión a internet</Text>\n          </View>\n          <Switch value={isOfflineMode} onValueChange={toggleOfflineMode} />\n        </View>\n\n        <View style={styles.settingItem}>\n          <MaterialCommunityIcons name=\"volume-high\" size={24} color={theme.colors.primary} />\n          <View style={styles.settingText}>\n            <Text variant=\"titleMedium\">Sonido</Text>\n            <Text variant=\"bodySmall\">Activar/desactivar efectos de sonido</Text>\n          </View>\n          <Switch value={soundEnabled} onValueChange={toggleSound} />\n        </View>\n      </Surface>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 24,\n    alignItems: 'center',\n    marginHorizontal: 16,\n    marginTop: 16,\n    borderRadius: 12,\n  },\n  title: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  section: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n  },\n  settingText: {\n    flex: 1,\n    marginLeft: 16,\n  }\n}); \n\nexport default SettingsScreen; ","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { Text, Button, TextInput, Surface, ActivityIndicator } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getPlayers, addMatch } from '../api/api';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\n\ntype AddMatchScreenNavigationProp = StackNavigationProp<RootStackParamList, 'AddMatch'>;\n\ninterface Player {\n  id: number;\n  name: string;\n}\n\nconst AddMatchScreen = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlayer1, setSelectedPlayer1] = useState<number | null>(null);\n  const [selectedPlayer2, setSelectedPlayer2] = useState<number | null>(null);\n  const [player1Result, setPlayer1Result] = useState<'win' | 'lose'>('win');\n  const [player2Result, setPlayer2Result] = useState<'win' | 'lose'>('lose');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const navigation = useNavigation<AddMatchScreenNavigationProp>();\n  const theme = useTheme();\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const fetchPlayers = async () => {\n    try {\n      const data = await getPlayers();\n      setPlayers(data);\n      setLoading(false);\n    } catch (error) {\n      Alert.alert('Error', 'No se pudieron cargar los jugadores');\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedPlayer1 || !selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    if (selectedPlayer1 === selectedPlayer2) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus('idle');\n\n    try {\n      await addMatch(\n        selectedPlayer1,\n        selectedPlayer2,\n        player1Result,\n        player2Result\n      );\n\n      setSubmitStatus('success');\n      setTimeout(() => {\n        navigation.goBack();\n      }, 1500);\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Surface style={styles.surface}>\n        <View style={styles.header}>\n          <Button\n            mode=\"outlined\"\n            onPress={() => navigation.goBack()}\n            style={styles.backButton}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"arrow-left\" size={size} color={color} />\n            )}\n          >\n            Volver\n          </Button>\n        <Text style={styles.title}>Registrar Nueva Partida</Text>\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 1\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer1 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer1(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.playerSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"account\" size={20} color={theme.colors.primary} /> Jugador 2\n          </Text>\n          {players.map(player => (\n            <Button\n              key={player.id}\n              mode={selectedPlayer2 === player.id ? 'contained' : 'outlined'}\n              onPress={() => setSelectedPlayer2(player.id)}\n              style={styles.playerButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"account-circle\" size={size} color={color} />\n              )}\n            >\n              {player.name}\n            </Button>\n          ))}\n        </View>\n\n        <View style={styles.resultSection}>\n          <Text style={styles.sectionTitle}>\n            <MaterialCommunityIcons name=\"trophy\" size={20} color={theme.colors.primary} /> Resultado\n          </Text>\n          <View style={styles.resultButtons}>\n            <Button\n              mode={player1Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('win');\n                setPlayer2Result('lose');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 1 Gana\n            </Button>\n            <Button\n              mode={player2Result === 'win' ? 'contained' : 'outlined'}\n              onPress={() => {\n                setPlayer1Result('lose');\n                setPlayer2Result('win');\n              }}\n              style={styles.resultButton}\n              icon={({ size, color }) => (\n                <MaterialCommunityIcons name=\"trophy-variant\" size={size} color={color} />\n              )}\n            >\n              Jugador 2 Gana\n            </Button>\n          </View>\n        </View>\n\n        <Button\n          mode=\"contained\"\n          onPress={handleSubmit}\n          style={[\n            styles.submitButton,\n            submitStatus === 'success' && styles.successButton,\n            submitStatus === 'error' && styles.errorButton\n          ]}\n          loading={isSubmitting}\n          disabled={isSubmitting}\n          icon={({ size, color }) => {\n            if (submitStatus === 'success') {\n              return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n            } else if (submitStatus === 'error') {\n              return <MaterialCommunityIcons name=\"alert-circle\" size={size} color={color} />;\n            }\n            return <MaterialCommunityIcons name=\"check-circle\" size={size} color={color} />;\n          }}\n        >\n          {isSubmitting ? 'Registrando...' : \n           submitStatus === 'success' ? '¡Partida Registrada!' :\n           submitStatus === 'error' ? 'Error al Registrar' :\n           'Registrar Partida'}\n        </Button>\n      </Surface>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  surface: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 4,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    flex: 1,\n    textAlign: 'center',\n  },\n  playerSection: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  playerButton: {\n    marginBottom: 8,\n  },\n  resultSection: {\n    marginBottom: 24,\n  },\n  resultButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  resultButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  submitButton: {\n    marginTop: 16,\n  },\n  successButton: {\n    backgroundColor: '#4CAF50',\n  },\n  errorButton: {\n    backgroundColor: '#f44336',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AddMatchScreen;\n","// src/screens/MatchesScreen.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, FlatList, Alert } from 'react-native';\nimport { Text, Card, Button, ActivityIndicator, Surface, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { getMatches, deleteMatch } from '../api/api';\nimport { authService } from '../api/authService';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\ntype MatchesScreenNavigationProp = StackNavigationProp<RootStackParamList, 'MainTabs'>;\n\ninterface Match {\n  id: number;\n  player1_id: number;\n  player2_id: number;\n  player1_result: string;\n  player2_result: string;\n  match_date: string;\n  winner_id: number;\n  player1_name: string;\n  player2_name: string;\n  winner_name: string;\n}\n\nconst MatchesScreen = () => {\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigation = useNavigation<MatchesScreenNavigationProp>();\n  const theme = useTheme();\n\n  const fetchMatches = async () => {\n    try {\n      setLoading(true);\n      const data = await getMatches();\n      setMatches(data);\n      setError(null);\n    } catch (err) {\n      setError('Error al cargar las partidas');\n      console.error('Error al cargar partidas:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMatches();\n  }, []);\n\n  const handleDeleteMatch = async (matchId: number) => {\n    try {\n      await deleteMatch(matchId);\n      setMatches(matches.filter(match => match.id !== matchId));\n      Alert.alert('Éxito', 'Partida eliminada correctamente');\n    } catch (error) {\n      Alert.alert('Error', 'No se pudo eliminar la partida');\n    }\n  };\n\n  const handleNewMatch = () => {\n    navigation.navigate('AddMatch');\n  };\n\n  const renderMatch = ({ item }: { item: Match }) => (\n    <Card style={styles.matchCard}>\n      <Card.Content>\n        <Text style={styles.matchTitle}>\n          {item.player1_name} vs {item.player2_name}\n        </Text>\n        <Text style={styles.matchDate}>\n          Fecha: {new Date(item.match_date).toLocaleDateString()}\n        </Text>\n        <Text style={styles.matchResult}>\n          Ganador: {item.winner_name}\n        </Text>\n        <Text style={styles.matchScore}>\n          Resultado: {item.player1_result === 'win' ? 'Ganó' : 'Perdió'} {item.player1_name} - \n          {item.player2_result === 'win' ? 'Ganó' : 'Perdió'} {item.player2_name}\n        </Text>\n      </Card.Content>\n      <Card.Actions>\n        <Button onPress={() => handleDeleteMatch(item.id)}>Eliminar</Button>\n      </Card.Actions>\n    </Card>\n  );\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <Button onPress={fetchMatches}>Reintentar</Button>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Surface style={styles.header}>\n        <View style={styles.titleContainer}>\n          <MaterialCommunityIcons name=\"history\" size={32} color={theme.colors.primary} />\n          <Text style={styles.title}>Historial de Partidas</Text>\n        </View>\n        <Button \n          mode=\"contained\" \n          onPress={handleNewMatch}\n          style={styles.newMatchButton}\n          icon={({ size, color }) => (\n            <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n          )}\n        >\n          Nueva Partida\n        </Button>\n      </Surface>\n      <FlatList\n        data={matches}\n        renderItem={renderMatch}\n        keyExtractor={item => item.id.toString()}\n        contentContainerStyle={styles.listContainer}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  header: {\n    padding: 16,\n    elevation: 4,\n    backgroundColor: '#fff',\n    marginBottom: 8,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  newMatchButton: {\n    marginTop: 8,\n    borderRadius: 8,\n  },\n  listContainer: {\n    padding: 16,\n  },\n  matchCard: {\n    marginBottom: 16,\n    elevation: 2,\n    borderRadius: 8,\n  },\n  matchTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  matchDate: {\n    color: '#666',\n    marginBottom: 4,\n  },\n  matchResult: {\n    color: '#2196F3',\n    marginBottom: 4,\n  },\n  matchScore: {\n    color: '#4CAF50',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n});\n\nexport default MatchesScreen;\n","// src/navigation/AppNavigator.tsx\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTheme } from 'react-native-paper';\nimport { RootStackParamList, MainTabParamList } from './types';\n\n// Screens\nimport HomeScreen from '../screens/HomeScreen';\nimport PlayersScreen from '../screens/PlayersScreen';\nimport TournamentScreen from '../screens/TournamentScreen';\nimport RankingScreen from '../screens/RankingScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport AddMatchScreen from '../screens/AddMatchScreen';\nimport MatchesScreen from '../screens/MatchesScreen';\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction HomeStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"HomeScreen\" \n        component={HomeScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction PlayerStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"PlayerScreen\" \n        component={PlayersScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction MatchesStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MatchesScreen\" \n        component={MatchesScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TournamentStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"TournamentScreen\" \n        component={TournamentScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction RankingStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"RankingScreen\" \n        component={RankingScreen}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nconst MainTabs = () => {\n  const theme = useTheme();\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.outline,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopWidth: 1,\n          borderTopColor: '#ddd',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"HomeTab\"\n        component={HomeStack}\n        options={{\n          tabBarLabel: 'Inicio',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"PlayersTab\"\n        component={PlayerStack}\n        options={{\n          tabBarLabel: 'Jugadores',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"account-group\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"MatchesTab\"\n        component={MatchesStack}\n        options={{\n          tabBarLabel: 'Partidos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"table-tennis\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"TournamentsTab\"\n        component={TournamentStack}\n        options={{\n          tabBarLabel: 'Torneos',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"trophy\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"RankingsTab\"\n        component={RankingStack}\n        options={{\n          tabBarLabel: 'Rankings',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"podium\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"MainTabs\" component={MainTabs} />\n        <Stack.Screen name=\"AddMatch\" component={AddMatchScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n","import React from 'react';\nimport { PaperProvider } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { AppProvider } from './src/context/AppContext';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { CombinedDefaultTheme } from './src/theme';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <PaperProvider theme={CombinedDefaultTheme}>\n      <AppProvider>\n          <AppNavigator />\n      </AppProvider>\n      </PaperProvider>\n    </SafeAreaProvider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/AppPingPong/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [159], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["CombinedDefaultTheme","_objectSpread","MD3LightTheme","NavigationDefaultTheme","colors","MD3DarkTheme","NavigationDarkTheme","primary","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","error","onError","errorContainer","onErrorContainer","background","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","authService","_createClass","AuthService","_classCallCheck","token","user","id","username","role","console","log","key","value","_register","_asyncToGenerator","password","response","fetch","API_URL","method","headers","body","JSON","stringify","ok","json","Error","_x","_x2","apply","arguments","_login","this","_x3","_x4","_logout","api","axios","create","baseURL","timeout","validateStatus","status","_ref","get","data","_error$response","_error$config","_error$config2","_error$config3","isAxiosError","message","code","config","url","interceptors","request","use","_ref2","AsyncStorage","getItem","Promise","reject","_ref3","_error$config4","_error$response2","_error$response3","_error$response4","logout","window","location","href","getPlayers","_ref4","addMatch","_ref5","name","post","_ref6","player1Id","player2Id","player1Result","player2Result","requestBody","player1_id","player2_id","player1_result","player2_result","defaults","_error$response5","_error$response6","_error$response7","_error$config5","_error$config6","_error$config7","_error$config8","statusText","_x5","_x6","_x7","getMatches","_ref7","deleteMatch","_ref8","delete","_ref9","_x9","_ref10","_ref11","_ref12","tournament","_ref13","put","_ref14","_ref15","tournamentId","_ref16","playerId","_ref17","ranking","_ref18","_ref19","AppContext","createContext","undefined","AppProvider","children","_useState","useState","_useState2","_slicedToArray","isOfflineMode","setIsOfflineMode","_useState3","_useState4","soundEnabled","setSoundEnabled","_useState5","_useState6","players","setPlayers","_useState7","_useState8","matches","setMatches","_useState9","_useState10","tournaments","setTournaments","_useState11","_useState12","comments","setComments","_useState13","isAuthenticated","_useState14","setIsAuthenticated","useEffect","loadData","storedPlayers","storedMatches","storedTournaments","storedComments","storedSoundEnabled","parse","saveData","setItem","toggleSound","newSoundEnabled","addPlayer","player","newPlayer","length","stats_wins","stats_losses","stats_draws","concat","_toConsumableArray","updatePlayer","map","p","addLocalMatch","match","newMatch","updatedPlayers","_match$winner","_match$winner2","_match$winner3","_match$winner4","_match$winner5","_match$winner6","player1","victories","winner","player2","prevMatches","all","_yield$Promise$all","then","res","_yield$Promise$all2","updatedMatches","addComment","matchId","text","newComment","userId","timestamp","Date","createTournament","newTournament","updateTournament","t","_jsx","Provider","theme","toggleOfflineMode","playerService","_getPlayers","createPlayer","_createPlayer","_updatePlayer","deletePlayer","_deletePlayer","addVictory","_addVictory","styles","StyleSheet","scrollView","flex","scrollContent","flexGrow","container","backgroundColor","paddingBottom","header","padding","marginHorizontal","marginTop","borderRadius","headerContent","alignItems","title","textAlign","podiumContainer","margin","podiumHeader","flexDirection","justifyContent","marginBottom","gap","podiumTitle","fontWeight","podium","height","podiumPosition","width","paddingTop","goldPosition","zIndex","borderWidth","borderColor","silverPosition","marginRight","bronzePosition","marginLeft","medalContainer","medalText","fontSize","position","bottom","playerName","opacity","buttonsContainer","button","marginVertical","logo","loadingContainer","navigation","useNavigation","useTheme","topPlayers","setTopPlayers","loading","setLoading","dynamicStyles","goldPlayerName","color","victoriesContainer","paddingHorizontal","paddingVertical","fetchTopPlayers","sortedPlayers","sort","a","b","slice","Alert","alert","View","style","ActivityIndicator","size","ScrollView","contentContainerStyle","_jsxs","Surface","MaterialCommunityIcons","Text","variant","Button","mode","onPress","navigate","icon","screen","content","playerCard","playerInfo","playerDetails","addPlayerSection","input","addButton","actions","modalContainer","modalContent","modalTitle","modalText","modalButtons","modalButton","topPlayerCard","avatar","nameContainer","crownIcon","victoriesText","emptyContainer","emptyText","Animated","Value","modalScale","newName","setNewName","editingPlayer","setEditingPlayer","editName","setEditName","selectedPlayer","setSelectedPlayer","_useState15","_useState16","deleteModalVisible","setDeleteModalVisible","fetchPlayers","trim","handleUpdatePlayer","handleDelete","confirmDelete","closeModal","timing","toValue","duration","useNativeDriver","start","spring","tension","friction","FlatList","keyExtractor","item","toString","renderItem","_getTopPlayer","isTopPlayer","reduce","prev","current","Avatar","label","substring","toUpperCase","textColor","ListEmptyComponent","TextInput","onChangeText","right","Icon","Portal","Modal","visible","onDismiss","transform","scale","left","buttonColor","tournamentService","TournamentService","_getAllTournaments","_getTournament","_createTournament","_updateTournament","_deleteTournament","TournamentScreen","modalVisible","setModalVisible","nombre","fecha_inicio","fecha_fin","estado","setNewTournament","fetchTournaments","getAllTournaments","handleCreateTournament","TouchableOpacity","addButtonText","loadingText","card","tournamentName","datesContainer","date","toLocaleDateString","statusBadge","id_torneo","list","animationType","transparent","onRequestClose","placeholder","cancelButton","buttonText","createButton","alignSelf","maxWidth","rankingService","RankingService","_getTournamentRankings","_getPlayerRankings","_createRanking","_error$response8","_error$response9","_error$config9","_updateRanking","_error$response10","_error$response11","_error$response12","_error$config10","_error$config11","_error$config12","_deleteRanking","_error$response13","_error$response14","_error$response15","_error$config13","_error$config14","_error$config15","RankingScreen","_tournaments$find","_tournaments$find2","_players$find","rankings","setRankings","selectedTournament","setSelectedTournament","showTournamentSelector","setShowTournamentSelector","showPlayerSelector","setShowPlayerSelector","_useState17","id_jugador","partidas_ganadas","partidas_perdidas","_useState18","newRanking","setNewRanking","fetchRankings","getTournamentRankings","handleCreateRanking","rankingData","posicion","createRanking","tournamentSelector","selectorLabel","selectorButton","selectorButtonText","find","selectorList","selectorItem","selectorItemText","positionContainer","detailsContainer","nombre_jugador","statsContainer","stats","percentage","porcentaje_victorias","id_rankings","keyboardType","parseInt","maxHeight","borderBottomWidth","borderBottomColor","section","settingItem","settingText","_useApp","context","useContext","useApp","Switch","onValueChange","backButton","playerSection","sectionTitle","playerButton","resultSection","resultButtons","resultButton","submitButton","successButton","errorButton","selectedPlayer1","setSelectedPlayer1","selectedPlayer2","setSelectedPlayer2","setPlayer1Result","setPlayer2Result","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleSubmit","setTimeout","goBack","disabled","titleContainer","newMatchButton","listContainer","matchCard","matchTitle","matchDate","matchResult","matchScore","errorText","setError","fetchMatches","err","handleDeleteMatch","filter","Card","Content","player1_name","player2_name","match_date","winner_name","Actions","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","HomeStack","Navigator","Screen","component","HomeScreen","options","headerShown","PlayerStack","PlayersScreen","MatchesStack","MatchesScreen","TournamentStack","RankingStack","MainTabs","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","borderTopWidth","borderTopColor","tabBarLabel","tabBarIcon","SettingsScreen","NavigationContainer","AddMatchScreen","App","SafeAreaProvider","PaperProvider","AppNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}